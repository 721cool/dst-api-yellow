{
    "AnimStateSetPercent:动画播放百分比，固定帧，不会动（动画名，百分比）": {
        "prefix": "AnimState:SetPercent",
        "body": "AnimState:SetPercent(${1:animname},${2:percent})",
        "description": "参数:(animname)<string>[],(percent)<number>[] 返回值:无返回值 贡献者:@Runar"
    },
    "AnimStateSetDepthTestEnabled:UNKNOWN": {
        "prefix": "AnimState:SetDepthTestEnabled",
        "body": "AnimState:SetDepthTestEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetInheritsSortKey:UNKNOWN": {
        "prefix": "AnimState:GetInheritsSortKey",
        "body": "AnimState:GetInheritsSortKey()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetBuild:buildname 就是 scml 文件的名字": {
        "prefix": "AnimState:SetBuild",
        "body": "AnimState:SetBuild(${1:buildname})",
        "description": "参数:(buildname)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetManualBB:UNKNOWN": {
        "prefix": "AnimState:SetManualBB",
        "body": "AnimState:SetManualBB()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateOverrideSaturation:UNKNOWN": {
        "prefix": "AnimState:OverrideSaturation",
        "body": "AnimState:OverrideSaturation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetLayer:UNKNOWN": {
        "prefix": "AnimState:SetLayer",
        "body": "AnimState:SetLayer(${1:const})",
        "description": "参数:(const)<any>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetSymbolExchange:把symbol2放到symbol1前": {
        "prefix": "AnimState:SetSymbolExchange",
        "body": "AnimState:SetSymbolExchange(${1:symbol1},${2:symbol2})",
        "description": "参数:(symbol1)<string>[],(symbol2)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetOceanBlendParams:UNKNOWN": {
        "prefix": "AnimState:SetOceanBlendParams",
        "body": "AnimState:SetOceanBlendParams(${1:num})",
        "description": "参数:(num)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateAnimDone:判断动画是否播放完": {
        "prefix": "AnimState:AnimDone",
        "body": "AnimState:AnimDone()",
        "description": "参数: 返回值:<boolean>[] 贡献者:@"
    },
    "AnimStateOverrideBrightness:UNKNOWN": {
        "prefix": "AnimState:OverrideBrightness",
        "body": "AnimState:OverrideBrightness()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetBankAndPlayAnimation:看名字能猜到是 SetBank()与PlayAnimation()两个方法的结合": {
        "prefix": "AnimState:SetBankAndPlayAnimation",
        "body": "AnimState:SetBankAndPlayAnimation(${1:bankname},${2:animname})",
        "description": "参数:(bankname)<string>[],(animname)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetMultiSymbolExchange:把symbol1放到symbol2前": {
        "prefix": "AnimState:SetMultiSymbolExchange",
        "body": "AnimState:SetMultiSymbolExchange(${1:symbol1},${2:symbol2})",
        "description": "参数:(symbol1)<string>[],(symbol2)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetBuild:获取build名": {
        "prefix": "AnimState:GetBuild",
        "body": "AnimState:GetBuild()",
        "description": "参数: 返回值:<string>[] 贡献者:@"
    },
    "AnimStateGetCurrentAnimationTime:获取当前动画播放的时间，GetCurrentAnimationLength获取的是动画的总长度，GetCurrentAnimationTime获取的是动画当前播放的时间（我猜的）": {
        "prefix": "AnimState:GetCurrentAnimationTime",
        "body": "AnimState:GetCurrentAnimationTime()",
        "description": "参数: 返回值:<number>[] 贡献者:@"
    },
    "AnimStateOverrideSkinSymbol:覆盖皮肤通道，与OverrideSymbol用法一致": {
        "prefix": "AnimState:OverrideSkinSymbol",
        "body": "AnimState:OverrideSkinSymbol(${1:oldsymbol},${2:skin_build},${3:newsymbol})",
        "description": "参数:(oldsymbol)<string>[],(skin_build)<string>[],(newsymbol)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetSymbolBloom:UNKNOWN": {
        "prefix": "AnimState:SetSymbolBloom",
        "body": "AnimState:SetSymbolBloom(${1:name})",
        "description": "参数:(name)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetSymbolHSB:UNKNOWN": {
        "prefix": "AnimState:GetSymbolHSB",
        "body": "AnimState:GetSymbolHSB()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateClearBloomEffectHandle:清除泛光效果句柄": {
        "prefix": "AnimState:ClearBloomEffectHandle",
        "body": "AnimState:ClearBloomEffectHandle()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetSymbolPosition:获取通道的位置坐标，四个参数，第一个是通道名，后面三个是x,y,z坐标的偏移量": {
        "prefix": "AnimState:GetSymbolPosition",
        "body": "AnimState:GetSymbolPosition(${1:symbolname},${2:offset_x},${3:offset_y},${4:offset_z})",
        "description": "参数:(symbolname)<string>[通道名],(offset_x)<number>[],(offset_y)<number>[],(offset_z)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetSortWorldOffset:UNKNOWN": {
        "prefix": "AnimState:SetSortWorldOffset",
        "body": "AnimState:SetSortWorldOffset(${1:param1},${2:param2},${3:param3})",
        "description": "参数:(param1)<number>[],(param2)<number>[],(param3)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetDepthWriteEnabled:UNKNOWN": {
        "prefix": "AnimState:SetDepthWriteEnabled",
        "body": "AnimState:SetDepthWriteEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetCurrentAnimationLength:动画总长度，单位：秒，1 帧是 1/30 秒，0.33333 秒": {
        "prefix": "AnimState:GetCurrentAnimationLength",
        "body": "AnimState:GetCurrentAnimationLength()",
        "description": "参数: 返回值:<number>[] 贡献者:@"
    },
    "AnimStateOverrideMultColour:覆盖叠乘的颜色": {
        "prefix": "AnimState:OverrideMultColour",
        "body": "AnimState:OverrideMultColour(${1:r},${2:g},${3:b},${4:a})",
        "description": "参数:(r)<number>[],(g)<number>[],(b)<number>[],(a)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateIsSymbolOverridden:通道是否被覆盖": {
        "prefix": "AnimState:IsSymbolOverridden",
        "body": "AnimState:IsSymbolOverridden()",
        "description": "参数: 返回值:<boolean>[] 贡献者:@"
    },
    "AnimStateOverrideSymbol:覆盖旧通道": {
        "prefix": "AnimState:OverrideSymbol",
        "body": "AnimState:OverrideSymbol(${1:oldsymbol},${2:newbuild},${3:newsymbol})",
        "description": "参数:(oldsymbol)<string>[],(newbuild)<string>[],(newsymbol)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetSymbolBrightness:UNKNOWN": {
        "prefix": "AnimState:SetSymbolBrightness",
        "body": "AnimState:SetSymbolBrightness(${1:symbol},${2:brightness})",
        "description": "参数:(symbol)<string>[],(brightness)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetHatOffset:UNKNOWN": {
        "prefix": "AnimState:SetHatOffset",
        "body": "AnimState:SetHatOffset(${1:param1},${2:param2})",
        "description": "参数:(param1)<number>[],(param2)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateFastForward:UNKNOWN": {
        "prefix": "AnimState:FastForward",
        "body": "AnimState:FastForward(${1:dt})",
        "description": "参数:(dt)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetSaturation:UNKNOWN": {
        "prefix": "AnimState:GetSaturation",
        "body": "AnimState:GetSaturation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetBloomEffectHandle:设置泛光效果句柄": {
        "prefix": "AnimState:SetBloomEffectHandle",
        "body": "AnimState:SetBloomEffectHandle(${1:path})",
        "description": "参数:(path)<string>[句柄文件相对根目录的完整路径] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetSaturation:UNKNOWN": {
        "prefix": "AnimState:SetSaturation",
        "body": "AnimState:SetSaturation(${1:saturation})",
        "description": "参数:(saturation)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetHue:UNKNOWN": {
        "prefix": "AnimState:SetHue",
        "body": "AnimState:SetHue(${1:hue})",
        "description": "参数:(hue)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetHue:UNKNOWN": {
        "prefix": "AnimState:GetHue",
        "body": "AnimState:GetHue()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetBank:Spriter 里动画的父级节点的名字": {
        "prefix": "AnimState:SetBank",
        "body": "AnimState:SetBank(${1:name})",
        "description": "参数:(name)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateClearAllOverrideSymbols:清除所有覆盖通道": {
        "prefix": "AnimState:ClearAllOverrideSymbols",
        "body": "AnimState:ClearAllOverrideSymbols()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateClearOverrideBuild:清除覆盖的build": {
        "prefix": "AnimState:ClearOverrideBuild",
        "body": "AnimState:ClearOverrideBuild()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateUsePointFiltering:UNKNOWN": {
        "prefix": "AnimState:UsePointFiltering",
        "body": "AnimState:UsePointFiltering(${1:bool})",
        "description": "参数:(bool)<boolean>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateUseColourCube:UNKNOWN": {
        "prefix": "AnimState:UseColourCube",
        "body": "AnimState:UseColourCube(${1:bool})",
        "description": "参数:(bool)<boolean>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetHaunted:让物品产生闪烁效果": {
        "prefix": "AnimState:SetHaunted",
        "body": "AnimState:SetHaunted(${1:bool})",
        "description": "参数:(bool)<boolean>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateClearDefaultEffectHandle:清除默认效果句柄": {
        "prefix": "AnimState:ClearDefaultEffectHandle",
        "body": "AnimState:ClearDefaultEffectHandle()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetLightOverride:UNKNOWN": {
        "prefix": "AnimState:SetLightOverride",
        "body": "AnimState:SetLightOverride(${1:num})",
        "description": "参数:(num)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateAssignItemSkins:重新分配物品的外观": {
        "prefix": "AnimState:AssignItemSkins",
        "body": "AnimState:AssignItemSkins(${1:userid},${2:body},${3:hand},${4:legs},${5:feet})",
        "description": "参数:(userid)<any>[],(body)<any>[],(hand)<any>[],(legs)<any>[],(feet)<any>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetMultColour:颜色叠乘，受原图颜色影响，参数 0-1": {
        "prefix": "AnimState:SetMultColour",
        "body": "AnimState:SetMultColour(${1:r},${2:g},${3:b},${4:a})",
        "description": "参数:(r)<number>[],(g)<number>[],(b)<number>[],(a)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateBuildHasSymbol:当前build下是否有对应通道": {
        "prefix": "AnimState:BuildHasSymbol",
        "body": "AnimState:BuildHasSymbol(${1:symbolname})",
        "description": "参数:(symbolname)<string>[通道名] 返回值:<boolean>[] 贡献者:@"
    },
    "AnimStateOverrideItemSkinSymbol:参数是5个，用法与OverrideSymbol类似，最后一个参数不知道什么意思": {
        "prefix": "AnimState:OverrideItemSkinSymbol",
        "body": "AnimState:OverrideItemSkinSymbol(${1:oldsymbol},${2:skin_build},${3:newsymbol},${4:guid},${5:abc})",
        "description": "参数:(oldsymbol)<string>[],(skin_build)<string>[],(newsymbol)<string>[],(guid)<any>[],(abc)<any>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetMultColour:获取叠乘的颜色，返回r,g,b,a": {
        "prefix": "AnimState:GetMultColour",
        "body": "AnimState:GetMultColour()",
        "description": "参数: 返回值:<number>[],<number>[],<number>[],<number>[] 贡献者:@"
    },
    "AnimStateSetDefaultEffectHandle:设置默认效果句柄": {
        "prefix": "AnimState:SetDefaultEffectHandle",
        "body": "AnimState:SetDefaultEffectHandle(${1:path})",
        "description": "参数:(path)<string>[相对根目录的完整路径] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetSymbolLightOverride:UNKNOWN": {
        "prefix": "AnimState:SetSymbolLightOverride",
        "body": "AnimState:SetSymbolLightOverride(${1:symbol},${2:override})",
        "description": "参数:(symbol)<string>[],(override)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetCurrentAnimationFrame:获取当前动画帧数": {
        "prefix": "AnimState:GetCurrentAnimationFrame",
        "body": "AnimState:GetCurrentAnimationFrame()",
        "description": "参数: 返回值:<number>[] 贡献者:@"
    },
    "AnimStateAddOverrideBuild:添加新build": {
        "prefix": "AnimState:AddOverrideBuild",
        "body": "AnimState:AddOverrideBuild(${1:buildname})",
        "description": "参数:(buildname)<string>[build名] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetClientsideBuildOverride:替换客户端显示的build": {
        "prefix": "AnimState:SetClientsideBuildOverride",
        "body": "AnimState:SetClientsideBuildOverride(${1:state},${2:build},${3:overridebuild})",
        "description": "参数:(state)<string>[],(build)<string>[],(overridebuild)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetDepthBias:UNKNOWN": {
        "prefix": "AnimState:SetDepthBias",
        "body": "AnimState:SetDepthBias()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetHighlightColour:设置高光色彩": {
        "prefix": "AnimState:SetHighlightColour",
        "body": "AnimState:SetHighlightColour(${1:r},${2:g},${3:b},${4:a})",
        "description": "参数:(r)<number>[],(g)<number>[],(b)<number>[],(a)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetUILightParams:UNKNOWN": {
        "prefix": "AnimState:SetUILightParams",
        "body": "AnimState:SetUILightParams(${1:param1},${2:param2},${3:param3},${4:param4})",
        "description": "参数:(param1)<number>[],(param2)<number>[],(param3)<number>[],(param4)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetFinalOffset:UNKNOWN": {
        "prefix": "AnimState:SetFinalOffset",
        "body": "AnimState:SetFinalOffset(${1:param})",
        "description": "参数:(param)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetSymbolSaturation:UNKNOWN": {
        "prefix": "AnimState:SetSymbolSaturation",
        "body": "AnimState:SetSymbolSaturation(${1:symbol},${2:saturation})",
        "description": "参数:(symbol)<string>[],(saturation)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetSymbolMultColour:设置通道叠乘颜色": {
        "prefix": "AnimState:SetSymbolMultColour",
        "body": "AnimState:SetSymbolMultColour(${1:r},${2:g},${3:b},${4:a})",
        "description": "参数:(r)<number>[],(g)<number>[],(b)<number>[],(a)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStatePlayAnimation:播放动画，animname：动画名，loop：是否循环播放，默认是 false": {
        "prefix": "AnimState:PlayAnimation",
        "body": "AnimState:PlayAnimation(${1:animname},${2:loop})",
        "description": "参数:(animname)<string>[],(loop)<boolean|nil>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetInheritsSortKey:UNKNOWN": {
        "prefix": "AnimState:SetInheritsSortKey",
        "body": "AnimState:SetInheritsSortKey(${1:bool})",
        "description": "参数:(bool)<boolean>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetSymbolAddColour:设置通道叠加颜色": {
        "prefix": "AnimState:SetSymbolAddColour",
        "body": "AnimState:SetSymbolAddColour(${1:r},${2:g},${3:b},${4:a})",
        "description": "参数:(r)<number>[],(g)<number>[],(b)<number>[],(a)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetSymbolHue:UNKNOWN": {
        "prefix": "AnimState:SetSymbolHue",
        "body": "AnimState:SetSymbolHue(${1:symbol},${2:hue})",
        "description": "参数:(symbol)<string>[],(hue)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetSkin:UNKNOWN": {
        "prefix": "AnimState:SetSkin",
        "body": "AnimState:SetSkin()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetScale:贴图缩放": {
        "prefix": "AnimState:SetScale",
        "body": "AnimState:SetScale(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<number>[],(y)<number>[],(z)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetRayTestOnBB:UNKNOWN": {
        "prefix": "AnimState:SetRayTestOnBB",
        "body": "AnimState:SetRayTestOnBB(${1:bool})",
        "description": "参数:(bool)<boolean>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetBrightness:UNKNOWN": {
        "prefix": "AnimState:GetBrightness",
        "body": "AnimState:GetBrightness()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateAnimateWhilePaused:暂停时是否也播放动画": {
        "prefix": "AnimState:AnimateWhilePaused",
        "body": "AnimState:AnimateWhilePaused(${1:bool})",
        "description": "参数:(bool)<boolean>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateHideSymbol:隐藏通道": {
        "prefix": "AnimState:HideSymbol",
        "body": "AnimState:HideSymbol(${1:symbolname})",
        "description": "参数:(symbolname)<string>[通道名] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetOrientation:设置动画的方向，参数从constants.lua里取ANIM_ORIENTATION": {
        "prefix": "AnimState:SetOrientation",
        "body": "AnimState:SetOrientation(${1:ANIM_ORIENTATION})",
        "description": "参数:(ANIM_ORIENTATION)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateShowSymbol:显示通道，与HideSymbol对应": {
        "prefix": "AnimState:ShowSymbol",
        "body": "AnimState:ShowSymbol(${1:symbolname})",
        "description": "参数:(symbolname)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetAddColour:获取叠加的颜色，返回r,g,b,a": {
        "prefix": "AnimState:GetAddColour",
        "body": "AnimState:GetAddColour()",
        "description": "参数: 返回值:<number>[],<number>[],<number>[],<number>[] 贡献者:@"
    },
    "AnimStateSetSortOrder:UNKNOWN": {
        "prefix": "AnimState:SetSortOrder",
        "body": "AnimState:SetSortOrder(${1:order})",
        "description": "参数:(order)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetCurrentFacing:获取当前动画的朝向，返回0，1，2，3，分别代表什么方向就需要进游戏测试了": {
        "prefix": "AnimState:GetCurrentFacing",
        "body": "AnimState:GetCurrentFacing()",
        "description": "参数: 返回值:<number>[] 贡献者:@"
    },
    "AnimStateSetFloatParams:UNKNOWN": {
        "prefix": "AnimState:SetFloatParams",
        "body": "AnimState:SetFloatParams(${1:param1},${2:param2},${3:param3})",
        "description": "参数:(param1)<number>[],(param2)<number>[],(param3)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetTime:设置当前动画从第几秒开始播放（秒）": {
        "prefix": "AnimState:SetTime",
        "body": "AnimState:SetTime(${1:time})",
        "description": "参数:(time)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetSortOrder:UNKNOWN": {
        "prefix": "AnimState:GetSortOrder",
        "body": "AnimState:GetSortOrder()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetErosionParams:UNKNOWN": {
        "prefix": "AnimState:SetErosionParams",
        "body": "AnimState:SetErosionParams(${1:param1},${2:param2},${3:param3})",
        "description": "参数:(param1)<number>[],(param2)<number>[],(param3)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetDeltaTimeMultiplier:动画播放速度（速度倍数）": {
        "prefix": "AnimState:SetDeltaTimeMultiplier",
        "body": "AnimState:SetDeltaTimeMultiplier(${1:speed})",
        "description": "参数:(speed)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateShow:显示图层(Layer)": {
        "prefix": "AnimState:Show",
        "body": "AnimState:Show(${1:layername})",
        "description": "参数:(layername)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetWorldSpaceAmbientLightPos:UNKNOWN": {
        "prefix": "AnimState:SetWorldSpaceAmbientLightPos",
        "body": "AnimState:SetWorldSpaceAmbientLightPos(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<number>[],(y)<number>[],(z)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateClearSymbolExchanges:清除所有覆盖通道": {
        "prefix": "AnimState:ClearSymbolExchanges",
        "body": "AnimState:ClearSymbolExchanges()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStatePause:暂停动画，无参": {
        "prefix": "AnimState:Pause",
        "body": "AnimState:Pause()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetClientSideBuildOverrideFlag:UNKNOWN": {
        "prefix": "AnimState:SetClientSideBuildOverrideFlag",
        "body": "AnimState:SetClientSideBuildOverrideFlag(${1:name},${2:flag})",
        "description": "参数:(name)<string>[],(flag)<boolean>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateHide:隐藏图层(Layer)": {
        "prefix": "AnimState:Hide",
        "body": "AnimState:Hide(${1:layername})",
        "description": "参数:(layername)<string>[层名] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetBrightness:UNKNOWN": {
        "prefix": "AnimState:SetBrightness",
        "body": "AnimState:SetBrightness(${1:num})",
        "description": "参数:(num)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateSetAddColour:颜色叠加，几乎不受原图颜色影响，参数 0-1": {
        "prefix": "AnimState:SetAddColour",
        "body": "AnimState:SetAddColour(${1:r},${2:g},${3:b},${4:a})",
        "description": "参数:(r)<number>[],(g)<number>[],(b)<number>[],(a)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetSymbolAddColour:获取通道叠加的颜色，返回r,g,b,a": {
        "prefix": "AnimState:GetSymbolAddColour",
        "body": "AnimState:GetSymbolAddColour()",
        "description": "参数: 返回值:<number>[],<number>[],<number>[],<number>[] 贡献者:@"
    },
    "AnimStateResume:恢复暂停的动画，无参": {
        "prefix": "AnimState:Resume",
        "body": "AnimState:Resume()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStatePushAnimation:推动画到播放列表里，与PlayAnimation不同的是，PlayAnimation执行后动画会立即执行，但PushAnimation执行后会等当前动画执行完，然后再播放Push的动画": {
        "prefix": "AnimState:PushAnimation",
        "body": "AnimState:PushAnimation(${1:animname},${2:loop})",
        "description": "参数:(animname)<string>[],(loop)<boolean|nil>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateGetSymbolMultColour:获取通道叠乘的颜色，返回r,g,b,a": {
        "prefix": "AnimState:GetSymbolMultColour",
        "body": "AnimState:GetSymbolMultColour()",
        "description": "参数: 返回值:<number>[],<number>[],<number>[],<number>[] 贡献者:@"
    },
    "AnimStateClearSymbolBloom:清除通道泛光": {
        "prefix": "AnimState:ClearSymbolBloom",
        "body": "AnimState:ClearSymbolBloom(${1:symbol})",
        "description": "参数:(symbol)<string>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateOverrideShade:UNKNOWN": {
        "prefix": "AnimState:OverrideShade",
        "body": "AnimState:OverrideShade(${1:num})",
        "description": "参数:(num)<number>[] 返回值:无返回值 贡献者:@"
    },
    "AnimStateOverrideHue:UNKNOWN": {
        "prefix": "AnimState:OverrideHue",
        "body": "AnimState:OverrideHue()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "AnimStateIsCurrentAnimation:当前是否是当前动画名": {
        "prefix": "AnimState:IsCurrentAnimation",
        "body": "AnimState:IsCurrentAnimation(${1:animname})",
        "description": "参数:(animname)<string>[动画名] 返回值:<boolean>[] 贡献者:@"
    },
    "AnimStateGetSymbolOverride:获取覆盖通道名": {
        "prefix": "AnimState:GetSymbolOverride",
        "body": "AnimState:GetSymbolOverride(${1:symbolname})",
        "description": "参数:(symbolname)<string>[通道名] 返回值:<string>[] 贡献者:@"
    },
    "AnimStateGetSkinBuild:获取当前皮肤的build": {
        "prefix": "AnimState:GetSkinBuild",
        "body": "AnimState:GetSkinBuild()",
        "description": "参数: 返回值:<string>[] 贡献者:@"
    },
    "AnimStateCompareSymbolBuilds:比较默认通道defaultsymbol是否是symbol通道，一般用来自定义idle动画": {
        "prefix": "AnimState:CompareSymbolBuilds",
        "body": "AnimState:CompareSymbolBuilds(${1:defaultsymbol},${2:symbol})",
        "description": "参数:(defaultsymbol)<string>[通道名],(symbol)<string>[通道名] 返回值:<boolean>[] 贡献者:@"
    },
    "AnimStateClearOverrideSymbol:清除覆盖的通道": {
        "prefix": "AnimState:ClearOverrideSymbol",
        "body": "AnimState:ClearOverrideSymbol(${1:symbolname})",
        "description": "参数:(symbolname)<string>[通道名] 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.SetFXLevel:": {
        "prefix": "components.acidinfusible:SetFXLevel",
        "body": "components.acidinfusible:SetFXLevel(${1:level})",
        "description": "参数:(level)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.SpawnFX:": {
        "prefix": "components.acidinfusible:SpawnFX",
        "body": "components.acidinfusible:SpawnFX()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.OnInfusedDirty:": {
        "prefix": "components.acidinfusible:OnInfusedDirty",
        "body": "components.acidinfusible:OnInfusedDirty(${1:acidraining},${2:hasrainimmunity})",
        "description": "参数:(acidraining)<>[],(hasrainimmunity)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.KillFX:": {
        "prefix": "components.acidinfusible:KillFX",
        "body": "components.acidinfusible:KillFX()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.GetDebugString:": {
        "prefix": "components.acidinfusible:GetDebugString",
        "body": "components.acidinfusible:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.SetDamageMultiplier:": {
        "prefix": "components.acidinfusible:SetDamageMultiplier",
        "body": "components.acidinfusible:SetDamageMultiplier(${1:n})",
        "description": "参数:(n)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.OnRemoveFromEntity:": {
        "prefix": "components.acidinfusible:OnRemoveFromEntity",
        "body": "components.acidinfusible:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.SetUseRainImmunity:": {
        "prefix": "components.acidinfusible:SetUseRainImmunity",
        "body": "components.acidinfusible:SetUseRainImmunity(${1:userainimmunity})",
        "description": "参数:(userainimmunity)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.SetOnUninfuseFn:": {
        "prefix": "components.acidinfusible:SetOnUninfuseFn",
        "body": "components.acidinfusible:SetOnUninfuseFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.SetDamageTakenMultiplier:": {
        "prefix": "components.acidinfusible:SetDamageTakenMultiplier",
        "body": "components.acidinfusible:SetDamageTakenMultiplier(${1:n})",
        "description": "参数:(n)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.SetSpeedMultiplier:": {
        "prefix": "components.acidinfusible:SetSpeedMultiplier",
        "body": "components.acidinfusible:SetSpeedMultiplier(${1:n})",
        "description": "参数:(n)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.SetMultipliers:": {
        "prefix": "components.acidinfusible:SetMultipliers",
        "body": "components.acidinfusible:SetMultipliers(${1:tuning})",
        "description": "参数:(tuning)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.OnInfuse:": {
        "prefix": "components.acidinfusible:OnInfuse",
        "body": "components.acidinfusible:OnInfuse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.IsInfused:": {
        "prefix": "components.acidinfusible:IsInfused",
        "body": "components.acidinfusible:IsInfused()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.OnUninfuse:": {
        "prefix": "components.acidinfusible:OnUninfuse",
        "body": "components.acidinfusible:OnUninfuse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "acidinfusible.SetOnInfuseFn:": {
        "prefix": "components.acidinfusible:SetOnInfuseFn",
        "body": "components.acidinfusible:SetOnInfuseFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidlevel.SetOverrideAcidRainTickFn:": {
        "prefix": "components.acidlevel:SetOverrideAcidRainTickFn",
        "body": "components.acidlevel:SetOverrideAcidRainTickFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidlevel.DoDelta:": {
        "prefix": "components.acidlevel:DoDelta",
        "body": "components.acidlevel:DoDelta(${1:delta})",
        "description": "参数:(delta)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidlevel.OnLoad:": {
        "prefix": "components.acidlevel:OnLoad",
        "body": "components.acidlevel:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidlevel.GetDebugString:": {
        "prefix": "components.acidlevel:GetDebugString",
        "body": "components.acidlevel:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "acidlevel.GetOverrideAcidRainTickFn:": {
        "prefix": "components.acidlevel:GetOverrideAcidRainTickFn",
        "body": "components.acidlevel:GetOverrideAcidRainTickFn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "acidlevel.OnSave:": {
        "prefix": "components.acidlevel:OnSave",
        "body": "components.acidlevel:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "acidlevel.SetOnStartIsRainingFn:": {
        "prefix": "components.acidlevel:SetOnStartIsRainingFn",
        "body": "components.acidlevel:SetOnStartIsRainingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidlevel.SetPercent:": {
        "prefix": "components.acidlevel:SetPercent",
        "body": "components.acidlevel:SetPercent(${1:percent})",
        "description": "参数:(percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidlevel.GetPercent:": {
        "prefix": "components.acidlevel:GetPercent",
        "body": "components.acidlevel:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "acidlevel.SetOnStartIsAcidRainingFn:": {
        "prefix": "components.acidlevel:SetOnStartIsAcidRainingFn",
        "body": "components.acidlevel:SetOnStartIsAcidRainingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidlevel.SetOnStopIsRainingFn:": {
        "prefix": "components.acidlevel:SetOnStopIsRainingFn",
        "body": "components.acidlevel:SetOnStopIsRainingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidlevel.OnIsAcidRaining:": {
        "prefix": "components.acidlevel:OnIsAcidRaining",
        "body": "components.acidlevel:OnIsAcidRaining(${1:isacidraining})",
        "description": "参数:(isacidraining)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidlevel.SetOnStopIsAcidRainingFn:": {
        "prefix": "components.acidlevel:SetOnStopIsAcidRainingFn",
        "body": "components.acidlevel:SetOnStopIsAcidRainingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidlevel.OnIsRaining:": {
        "prefix": "components.acidlevel:OnIsRaining",
        "body": "components.acidlevel:OnIsRaining(${1:israining})",
        "description": "参数:(israining)<>[] 返回值:无返回值 贡献者:@"
    },
    "acidlevel.SetIgnoreAcidRainTicks:": {
        "prefix": "components.acidlevel:SetIgnoreAcidRainTicks",
        "body": "components.acidlevel:SetIgnoreAcidRainTicks(${1:ignoreacidrainticks})",
        "description": "参数:(ignoreacidrainticks)<>[] 返回值:无返回值 贡献者:@"
    },
    "activatable.GetDebugString:": {
        "prefix": "components.activatable:GetDebugString",
        "body": "components.activatable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "activatable.CanActivate:": {
        "prefix": "components.activatable:CanActivate",
        "body": "components.activatable:CanActivate(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "activatable.OnRemoveFromEntity:": {
        "prefix": "components.activatable:OnRemoveFromEntity",
        "body": "components.activatable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "activatable.DoActivate:": {
        "prefix": "components.activatable:DoActivate",
        "body": "components.activatable:DoActivate(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "age.ResumeAging:": {
        "prefix": "components.age:ResumeAging",
        "body": "components.age:ResumeAging()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "age.RestartPeriodicSync:": {
        "prefix": "components.age:RestartPeriodicSync",
        "body": "components.age:RestartPeriodicSync()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "age.GetDebugString:": {
        "prefix": "components.age:GetDebugString",
        "body": "components.age:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "age.GetAgeInDays:": {
        "prefix": "components.age:GetAgeInDays",
        "body": "components.age:GetAgeInDays()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "age.PauseAging:": {
        "prefix": "components.age:PauseAging",
        "body": "components.age:PauseAging()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "age.OnLoad:": {
        "prefix": "components.age:OnLoad",
        "body": "components.age:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "age.LongUpdate:": {
        "prefix": "components.age:LongUpdate",
        "body": "components.age:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "age.OnSave:": {
        "prefix": "components.age:OnSave",
        "body": "components.age:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "age.GetAge:": {
        "prefix": "components.age:GetAge",
        "body": "components.age:GetAge()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "age.GetDisplayAgeInDays:": {
        "prefix": "components.age:GetDisplayAgeInDays",
        "body": "components.age:GetDisplayAgeInDays()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "age.CancelPeriodicSync:": {
        "prefix": "components.age:CancelPeriodicSync",
        "body": "components.age:CancelPeriodicSync()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "amorphous.FindForm:": {
        "prefix": "components.amorphous:FindForm",
        "body": "components.amorphous:FindForm(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "amorphous.OnSave:": {
        "prefix": "components.amorphous:OnSave",
        "body": "components.amorphous:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "amorphous.OnLoad:": {
        "prefix": "components.amorphous:OnLoad",
        "body": "components.amorphous:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "amorphous.OnRemoveFromEntity:": {
        "prefix": "components.amorphous:OnRemoveFromEntity",
        "body": "components.amorphous:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "amorphous.AddForm:": {
        "prefix": "components.amorphous:AddForm",
        "body": "components.amorphous:AddForm(${1:form})",
        "description": "参数:(form)<>[] 返回值:无返回值 贡献者:@"
    },
    "amorphous.LoadPostPass:": {
        "prefix": "components.amorphous:LoadPostPass",
        "body": "components.amorphous:LoadPostPass()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "amorphous.CheckForMorph:": {
        "prefix": "components.amorphous:CheckForMorph",
        "body": "components.amorphous:CheckForMorph()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "amorphous.GetCurrentForm:": {
        "prefix": "components.amorphous:GetCurrentForm",
        "body": "components.amorphous:GetCurrentForm()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "amorphous.MorphToForm:": {
        "prefix": "components.amorphous:MorphToForm",
        "body": "components.amorphous:MorphToForm(${1:form},${2:instant})",
        "description": "参数:(form)<>[],(instant)<>[] 返回值:无返回值 贡献者:@"
    },
    "amphibiouscreature.ShouldTransition:": {
        "prefix": "components.amphibiouscreature:ShouldTransition",
        "body": "components.amphibiouscreature:ShouldTransition(${1:x},${2:z})",
        "description": "参数:(x)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "amphibiouscreature.SetExitWaterFn:": {
        "prefix": "components.amphibiouscreature:SetExitWaterFn",
        "body": "components.amphibiouscreature:SetExitWaterFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "amphibiouscreature.OnEntitySleep:": {
        "prefix": "components.amphibiouscreature:OnEntitySleep",
        "body": "components.amphibiouscreature:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "amphibiouscreature.OnEntityWake:": {
        "prefix": "components.amphibiouscreature:OnEntityWake",
        "body": "components.amphibiouscreature:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "amphibiouscreature.OnExitOcean:": {
        "prefix": "components.amphibiouscreature:OnExitOcean",
        "body": "components.amphibiouscreature:OnExitOcean()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "amphibiouscreature.OnUpdate:": {
        "prefix": "components.amphibiouscreature:OnUpdate",
        "body": "components.amphibiouscreature:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "amphibiouscreature.GetDebugString:": {
        "prefix": "components.amphibiouscreature:GetDebugString",
        "body": "components.amphibiouscreature:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "amphibiouscreature.SetEnterWaterFn:": {
        "prefix": "components.amphibiouscreature:SetEnterWaterFn",
        "body": "components.amphibiouscreature:SetEnterWaterFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "amphibiouscreature.OnEnterOcean:": {
        "prefix": "components.amphibiouscreature:OnEnterOcean",
        "body": "components.amphibiouscreature:OnEnterOcean()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "amphibiouscreature.SetBanks:": {
        "prefix": "components.amphibiouscreature:SetBanks",
        "body": "components.amphibiouscreature:SetBanks(${1:land},${2:ocean})",
        "description": "参数:(land)<>[],(ocean)<>[] 返回值:无返回值 贡献者:@"
    },
    "anchor.AnchorLowered:": {
        "prefix": "components.anchor:AnchorLowered",
        "body": "components.anchor:AnchorLowered()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "anchor.AnchorRaised:": {
        "prefix": "components.anchor:AnchorRaised",
        "body": "components.anchor:AnchorRaised()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "anchor.OnSave:": {
        "prefix": "components.anchor:OnSave",
        "body": "components.anchor:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "anchor.OnLoad:": {
        "prefix": "components.anchor:OnLoad",
        "body": "components.anchor:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "anchor.RemoveAnchorRaiser:": {
        "prefix": "components.anchor:RemoveAnchorRaiser",
        "body": "components.anchor:RemoveAnchorRaiser(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "anchor.GetDebugString:": {
        "prefix": "components.anchor:GetDebugString",
        "body": "components.anchor:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "anchor.OnUpdate:": {
        "prefix": "components.anchor:OnUpdate",
        "body": "components.anchor:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "anchor.AddAnchorRaiser:": {
        "prefix": "components.anchor:AddAnchorRaiser",
        "body": "components.anchor:AddAnchorRaiser(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "anchor.LoadPostPass:": {
        "prefix": "components.anchor:LoadPostPass",
        "body": "components.anchor:LoadPostPass()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "anchor.GetCurrentDepth:": {
        "prefix": "components.anchor:GetCurrentDepth",
        "body": "components.anchor:GetCurrentDepth()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "anchor.GetBoat:": {
        "prefix": "components.anchor:GetBoat",
        "body": "components.anchor:GetBoat()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "anchor.SetIsAnchorLowered:": {
        "prefix": "components.anchor:SetIsAnchorLowered",
        "body": "components.anchor:SetIsAnchorLowered(${1:is_lowered})",
        "description": "参数:(is_lowered)<>[] 返回值:无返回值 贡献者:@"
    },
    "anchor.SetVelocityMod:": {
        "prefix": "components.anchor:SetVelocityMod",
        "body": "components.anchor:SetVelocityMod(${1:set})",
        "description": "参数:(set)<>[] 返回值:无返回值 贡献者:@"
    },
    "anchor.StartRaisingAnchor:": {
        "prefix": "components.anchor:StartRaisingAnchor",
        "body": "components.anchor:StartRaisingAnchor()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "anchor.StartLoweringAnchor:": {
        "prefix": "components.anchor:StartLoweringAnchor",
        "body": "components.anchor:StartLoweringAnchor()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "aoespell.CanCast:": {
        "prefix": "components.aoespell:CanCast",
        "body": "components.aoespell:CanCast(${1:doer},${2:pos})",
        "description": "参数:(doer)<>[],(pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoespell.SetSpellFn:": {
        "prefix": "components.aoespell:SetSpellFn",
        "body": "components.aoespell:SetSpellFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoespell.CastSpell:": {
        "prefix": "components.aoespell:CastSpell",
        "body": "components.aoespell:CastSpell(${1:doer},${2:pos})",
        "description": "参数:(doer)<>[],(pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.SetAllowRiding:": {
        "prefix": "components.aoetargeting:SetAllowRiding",
        "body": "components.aoetargeting:SetAllowRiding(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.SetTargetFX:": {
        "prefix": "components.aoetargeting:SetTargetFX",
        "body": "components.aoetargeting:SetTargetFX(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.SetEnabled:": {
        "prefix": "components.aoetargeting:SetEnabled",
        "body": "components.aoetargeting:SetEnabled(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.IsEnabled:": {
        "prefix": "components.aoetargeting:IsEnabled",
        "body": "components.aoetargeting:IsEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.SetRange:": {
        "prefix": "components.aoetargeting:SetRange",
        "body": "components.aoetargeting:SetRange(${1:range})",
        "description": "参数:(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.StopTargeting:": {
        "prefix": "components.aoetargeting:StopTargeting",
        "body": "components.aoetargeting:StopTargeting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.SpawnTargetFXAt:": {
        "prefix": "components.aoetargeting:SpawnTargetFXAt",
        "body": "components.aoetargeting:SpawnTargetFXAt(${1:pos})",
        "description": "参数:(pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.GetRange:": {
        "prefix": "components.aoetargeting:GetRange",
        "body": "components.aoetargeting:GetRange()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.ShouldRepeatCast:": {
        "prefix": "components.aoetargeting:ShouldRepeatCast",
        "body": "components.aoetargeting:ShouldRepeatCast(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.SetAlwaysValid:": {
        "prefix": "components.aoetargeting:SetAlwaysValid",
        "body": "components.aoetargeting:SetAlwaysValid(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.SetShouldRepeatCastFn:": {
        "prefix": "components.aoetargeting:SetShouldRepeatCastFn",
        "body": "components.aoetargeting:SetShouldRepeatCastFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.CanRepeatCast:": {
        "prefix": "components.aoetargeting:CanRepeatCast",
        "body": "components.aoetargeting:CanRepeatCast()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.SetDeployRadius:": {
        "prefix": "components.aoetargeting:SetDeployRadius",
        "body": "components.aoetargeting:SetDeployRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.StartTargeting:": {
        "prefix": "components.aoetargeting:StartTargeting",
        "body": "components.aoetargeting:StartTargeting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "aoetargeting.SetAllowWater:": {
        "prefix": "components.aoetargeting:SetAllowWater",
        "body": "components.aoetargeting:SetAllowWater(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_base.OnToss:": {
        "prefix": "components.aoeweapon_base:OnToss",
        "body": "components.aoeweapon_base:OnToss(${1:doer},${2:target},${3:sourceposition},${4:basespeed},${5:startradius})",
        "description": "参数:(doer)<>[],(target)<>[],(sourceposition)<>[],(basespeed)<>[],(startradius)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_base.SetOnHitFn:": {
        "prefix": "components.aoeweapon_base:SetOnHitFn",
        "body": "components.aoeweapon_base:SetOnHitFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_base.SetTags:": {
        "prefix": "components.aoeweapon_base:SetTags",
        "body": "components.aoeweapon_base:SetTags(${1:...})",
        "description": "参数:(...)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_base.SetStimuli:": {
        "prefix": "components.aoeweapon_base:SetStimuli",
        "body": "components.aoeweapon_base:SetStimuli(${1:stimuli})",
        "description": "参数:(stimuli)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_base.OnHit:": {
        "prefix": "components.aoeweapon_base:OnHit",
        "body": "components.aoeweapon_base:OnHit(${1:doer},${2:target})",
        "description": "参数:(doer)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_base._CombineTags:": {
        "prefix": "components.aoeweapon_base:_CombineTags",
        "body": "components.aoeweapon_base:_CombineTags()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_base.SetOnMissFn:": {
        "prefix": "components.aoeweapon_base:SetOnMissFn",
        "body": "components.aoeweapon_base:SetOnMissFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_base.SetOnPreHitFn:": {
        "prefix": "components.aoeweapon_base:SetOnPreHitFn",
        "body": "components.aoeweapon_base:SetOnPreHitFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_base.SetNoTags:": {
        "prefix": "components.aoeweapon_base:SetNoTags",
        "body": "components.aoeweapon_base:SetNoTags(${1:...})",
        "description": "参数:(...)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_base.SetDamage:": {
        "prefix": "components.aoeweapon_base:SetDamage",
        "body": "components.aoeweapon_base:SetDamage(${1:dmg})",
        "description": "参数:(dmg)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_base.SetWorkActions:": {
        "prefix": "components.aoeweapon_base:SetWorkActions",
        "body": "components.aoeweapon_base:SetWorkActions(${1:...})",
        "description": "参数:(...)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_leap.DoLeap:": {
        "prefix": "components.aoeweapon_leap:DoLeap",
        "body": "components.aoeweapon_leap:DoLeap(${1:doer},${2:startingpos},${3:targetpos})",
        "description": "参数:(doer)<>[],(startingpos)<>[],(targetpos)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_leap.SetAOERadius:": {
        "prefix": "components.aoeweapon_leap:SetAOERadius",
        "body": "components.aoeweapon_leap:SetAOERadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_leap.SetOnLeaptFn:": {
        "prefix": "components.aoeweapon_leap:SetOnLeaptFn",
        "body": "components.aoeweapon_leap:SetOnLeaptFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_leap.SetOnPreLeapFn:": {
        "prefix": "components.aoeweapon_leap:SetOnPreLeapFn",
        "body": "components.aoeweapon_leap:SetOnPreLeapFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_lunge.DoLunge:": {
        "prefix": "components.aoeweapon_lunge:DoLunge",
        "body": "components.aoeweapon_lunge:DoLunge(${1:doer},${2:startingpos},${3:targetpos})",
        "description": "参数:(doer)<>[],(startingpos)<>[],(targetpos)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_lunge.SetSound:": {
        "prefix": "components.aoeweapon_lunge:SetSound",
        "body": "components.aoeweapon_lunge:SetSound(${1:path})",
        "description": "参数:(path)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_lunge.SetTrailFX:": {
        "prefix": "components.aoeweapon_lunge:SetTrailFX",
        "body": "components.aoeweapon_lunge:SetTrailFX(${1:prefab},${2:spacing})",
        "description": "参数:(prefab)<>[],(spacing)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_lunge.SetOnPreLungeFn:": {
        "prefix": "components.aoeweapon_lunge:SetOnPreLungeFn",
        "body": "components.aoeweapon_lunge:SetOnPreLungeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_lunge.SetSideRange:": {
        "prefix": "components.aoeweapon_lunge:SetSideRange",
        "body": "components.aoeweapon_lunge:SetSideRange(${1:range})",
        "description": "参数:(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "aoeweapon_lunge.SetOnLungedFn:": {
        "prefix": "components.aoeweapon_lunge:SetOnLungedFn",
        "body": "components.aoeweapon_lunge:SetOnLungedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "appraisable.Appraise:": {
        "prefix": "components.appraisable:Appraise",
        "body": "components.appraisable:Appraise(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "appraisable.CanAppraise:": {
        "prefix": "components.appraisable:CanAppraise",
        "body": "components.appraisable:CanAppraise(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "areaaware._TestArea:": {
        "prefix": "components.areaaware:_TestArea",
        "body": "components.areaaware:_TestArea(${1:pt_x},${2:pt_z},${3:on_land},${4:r})",
        "description": "参数:(pt_x)<>[],(pt_z)<>[],(on_land)<>[],(r)<>[] 返回值:无返回值 贡献者:@"
    },
    "areaaware.UpdatePosition:": {
        "prefix": "components.areaaware:UpdatePosition",
        "body": "components.areaaware:UpdatePosition(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "areaaware.OnRemoveFromEntity:": {
        "prefix": "components.areaaware:OnRemoveFromEntity",
        "body": "components.areaaware:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "areaaware.CurrentlyInTag:": {
        "prefix": "components.areaaware:CurrentlyInTag",
        "body": "components.areaaware:CurrentlyInTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "areaaware.StartWatchingTile:": {
        "prefix": "components.areaaware:StartWatchingTile",
        "body": "components.areaaware:StartWatchingTile(${1:tile_id})",
        "description": "参数:(tile_id)<>[] 返回值:无返回值 贡献者:@"
    },
    "areaaware.GetDebugString:": {
        "prefix": "components.areaaware:GetDebugString",
        "body": "components.areaaware:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "areaaware.OnUpdate:": {
        "prefix": "components.areaaware:OnUpdate",
        "body": "components.areaaware:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "areaaware.StartCheckingPosition:": {
        "prefix": "components.areaaware:StartCheckingPosition",
        "body": "components.areaaware:StartCheckingPosition(${1:checkinterval})",
        "description": "参数:(checkinterval)<>[] 返回值:无返回值 贡献者:@"
    },
    "areaaware.StopWatchingTile:": {
        "prefix": "components.areaaware:StopWatchingTile",
        "body": "components.areaaware:StopWatchingTile(${1:tile_id})",
        "description": "参数:(tile_id)<>[] 返回值:无返回值 贡献者:@"
    },
    "areaaware.GetCurrentArea:": {
        "prefix": "components.areaaware:GetCurrentArea",
        "body": "components.areaaware:GetCurrentArea()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "areaaware.SetUpdateDist:": {
        "prefix": "components.areaaware:SetUpdateDist",
        "body": "components.areaaware:SetUpdateDist(${1:dist})",
        "description": "参数:(dist)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.CanResist:": {
        "prefix": "components.armor:CanResist",
        "body": "components.armor:CanResist(${1:attacker},${2:weapon})",
        "description": "参数:(attacker)<>[],(weapon)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.SetKeepOnFinished:": {
        "prefix": "components.armor:SetKeepOnFinished",
        "body": "components.armor:SetKeepOnFinished(${1:keep})",
        "description": "参数:(keep)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.OnSave:": {
        "prefix": "components.armor:OnSave",
        "body": "components.armor:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "armor.SetPercent:": {
        "prefix": "components.armor:SetPercent",
        "body": "components.armor:SetPercent(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.TakeDamage:": {
        "prefix": "components.armor:TakeDamage",
        "body": "components.armor:TakeDamage(${1:damage_amount})",
        "description": "参数:(damage_amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.InitIndestructible:": {
        "prefix": "components.armor:InitIndestructible",
        "body": "components.armor:InitIndestructible(${1:absorb_percent})",
        "description": "参数:(absorb_percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.SetCondition:": {
        "prefix": "components.armor:SetCondition",
        "body": "components.armor:SetCondition(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.SetTags:": {
        "prefix": "components.armor:SetTags",
        "body": "components.armor:SetTags(${1:tags})",
        "description": "参数:(tags)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.OnLoad:": {
        "prefix": "components.armor:OnLoad",
        "body": "components.armor:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.SetOnFinished:": {
        "prefix": "components.armor:SetOnFinished",
        "body": "components.armor:SetOnFinished(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.AddWeakness:": {
        "prefix": "components.armor:AddWeakness",
        "body": "components.armor:AddWeakness(${1:tag},${2:bonus_damage})",
        "description": "参数:(tag)<>[],(bonus_damage)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.GetDebugString:": {
        "prefix": "components.armor:GetDebugString",
        "body": "components.armor:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "armor.SetAbsorption:": {
        "prefix": "components.armor:SetAbsorption",
        "body": "components.armor:SetAbsorption(${1:absorb_percent})",
        "description": "参数:(absorb_percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.InitCondition:": {
        "prefix": "components.armor:InitCondition",
        "body": "components.armor:InitCondition(${1:amount},${2:absorb_percent})",
        "description": "参数:(amount)<>[],(absorb_percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.Repair:": {
        "prefix": "components.armor:Repair",
        "body": "components.armor:Repair(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.GetBonusDamage:": {
        "prefix": "components.armor:GetBonusDamage",
        "body": "components.armor:GetBonusDamage(${1:attacker},${2:weapon})",
        "description": "参数:(attacker)<>[],(weapon)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.GetAbsorption:": {
        "prefix": "components.armor:GetAbsorption",
        "body": "components.armor:GetAbsorption(${1:attacker},${2:weapon})",
        "description": "参数:(attacker)<>[],(weapon)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.IsDamaged:": {
        "prefix": "components.armor:IsDamaged",
        "body": "components.armor:IsDamaged()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "armor.RemoveWeakness:": {
        "prefix": "components.armor:RemoveWeakness",
        "body": "components.armor:RemoveWeakness(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "armor.GetPercent:": {
        "prefix": "components.armor:GetPercent",
        "body": "components.armor:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "armor.IsIndestructible:": {
        "prefix": "components.armor:IsIndestructible",
        "body": "components.armor:IsIndestructible()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "attackdodger.SetCanDodgeFn:": {
        "prefix": "components.attackdodger:SetCanDodgeFn",
        "body": "components.attackdodger:SetCanDodgeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "attackdodger.CanDodge:": {
        "prefix": "components.attackdodger:CanDodge",
        "body": "components.attackdodger:CanDodge(${1:attacker})",
        "description": "参数:(attacker)<>[] 返回值:无返回值 贡献者:@"
    },
    "attackdodger.Dodge:": {
        "prefix": "components.attackdodger:Dodge",
        "body": "components.attackdodger:Dodge(${1:attacker})",
        "description": "参数:(attacker)<>[] 返回值:无返回值 贡献者:@"
    },
    "attackdodger.OnRemoveFromEntity:": {
        "prefix": "components.attackdodger:OnRemoveFromEntity",
        "body": "components.attackdodger:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "attackdodger.SetCooldownTime:": {
        "prefix": "components.attackdodger:SetCooldownTime",
        "body": "components.attackdodger:SetCooldownTime(${1:n})",
        "description": "参数:(n)<>[] 返回值:无返回值 贡献者:@"
    },
    "attunable.GetAttunableTag:": {
        "prefix": "components.attunable:GetAttunableTag",
        "body": "components.attunable:GetAttunableTag()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "attunable.CanAttune:": {
        "prefix": "components.attunable:CanAttune",
        "body": "components.attunable:CanAttune(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "attunable.LinkToPlayer:": {
        "prefix": "components.attunable:LinkToPlayer",
        "body": "components.attunable:LinkToPlayer(${1:player},${2:isloading})",
        "description": "参数:(player)<>[],(isloading)<>[] 返回值:无返回值 贡献者:@"
    },
    "attunable.OnRemoveEntity:": {
        "prefix": "components.attunable:OnRemoveEntity",
        "body": "components.attunable:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "attunable.SetAttunableTag:": {
        "prefix": "components.attunable:SetAttunableTag",
        "body": "components.attunable:SetAttunableTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "attunable.GetDebugString:": {
        "prefix": "components.attunable:GetDebugString",
        "body": "components.attunable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "attunable.OnLoad:": {
        "prefix": "components.attunable:OnLoad",
        "body": "components.attunable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "attunable.SetOnAttuneCostFn:": {
        "prefix": "components.attunable:SetOnAttuneCostFn",
        "body": "components.attunable:SetOnAttuneCostFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "attunable.OnSave:": {
        "prefix": "components.attunable:OnSave",
        "body": "components.attunable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "attunable.UnlinkFromPlayer:": {
        "prefix": "components.attunable:UnlinkFromPlayer",
        "body": "components.attunable:UnlinkFromPlayer(${1:player},${2:isloading})",
        "description": "参数:(player)<>[],(isloading)<>[] 返回值:无返回值 贡献者:@"
    },
    "attunable.IsAttuned:": {
        "prefix": "components.attunable:IsAttuned",
        "body": "components.attunable:IsAttuned(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "attunable.SetOnLinkFn:": {
        "prefix": "components.attunable:SetOnLinkFn",
        "body": "components.attunable:SetOnLinkFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "attunable.SetOnUnlinkFn:": {
        "prefix": "components.attunable:SetOnUnlinkFn",
        "body": "components.attunable:SetOnUnlinkFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "attuner.RegisterAttunedSource:": {
        "prefix": "components.attuner:RegisterAttunedSource",
        "body": "components.attuner:RegisterAttunedSource(${1:proxy})",
        "description": "参数:(proxy)<>[] 返回值:无返回值 贡献者:@"
    },
    "attuner.IsAttunedTo:": {
        "prefix": "components.attuner:IsAttunedTo",
        "body": "components.attuner:IsAttunedTo(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "attuner.GetAttunedTarget:": {
        "prefix": "components.attuner:GetAttunedTarget",
        "body": "components.attuner:GetAttunedTarget(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "attuner.GetDebugString:": {
        "prefix": "components.attuner:GetDebugString",
        "body": "components.attuner:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "attuner.UnregisterAttunedSource:": {
        "prefix": "components.attuner:UnregisterAttunedSource",
        "body": "components.attuner:UnregisterAttunedSource(${1:proxy})",
        "description": "参数:(proxy)<>[] 返回值:无返回值 贡献者:@"
    },
    "attuner.TransferComponent:": {
        "prefix": "components.attuner:TransferComponent",
        "body": "components.attuner:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "attuner.HasAttunement:": {
        "prefix": "components.attuner:HasAttunement",
        "body": "components.attuner:HasAttunement(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "aura.GetDebugString:": {
        "prefix": "components.aura:GetDebugString",
        "body": "components.aura:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "aura.OnTick:": {
        "prefix": "components.aura:OnTick",
        "body": "components.aura:OnTick()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "aura.Enable:": {
        "prefix": "components.aura:Enable",
        "body": "components.aura:Enable(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "autoterraformer.DoTerraform:": {
        "prefix": "components.autoterraformer:DoTerraform",
        "body": "components.autoterraformer:DoTerraform(${1:px},${2:py},${3:pz},${4:x},${5:y})",
        "description": "参数:(px)<>[],(py)<>[],(pz)<>[],(x)<>[],(y)<>[] 返回值:无返回值 贡献者:@"
    },
    "autoterraformer.FinishTerraforming:": {
        "prefix": "components.autoterraformer:FinishTerraforming",
        "body": "components.autoterraformer:FinishTerraforming(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "autoterraformer.StopTerraforming:": {
        "prefix": "components.autoterraformer:StopTerraforming",
        "body": "components.autoterraformer:StopTerraforming()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "autoterraformer.OnUpdate:": {
        "prefix": "components.autoterraformer:OnUpdate",
        "body": "components.autoterraformer:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "autoterraformer.StartTerraforming:": {
        "prefix": "components.autoterraformer:StartTerraforming",
        "body": "components.autoterraformer:StartTerraforming()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bait.GetDebugString:": {
        "prefix": "components.bait:GetDebugString",
        "body": "components.bait:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bait.OnRemoveFromEntity:": {
        "prefix": "components.bait:OnRemoveFromEntity",
        "body": "components.bait:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bait.IsFree:": {
        "prefix": "components.bait:IsFree",
        "body": "components.bait:IsFree()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "balloonmaker.MakeBalloon:": {
        "prefix": "components.balloonmaker:MakeBalloon",
        "body": "components.balloonmaker:MakeBalloon(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "bathbomb.OnRemoveFromEntity:": {
        "prefix": "components.bathbomb:OnRemoveFromEntity",
        "body": "components.bathbomb:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bathbombable.Reset:": {
        "prefix": "components.bathbombable:Reset",
        "body": "components.bathbombable:Reset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bathbombable.OnBathBombed:": {
        "prefix": "components.bathbombable:OnBathBombed",
        "body": "components.bathbombable:OnBathBombed(${1:item},${2:doer})",
        "description": "参数:(item)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "bathbombable.SetOnBathBombedFn:": {
        "prefix": "components.bathbombable:SetOnBathBombedFn",
        "body": "components.bathbombable:SetOnBathBombedFn(${1:new_fn})",
        "description": "参数:(new_fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "bathbombable.OnRemoveFromEntity:": {
        "prefix": "components.bathbombable:OnRemoveFromEntity",
        "body": "components.bathbombable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bathbombable.DisableBathBombing:": {
        "prefix": "components.bathbombable:DisableBathBombing",
        "body": "components.bathbombable:DisableBathBombing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "batspawner.SetMaxBats:": {
        "prefix": "components.batspawner:SetMaxBats",
        "body": "components.batspawner:SetMaxBats(${1:max})",
        "description": "参数:(max)<>[] 返回值:无返回值 贡献者:@"
    },
    "batspawner.GetSpawnPoint:": {
        "prefix": "components.batspawner:GetSpawnPoint",
        "body": "components.batspawner:GetSpawnPoint(${1:pt})",
        "description": "参数:(pt)<>[] 返回值:无返回值 贡献者:@"
    },
    "batspawner.StartTracking:": {
        "prefix": "components.batspawner:StartTracking",
        "body": "components.batspawner:StartTracking(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "batspawner.SetSpawnTimes:": {
        "prefix": "components.batspawner:SetSpawnTimes",
        "body": "components.batspawner:SetSpawnTimes(${1:times})",
        "description": "参数:(times)<>[] 返回值:无返回值 贡献者:@"
    },
    "batspawner.GetDebugString:": {
        "prefix": "components.batspawner:GetDebugString",
        "body": "components.batspawner:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "battery.OnUsed:": {
        "prefix": "components.battery:OnUsed",
        "body": "components.battery:OnUsed(${1:user})",
        "description": "参数:(user)<>[] 返回值:无返回值 贡献者:@"
    },
    "battery.OnRemoveFromEntity:": {
        "prefix": "components.battery:OnRemoveFromEntity",
        "body": "components.battery:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "battery.CanBeUsed:": {
        "prefix": "components.battery:CanBeUsed",
        "body": "components.battery:CanBeUsed(${1:user})",
        "description": "参数:(user)<>[] 返回值:无返回值 贡献者:@"
    },
    "batteryuser.OnRemoveFromEntity:": {
        "prefix": "components.batteryuser:OnRemoveFromEntity",
        "body": "components.batteryuser:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "batteryuser.ChargeFrom:": {
        "prefix": "components.batteryuser:ChargeFrom",
        "body": "components.batteryuser:ChargeFrom(${1:charge_target})",
        "description": "参数:(charge_target)<>[] 返回值:无返回值 贡献者:@"
    },
    "battleborn.SetDecayTime:": {
        "prefix": "components.battleborn:SetDecayTime",
        "body": "components.battleborn:SetDecayTime(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "battleborn.SetBattlebornBonus:": {
        "prefix": "components.battleborn:SetBattlebornBonus",
        "body": "components.battleborn:SetBattlebornBonus(${1:bonus})",
        "description": "参数:(bonus)<>[] 返回值:无返回值 贡献者:@"
    },
    "battleborn.SetTriggerThreshold:": {
        "prefix": "components.battleborn:SetTriggerThreshold",
        "body": "components.battleborn:SetTriggerThreshold(${1:threshold})",
        "description": "参数:(threshold)<>[] 返回值:无返回值 贡献者:@"
    },
    "battleborn.OnDeath:": {
        "prefix": "components.battleborn:OnDeath",
        "body": "components.battleborn:OnDeath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "battleborn.SetStoreTime:": {
        "prefix": "components.battleborn:SetStoreTime",
        "body": "components.battleborn:SetStoreTime(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "battleborn.SetHealthEnabled:": {
        "prefix": "components.battleborn:SetHealthEnabled",
        "body": "components.battleborn:SetHealthEnabled(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "battleborn.SetValidVictimFn:": {
        "prefix": "components.battleborn:SetValidVictimFn",
        "body": "components.battleborn:SetValidVictimFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "battleborn.OnAttack:": {
        "prefix": "components.battleborn:OnAttack",
        "body": "components.battleborn:OnAttack(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "battleborn.SetClampMin:": {
        "prefix": "components.battleborn:SetClampMin",
        "body": "components.battleborn:SetClampMin(${1:min})",
        "description": "参数:(min)<>[] 返回值:无返回值 贡献者:@"
    },
    "battleborn.SetSanityEnabled:": {
        "prefix": "components.battleborn:SetSanityEnabled",
        "body": "components.battleborn:SetSanityEnabled(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "battleborn.SetClampMax:": {
        "prefix": "components.battleborn:SetClampMax",
        "body": "components.battleborn:SetClampMax(${1:max})",
        "description": "参数:(max)<>[] 返回值:无返回值 贡献者:@"
    },
    "battleborn.SetOnTriggerFn:": {
        "prefix": "components.battleborn:SetOnTriggerFn",
        "body": "components.battleborn:SetOnTriggerFn(${1:ontriggerfn})",
        "description": "参数:(ontriggerfn)<>[] 返回值:无返回值 贡献者:@"
    },
    "beard.EnableGrowth:": {
        "prefix": "components.beard:EnableGrowth",
        "body": "components.beard:EnableGrowth(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "beard.OnSave:": {
        "prefix": "components.beard:OnSave",
        "body": "components.beard:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beard.OnLoad:": {
        "prefix": "components.beard:OnLoad",
        "body": "components.beard:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "beard.GetDebugString:": {
        "prefix": "components.beard:GetDebugString",
        "body": "components.beard:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beard.GetInsulation:": {
        "prefix": "components.beard:GetInsulation",
        "body": "components.beard:GetInsulation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beard.OnRemoveFromEntity:": {
        "prefix": "components.beard:OnRemoveFromEntity",
        "body": "components.beard:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beard.UpdateBeardInventory:": {
        "prefix": "components.beard:UpdateBeardInventory",
        "body": "components.beard:UpdateBeardInventory()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beard.Reset:": {
        "prefix": "components.beard:Reset",
        "body": "components.beard:Reset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beard.LoadPostPass:": {
        "prefix": "components.beard:LoadPostPass",
        "body": "components.beard:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "beard.GetBeardSkinAndLength:": {
        "prefix": "components.beard:GetBeardSkinAndLength",
        "body": "components.beard:GetBeardSkinAndLength()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beard.AddCallback:": {
        "prefix": "components.beard:AddCallback",
        "body": "components.beard:AddCallback(${1:day},${2:cb})",
        "description": "参数:(day)<>[],(cb)<>[] 返回值:无返回值 贡献者:@"
    },
    "beard.SetSkin:": {
        "prefix": "components.beard:SetSkin",
        "body": "components.beard:SetSkin(${1:skinname})",
        "description": "参数:(skinname)<>[] 返回值:无返回值 贡献者:@"
    },
    "beard.ShouldTryToShave:": {
        "prefix": "components.beard:ShouldTryToShave",
        "body": "components.beard:ShouldTryToShave(${1:who},${2:whithwhat})",
        "description": "参数:(who)<>[],(whithwhat)<>[] 返回值:无返回值 贡献者:@"
    },
    "beard.Shave:": {
        "prefix": "components.beard:Shave",
        "body": "components.beard:Shave(${1:who},${2:withwhat})",
        "description": "参数:(who)<>[],(withwhat)<>[] 返回值:无返回值 贡献者:@"
    },
    "beaverness.StopTimeEffect:": {
        "prefix": "components.beaverness:StopTimeEffect",
        "body": "components.beaverness:StopTimeEffect()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beaverness.OnLoad:": {
        "prefix": "components.beaverness:OnLoad",
        "body": "components.beaverness:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "beaverness.GetDebugString:": {
        "prefix": "components.beaverness:GetDebugString",
        "body": "components.beaverness:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beaverness.SetPercent:": {
        "prefix": "components.beaverness:SetPercent",
        "body": "components.beaverness:SetPercent(${1:percent},${2:overtime})",
        "description": "参数:(percent)<>[],(overtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "beaverness.OnSave:": {
        "prefix": "components.beaverness:OnSave",
        "body": "components.beaverness:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beaverness.StartTimeEffect:": {
        "prefix": "components.beaverness:StartTimeEffect",
        "body": "components.beaverness:StartTimeEffect(${1:dt},${2:delta_b})",
        "description": "参数:(dt)<>[],(delta_b)<>[] 返回值:无返回值 贡献者:@"
    },
    "beaverness.SetTimeEffectMultiplier:": {
        "prefix": "components.beaverness:SetTimeEffectMultiplier",
        "body": "components.beaverness:SetTimeEffectMultiplier(${1:multiplier})",
        "description": "参数:(multiplier)<>[] 返回值:无返回值 贡献者:@"
    },
    "beaverness.GetPercent:": {
        "prefix": "components.beaverness:GetPercent",
        "body": "components.beaverness:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beaverness.IsStarving:": {
        "prefix": "components.beaverness:IsStarving",
        "body": "components.beaverness:IsStarving()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beaverness.DoDelta:": {
        "prefix": "components.beaverness:DoDelta",
        "body": "components.beaverness:DoDelta(${1:delta},${2:overtime})",
        "description": "参数:(delta)<>[],(overtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "bedazzlement.Start:": {
        "prefix": "components.bedazzlement:Start",
        "body": "components.bedazzlement:Start()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bedazzlement.PacifySpiders:": {
        "prefix": "components.bedazzlement:PacifySpiders",
        "body": "components.bedazzlement:PacifySpiders()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bedazzlement.OnLoad:": {
        "prefix": "components.bedazzlement:OnLoad",
        "body": "components.bedazzlement:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "bedazzlement.Stop:": {
        "prefix": "components.bedazzlement:Stop",
        "body": "components.bedazzlement:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bedazzlement.OnSave:": {
        "prefix": "components.bedazzlement:OnSave",
        "body": "components.bedazzlement:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bedazzler.CanBedazzle:": {
        "prefix": "components.bedazzler:CanBedazzle",
        "body": "components.bedazzler:CanBedazzle(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "bedazzler.Bedazzle:": {
        "prefix": "components.bedazzler:Bedazzle",
        "body": "components.bedazzler:Bedazzle(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "bedazzler.SetUseAmount:": {
        "prefix": "components.bedazzler:SetUseAmount",
        "body": "components.bedazzler:SetUseAmount(${1:use_amount})",
        "description": "参数:(use_amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "beefalometrics.SetLastDomesticator:": {
        "prefix": "components.beefalometrics:SetLastDomesticator",
        "body": "components.beefalometrics:SetLastDomesticator(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "beefalometrics.GetLastDomesticator:": {
        "prefix": "components.beefalometrics:GetLastDomesticator",
        "body": "components.beefalometrics:GetLastDomesticator()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beefalometrics.OnSave:": {
        "prefix": "components.beefalometrics:OnSave",
        "body": "components.beefalometrics:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "beefalometrics.OnLoad:": {
        "prefix": "components.beefalometrics:OnLoad",
        "body": "components.beefalometrics:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "birdattractor.GetDebugString:": {
        "prefix": "components.birdattractor:GetDebugString",
        "body": "components.birdattractor:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "blinkstaff.ResetSoundFX:": {
        "prefix": "components.blinkstaff:ResetSoundFX",
        "body": "components.blinkstaff:ResetSoundFX()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "blinkstaff.SpawnEffect:": {
        "prefix": "components.blinkstaff:SpawnEffect",
        "body": "components.blinkstaff:SpawnEffect(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "blinkstaff.SetSoundFX:": {
        "prefix": "components.blinkstaff:SetSoundFX",
        "body": "components.blinkstaff:SetSoundFX(${1:presound},${2:postsound})",
        "description": "参数:(presound)<>[],(postsound)<>[] 返回值:无返回值 贡献者:@"
    },
    "blinkstaff.Blink:": {
        "prefix": "components.blinkstaff:Blink",
        "body": "components.blinkstaff:Blink(${1:pt},${2:caster})",
        "description": "参数:(pt)<>[],(caster)<>[] 返回值:无返回值 贡献者:@"
    },
    "blinkstaff.SetFX:": {
        "prefix": "components.blinkstaff:SetFX",
        "body": "components.blinkstaff:SetFX(${1:front},${2:back})",
        "description": "参数:(front)<>[],(back)<>[] 返回值:无返回值 贡献者:@"
    },
    "bloomer.DetachChild:": {
        "prefix": "components.bloomer:DetachChild",
        "body": "components.bloomer:DetachChild(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "bloomer.OnRemoveFromEntity:": {
        "prefix": "components.bloomer:OnRemoveFromEntity",
        "body": "components.bloomer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bloomer.AttachChild:": {
        "prefix": "components.bloomer:AttachChild",
        "body": "components.bloomer:AttachChild(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "bloomer.GetDebugString:": {
        "prefix": "components.bloomer:GetDebugString",
        "body": "components.bloomer:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bloomer.PopBloom:": {
        "prefix": "components.bloomer:PopBloom",
        "body": "components.bloomer:PopBloom(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "bloomer.PushBloom:": {
        "prefix": "components.bloomer:PushBloom",
        "body": "components.bloomer:PushBloom(${1:source},${2:fx},${3:priority})",
        "description": "参数:(source)<>[],(fx)<>[],(priority)<>[] 返回值:无返回值 贡献者:@"
    },
    "bloomer.OnClearBloomEffectHandle:": {
        "prefix": "components.bloomer:OnClearBloomEffectHandle",
        "body": "components.bloomer:OnClearBloomEffectHandle()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bloomer.OnSetBloomEffectHandle:": {
        "prefix": "components.bloomer:OnSetBloomEffectHandle",
        "body": "components.bloomer:OnSetBloomEffectHandle(${1:fx},${2:priority})",
        "description": "参数:(fx)<>[],(priority)<>[] 返回值:无返回值 贡献者:@"
    },
    "bloomer.GetCurrentFX:": {
        "prefix": "components.bloomer:GetCurrentFX",
        "body": "components.bloomer:GetCurrentFX()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bloomer.GetCurrentFxAndPriority:": {
        "prefix": "components.bloomer:GetCurrentFxAndPriority",
        "body": "components.bloomer:GetCurrentFxAndPriority()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bloomness.Fertilize:": {
        "prefix": "components.bloomness:Fertilize",
        "body": "components.bloomness:Fertilize(${1:value})",
        "description": "参数:(value)<>[] 返回值:无返回值 贡献者:@"
    },
    "bloomness.OnSave:": {
        "prefix": "components.bloomness:OnSave",
        "body": "components.bloomness:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bloomness.OnLoad:": {
        "prefix": "components.bloomness:OnLoad",
        "body": "components.bloomness:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "bloomness.SetDurations:": {
        "prefix": "components.bloomness:SetDurations",
        "body": "components.bloomness:SetDurations(${1:stage},${2:full})",
        "description": "参数:(stage)<>[],(full)<>[] 返回值:无返回值 贡献者:@"
    },
    "bloomness.UpdateRate:": {
        "prefix": "components.bloomness:UpdateRate",
        "body": "components.bloomness:UpdateRate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bloomness.SetLevel:": {
        "prefix": "components.bloomness:SetLevel",
        "body": "components.bloomness:SetLevel(${1:level})",
        "description": "参数:(level)<>[] 返回值:无返回值 贡献者:@"
    },
    "bloomness.OnUpdate:": {
        "prefix": "components.bloomness:OnUpdate",
        "body": "components.bloomness:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "bloomness.GetLevel:": {
        "prefix": "components.bloomness:GetLevel",
        "body": "components.bloomness:GetLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bloomness.GetDebugString:": {
        "prefix": "components.bloomness:GetDebugString",
        "body": "components.bloomness:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bloomness.LongUpdate:": {
        "prefix": "components.bloomness:LongUpdate",
        "body": "components.bloomness:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "blowinwind.SetMaxSpeedMult:": {
        "prefix": "components.blowinwind:SetMaxSpeedMult",
        "body": "components.blowinwind:SetMaxSpeedMult(${1:spd})",
        "description": "参数:(spd)<>[] 返回值:无返回值 贡献者:@"
    },
    "blowinwind.OnEntitySleep:": {
        "prefix": "components.blowinwind:OnEntitySleep",
        "body": "components.blowinwind:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "blowinwind.OnEntityWake:": {
        "prefix": "components.blowinwind:OnEntityWake",
        "body": "components.blowinwind:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "blowinwind.Stop:": {
        "prefix": "components.blowinwind:Stop",
        "body": "components.blowinwind:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "blowinwind.OnUpdate:": {
        "prefix": "components.blowinwind:OnUpdate",
        "body": "components.blowinwind:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "blowinwind.Start:": {
        "prefix": "components.blowinwind:Start",
        "body": "components.blowinwind:Start(${1:ang},${2:vel})",
        "description": "参数:(ang)<>[],(vel)<>[] 返回值:无返回值 贡献者:@"
    },
    "blowinwind.GetDebugString:": {
        "prefix": "components.blowinwind:GetDebugString",
        "body": "components.blowinwind:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "blowinwind.StartSoundLoop:": {
        "prefix": "components.blowinwind:StartSoundLoop",
        "body": "components.blowinwind:StartSoundLoop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "blowinwind.ChangeDirection:": {
        "prefix": "components.blowinwind:ChangeDirection",
        "body": "components.blowinwind:ChangeDirection(${1:ang},${2:vel})",
        "description": "参数:(ang)<>[],(vel)<>[] 返回值:无返回值 贡献者:@"
    },
    "blowinwind.GetSpeed:": {
        "prefix": "components.blowinwind:GetSpeed",
        "body": "components.blowinwind:GetSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "blowinwind.SetMinSpeedMult:": {
        "prefix": "components.blowinwind:SetMinSpeedMult",
        "body": "components.blowinwind:SetMinSpeedMult(${1:spd})",
        "description": "参数:(spd)<>[] 返回值:无返回值 贡献者:@"
    },
    "blowinwind.SetAverageSpeed:": {
        "prefix": "components.blowinwind:SetAverageSpeed",
        "body": "components.blowinwind:SetAverageSpeed(${1:spd})",
        "description": "参数:(spd)<>[] 返回值:无返回值 贡献者:@"
    },
    "blowinwind.StopSoundLoop:": {
        "prefix": "components.blowinwind:StopSoundLoop",
        "body": "components.blowinwind:StopSoundLoop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatai.OnUpdate:": {
        "prefix": "components.boatai:OnUpdate",
        "body": "components.boatai:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcannon.IsAmmoLoaded:": {
        "prefix": "components.boatcannon:IsAmmoLoaded",
        "body": "components.boatcannon:IsAmmoLoaded()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcannon.OnSave:": {
        "prefix": "components.boatcannon:OnSave",
        "body": "components.boatcannon:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcannon.OnLoad:": {
        "prefix": "components.boatcannon:OnLoad",
        "body": "components.boatcannon:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcannon.SetOnStopAimingFn:": {
        "prefix": "components.boatcannon:SetOnStopAimingFn",
        "body": "components.boatcannon:SetOnStopAimingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcannon.OnRemoveFromEntity:": {
        "prefix": "components.boatcannon:OnRemoveFromEntity",
        "body": "components.boatcannon:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcannon.SetOnStartAimingFn:": {
        "prefix": "components.boatcannon:SetOnStartAimingFn",
        "body": "components.boatcannon:SetOnStartAimingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcannon.StopAiming:": {
        "prefix": "components.boatcannon:StopAiming",
        "body": "components.boatcannon:StopAiming()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcannon.StartAiming:": {
        "prefix": "components.boatcannon:StartAiming",
        "body": "components.boatcannon:StartAiming(${1:operator})",
        "description": "参数:(operator)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcannon.LoadAmmo:": {
        "prefix": "components.boatcannon:LoadAmmo",
        "body": "components.boatcannon:LoadAmmo(${1:projectileprefab})",
        "description": "参数:(projectileprefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcannon.Shoot:": {
        "prefix": "components.boatcannon:Shoot",
        "body": "components.boatcannon:Shoot()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcannonuser.DetachClassified:": {
        "prefix": "components.boatcannonuser:DetachClassified",
        "body": "components.boatcannonuser:DetachClassified()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcannonuser.GetAimPos:": {
        "prefix": "components.boatcannonuser:GetAimPos",
        "body": "components.boatcannonuser:GetAimPos()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcannonuser.GetReticule:": {
        "prefix": "components.boatcannonuser:GetReticule",
        "body": "components.boatcannonuser:GetReticule()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcannonuser.OnCannonChanged:": {
        "prefix": "components.boatcannonuser:OnCannonChanged",
        "body": "components.boatcannonuser:OnCannonChanged(${1:cannon})",
        "description": "参数:(cannon)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcannonuser.GetCannon:": {
        "prefix": "components.boatcannonuser:GetCannon",
        "body": "components.boatcannonuser:GetCannon()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcannonuser.AttachClassified:": {
        "prefix": "components.boatcannonuser:AttachClassified",
        "body": "components.boatcannonuser:AttachClassified(${1:classified})",
        "description": "参数:(classified)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcannonuser.CancelAimingStateInternal:": {
        "prefix": "components.boatcannonuser:CancelAimingStateInternal",
        "body": "components.boatcannonuser:CancelAimingStateInternal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcannonuser.OnWallUpdate:": {
        "prefix": "components.boatcannonuser:OnWallUpdate",
        "body": "components.boatcannonuser:OnWallUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcannonuser.SetCannon:": {
        "prefix": "components.boatcannonuser:SetCannon",
        "body": "components.boatcannonuser:SetCannon(${1:cannon})",
        "description": "参数:(cannon)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcannonuser.SetClassified:": {
        "prefix": "components.boatcannonuser:SetClassified",
        "body": "components.boatcannonuser:SetClassified(${1:classified})",
        "description": "参数:(classified)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.OnSave:": {
        "prefix": "components.boatcrew:OnSave",
        "body": "components.boatcrew:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcrew.CrewCheer:": {
        "prefix": "components.boatcrew:CrewCheer",
        "body": "components.boatcrew:CrewCheer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcrew.SetRemoveMemberFn:": {
        "prefix": "components.boatcrew:SetRemoveMemberFn",
        "body": "components.boatcrew:SetRemoveMemberFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.OnRemoveFromEntity:": {
        "prefix": "components.boatcrew:OnRemoveFromEntity",
        "body": "components.boatcrew:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcrew.AddMember:": {
        "prefix": "components.boatcrew:AddMember",
        "body": "components.boatcrew:AddMember(${1:inst},${2:setcaptain})",
        "description": "参数:(inst)<>[],(setcaptain)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.CountCrew:": {
        "prefix": "components.boatcrew:CountCrew",
        "body": "components.boatcrew:CountCrew()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcrew.RemoveMember:": {
        "prefix": "components.boatcrew:RemoveMember",
        "body": "components.boatcrew:RemoveMember(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.SetUpdateRange:": {
        "prefix": "components.boatcrew:SetUpdateRange",
        "body": "components.boatcrew:SetUpdateRange(${1:range})",
        "description": "参数:(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.LoadPostPass:": {
        "prefix": "components.boatcrew:LoadPostPass",
        "body": "components.boatcrew:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.SetCaptain:": {
        "prefix": "components.boatcrew:SetCaptain",
        "body": "components.boatcrew:SetCaptain(${1:captain})",
        "description": "参数:(captain)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.GetHeadingNormal:": {
        "prefix": "components.boatcrew:GetHeadingNormal",
        "body": "components.boatcrew:GetHeadingNormal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcrew.SetTarget:": {
        "prefix": "components.boatcrew:SetTarget",
        "body": "components.boatcrew:SetTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.OnRemoveEntity:": {
        "prefix": "components.boatcrew:OnRemoveEntity",
        "body": "components.boatcrew:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcrew.SetMemberTag:": {
        "prefix": "components.boatcrew:SetMemberTag",
        "body": "components.boatcrew:SetMemberTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.CountPirateLoot:": {
        "prefix": "components.boatcrew:CountPirateLoot",
        "body": "components.boatcrew:CountPirateLoot()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcrew.SetAddMemberFn:": {
        "prefix": "components.boatcrew:SetAddMemberFn",
        "body": "components.boatcrew:SetAddMemberFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.reserveinkertarget:": {
        "prefix": "components.boatcrew:reserveinkertarget",
        "body": "components.boatcrew:reserveinkertarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.areAllCrewOnBoat:": {
        "prefix": "components.boatcrew:areAllCrewOnBoat",
        "body": "components.boatcrew:areAllCrewOnBoat()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcrew.TestForVictory:": {
        "prefix": "components.boatcrew:TestForVictory",
        "body": "components.boatcrew:TestForVictory()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcrew.checktinkertarget:": {
        "prefix": "components.boatcrew:checktinkertarget",
        "body": "components.boatcrew:checktinkertarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.OnUpdate:": {
        "prefix": "components.boatcrew:OnUpdate",
        "body": "components.boatcrew:OnUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcrew.TestForLootToSteal:": {
        "prefix": "components.boatcrew:TestForLootToSteal",
        "body": "components.boatcrew:TestForLootToSteal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatcrew.removeinkertarget:": {
        "prefix": "components.boatcrew:removeinkertarget",
        "body": "components.boatcrew:removeinkertarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.SetHeading:": {
        "prefix": "components.boatcrew:SetHeading",
        "body": "components.boatcrew:SetHeading(${1:heading})",
        "description": "参数:(heading)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatcrew.IsCrewOnDeck:": {
        "prefix": "components.boatcrew:IsCrewOnDeck",
        "body": "components.boatcrew:IsCrewOnDeck()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrag.GetDebugString:": {
        "prefix": "components.boatdrag:GetDebugString",
        "body": "components.boatdrag:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.IsDrifting:": {
        "prefix": "components.boatdrifter:IsDrifting",
        "body": "components.boatdrifter:IsDrifting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.StartWakeTests:": {
        "prefix": "components.boatdrifter:StartWakeTests",
        "body": "components.boatdrifter:StartWakeTests()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.OnRemoveEntity:": {
        "prefix": "components.boatdrifter:OnRemoveEntity",
        "body": "components.boatdrifter:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.OnEntityWake:": {
        "prefix": "components.boatdrifter:OnEntityWake",
        "body": "components.boatdrifter:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.StopWakeTests:": {
        "prefix": "components.boatdrifter:StopWakeTests",
        "body": "components.boatdrifter:StopWakeTests()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.OnEntitySleep:": {
        "prefix": "components.boatdrifter:OnEntitySleep",
        "body": "components.boatdrifter:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.StartBoatPhysics:": {
        "prefix": "components.boatdrifter:StartBoatPhysics",
        "body": "components.boatdrifter:StartBoatPhysics()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.OnStopMoving:": {
        "prefix": "components.boatdrifter:OnStopMoving",
        "body": "components.boatdrifter:OnStopMoving()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.OnStartMoving:": {
        "prefix": "components.boatdrifter:OnStartMoving",
        "body": "components.boatdrifter:OnStartMoving()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.StopBoatPhysics:": {
        "prefix": "components.boatdrifter:StopBoatPhysics",
        "body": "components.boatdrifter:StopBoatPhysics()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.OnStopDrifting:": {
        "prefix": "components.boatdrifter:OnStopDrifting",
        "body": "components.boatdrifter:OnStopDrifting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.IsMoving:": {
        "prefix": "components.boatdrifter:IsMoving",
        "body": "components.boatdrifter:IsMoving()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatdrifter.OnStartDrifting:": {
        "prefix": "components.boatdrifter:OnStartDrifting",
        "body": "components.boatdrifter:OnStartDrifting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatleak.SetRepairedTime:": {
        "prefix": "components.boatleak:SetRepairedTime",
        "body": "components.boatleak:SetRepairedTime(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatleak.ChangeToRepaired:": {
        "prefix": "components.boatleak:ChangeToRepaired",
        "body": "components.boatleak:ChangeToRepaired(${1:repair_build_name},${2:sndoverride})",
        "description": "参数:(repair_build_name)<>[],(sndoverride)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatleak.SetState:": {
        "prefix": "components.boatleak:SetState",
        "body": "components.boatleak:SetState(${1:state},${2:skip_open})",
        "description": "参数:(state)<>[],(skip_open)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatleak.LongUpdate:": {
        "prefix": "components.boatleak:LongUpdate",
        "body": "components.boatleak:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatleak.GetRemainingRepairedTime:": {
        "prefix": "components.boatleak:GetRemainingRepairedTime",
        "body": "components.boatleak:GetRemainingRepairedTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatleak.SetBoat:": {
        "prefix": "components.boatleak:SetBoat",
        "body": "components.boatleak:SetBoat(${1:boat})",
        "description": "参数:(boat)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatleak.Repair:": {
        "prefix": "components.boatleak:Repair",
        "body": "components.boatleak:Repair(${1:doer},${2:patch_item})",
        "description": "参数:(doer)<>[],(patch_item)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatleak.SetPlugged:": {
        "prefix": "components.boatleak:SetPlugged",
        "body": "components.boatleak:SetPlugged(${1:setting})",
        "description": "参数:(setting)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatleak.OnLoad:": {
        "prefix": "components.boatleak:OnLoad",
        "body": "components.boatleak:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatleak.IsFinishedSpawning:": {
        "prefix": "components.boatleak:IsFinishedSpawning",
        "body": "components.boatleak:IsFinishedSpawning()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatleak.OnSave:": {
        "prefix": "components.boatleak:OnSave",
        "body": "components.boatleak:OnSave(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.OnSave:": {
        "prefix": "components.boatmagnet:OnSave",
        "body": "components.boatmagnet:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.IsBeaconOnSameBoat:": {
        "prefix": "components.boatmagnet:IsBeaconOnSameBoat",
        "body": "components.boatmagnet:IsBeaconOnSameBoat(${1:beacon})",
        "description": "参数:(beacon)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.OnRemoveFromEntity:": {
        "prefix": "components.boatmagnet:OnRemoveFromEntity",
        "body": "components.boatmagnet:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.IsActivated:": {
        "prefix": "components.boatmagnet:IsActivated",
        "body": "components.boatmagnet:IsActivated()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.PairedBeacon:": {
        "prefix": "components.boatmagnet:PairedBeacon",
        "body": "components.boatmagnet:PairedBeacon()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.FindNearestBeacon:": {
        "prefix": "components.boatmagnet:FindNearestBeacon",
        "body": "components.boatmagnet:FindNearestBeacon()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.PairWithBeacon:": {
        "prefix": "components.boatmagnet:PairWithBeacon",
        "body": "components.boatmagnet:PairWithBeacon(${1:beacon})",
        "description": "参数:(beacon)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.OnLoad:": {
        "prefix": "components.boatmagnet:OnLoad",
        "body": "components.boatmagnet:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.GetDebugString:": {
        "prefix": "components.boatmagnet:GetDebugString",
        "body": "components.boatmagnet:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.GetFollowTarget:": {
        "prefix": "components.boatmagnet:GetFollowTarget",
        "body": "components.boatmagnet:GetFollowTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.SetBoat:": {
        "prefix": "components.boatmagnet:SetBoat",
        "body": "components.boatmagnet:SetBoat(${1:boat})",
        "description": "参数:(boat)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.CalcMagnetForce:": {
        "prefix": "components.boatmagnet:CalcMagnetForce",
        "body": "components.boatmagnet:CalcMagnetForce()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.OnUpdate:": {
        "prefix": "components.boatmagnet:OnUpdate",
        "body": "components.boatmagnet:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.CalcMagnetDirection:": {
        "prefix": "components.boatmagnet:CalcMagnetDirection",
        "body": "components.boatmagnet:CalcMagnetDirection()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.CalcMaxVelocity:": {
        "prefix": "components.boatmagnet:CalcMaxVelocity",
        "body": "components.boatmagnet:CalcMaxVelocity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.UnpairWithBeacon:": {
        "prefix": "components.boatmagnet:UnpairWithBeacon",
        "body": "components.boatmagnet:UnpairWithBeacon()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnet.OnRemoveEntity:": {
        "prefix": "components.boatmagnet:OnRemoveEntity",
        "body": "components.boatmagnet:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.PairedMagnet:": {
        "prefix": "components.boatmagnetbeacon:PairedMagnet",
        "body": "components.boatmagnetbeacon:PairedMagnet()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.UnpairWithMagnet:": {
        "prefix": "components.boatmagnetbeacon:UnpairWithMagnet",
        "body": "components.boatmagnetbeacon:UnpairWithMagnet()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.OnSave:": {
        "prefix": "components.boatmagnetbeacon:OnSave",
        "body": "components.boatmagnetbeacon:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.OnLoad:": {
        "prefix": "components.boatmagnetbeacon:OnLoad",
        "body": "components.boatmagnetbeacon:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.TurnOnBeacon:": {
        "prefix": "components.boatmagnetbeacon:TurnOnBeacon",
        "body": "components.boatmagnetbeacon:TurnOnBeacon()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.SetIsPickedUp:": {
        "prefix": "components.boatmagnetbeacon:SetIsPickedUp",
        "body": "components.boatmagnetbeacon:SetIsPickedUp(${1:pickedup})",
        "description": "参数:(pickedup)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.OnRemoveFromEntity:": {
        "prefix": "components.boatmagnetbeacon:OnRemoveFromEntity",
        "body": "components.boatmagnetbeacon:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.SetBoat:": {
        "prefix": "components.boatmagnetbeacon:SetBoat",
        "body": "components.boatmagnetbeacon:SetBoat(${1:boat})",
        "description": "参数:(boat)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.GetDebugString:": {
        "prefix": "components.boatmagnetbeacon:GetDebugString",
        "body": "components.boatmagnetbeacon:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.IsPickedUp:": {
        "prefix": "components.boatmagnetbeacon:IsPickedUp",
        "body": "components.boatmagnetbeacon:IsPickedUp()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.TurnOffBeacon:": {
        "prefix": "components.boatmagnetbeacon:TurnOffBeacon",
        "body": "components.boatmagnetbeacon:TurnOffBeacon()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.GetBoat:": {
        "prefix": "components.boatmagnetbeacon:GetBoat",
        "body": "components.boatmagnetbeacon:GetBoat()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.IsTurnedOff:": {
        "prefix": "components.boatmagnetbeacon:IsTurnedOff",
        "body": "components.boatmagnetbeacon:IsTurnedOff()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.PairWithMagnet:": {
        "prefix": "components.boatmagnetbeacon:PairWithMagnet",
        "body": "components.boatmagnetbeacon:PairWithMagnet(${1:magnet})",
        "description": "参数:(magnet)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.OnDeath:": {
        "prefix": "components.boatmagnetbeacon:OnDeath",
        "body": "components.boatmagnetbeacon:OnDeath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatmagnetbeacon.OnRemoveEntity:": {
        "prefix": "components.boatmagnetbeacon:OnRemoveEntity",
        "body": "components.boatmagnetbeacon:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatpatch.OnRemoveFromEntity:": {
        "prefix": "components.boatpatch:OnRemoveFromEntity",
        "body": "components.boatpatch:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatpatch.GetPatchType:": {
        "prefix": "components.boatpatch:GetPatchType",
        "body": "components.boatpatch:GetPatchType()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.OnSave:": {
        "prefix": "components.boatphysics:OnSave",
        "body": "components.boatphysics:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.RemoveMast:": {
        "prefix": "components.boatphysics:RemoveMast",
        "body": "components.boatphysics:RemoveMast(${1:mast})",
        "description": "参数:(mast)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.AddMast:": {
        "prefix": "components.boatphysics:AddMast",
        "body": "components.boatphysics:AddMast(${1:mast})",
        "description": "参数:(mast)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.RemoveMagnet:": {
        "prefix": "components.boatphysics:RemoveMagnet",
        "body": "components.boatphysics:RemoveMagnet(${1:magnet})",
        "description": "参数:(magnet)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetVelocity:": {
        "prefix": "components.boatphysics:GetVelocity",
        "body": "components.boatphysics:GetVelocity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.OnDeath:": {
        "prefix": "components.boatphysics:OnDeath",
        "body": "components.boatphysics:OnDeath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetMoveDirection:": {
        "prefix": "components.boatphysics:GetMoveDirection",
        "body": "components.boatphysics:GetMoveDirection()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetRudderDirection:": {
        "prefix": "components.boatphysics:GetRudderDirection",
        "body": "components.boatphysics:GetRudderDirection()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.AddBoatDrag:": {
        "prefix": "components.boatphysics:AddBoatDrag",
        "body": "components.boatphysics:AddBoatDrag(${1:boatdraginst})",
        "description": "参数:(boatdraginst)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetForceDampening:": {
        "prefix": "components.boatphysics:GetForceDampening",
        "body": "components.boatphysics:GetForceDampening()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.ApplyMagnetForce:": {
        "prefix": "components.boatphysics:ApplyMagnetForce",
        "body": "components.boatphysics:ApplyMagnetForce(${1:dt},${2:magnet_force},${3:magnet_direction},${4:cur_velocity},${5:max_velocity})",
        "description": "参数:(dt)<>[],(magnet_force)<>[],(magnet_direction)<>[],(cur_velocity)<>[],(max_velocity)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetTargetRudderDirection:": {
        "prefix": "components.boatphysics:GetTargetRudderDirection",
        "body": "components.boatphysics:GetTargetRudderDirection()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.CloseAllSails:": {
        "prefix": "components.boatphysics:CloseAllSails",
        "body": "components.boatphysics:CloseAllSails()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.OnEntitySleep:": {
        "prefix": "components.boatphysics:OnEntitySleep",
        "body": "components.boatphysics:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.SetCanSteeringRotate:": {
        "prefix": "components.boatphysics:SetCanSteeringRotate",
        "body": "components.boatphysics:SetCanSteeringRotate(${1:can_rotate})",
        "description": "参数:(can_rotate)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.DoApplyForce:": {
        "prefix": "components.boatphysics:DoApplyForce",
        "body": "components.boatphysics:DoApplyForce(${1:dir_x},${2:dir_z},${3:force})",
        "description": "参数:(dir_x)<>[],(dir_z)<>[],(force)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.ApplySailForce:": {
        "prefix": "components.boatphysics:ApplySailForce",
        "body": "components.boatphysics:ApplySailForce(${1:dt},${2:sail_force},${3:cur_velocity},${4:max_velocity})",
        "description": "参数:(dt)<>[],(sail_force)<>[],(cur_velocity)<>[],(max_velocity)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetMaxVelocity:": {
        "prefix": "components.boatphysics:GetMaxVelocity",
        "body": "components.boatphysics:GetMaxVelocity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.SetTargetRudderDirection:": {
        "prefix": "components.boatphysics:SetTargetRudderDirection",
        "body": "components.boatphysics:SetTargetRudderDirection(${1:dir_x},${2:dir_z})",
        "description": "参数:(dir_x)<>[],(dir_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.StopUpdating:": {
        "prefix": "components.boatphysics:StopUpdating",
        "body": "components.boatphysics:StopUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.AddMagnet:": {
        "prefix": "components.boatphysics:AddMagnet",
        "body": "components.boatphysics:AddMagnet(${1:magnet})",
        "description": "参数:(magnet)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.AddAnchorCmp:": {
        "prefix": "components.boatphysics:AddAnchorCmp",
        "body": "components.boatphysics:AddAnchorCmp(${1:anchor})",
        "description": "参数:(anchor)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.RemoveBoatDrag:": {
        "prefix": "components.boatphysics:RemoveBoatDrag",
        "body": "components.boatphysics:RemoveBoatDrag(${1:boatdraginst})",
        "description": "参数:(boatdraginst)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetTotalAnchorDrag:": {
        "prefix": "components.boatphysics:GetTotalAnchorDrag",
        "body": "components.boatphysics:GetTotalAnchorDrag()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetAnchorSailForceModifier:": {
        "prefix": "components.boatphysics:GetAnchorSailForceModifier",
        "body": "components.boatphysics:GetAnchorSailForceModifier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.ApplyRowForce:": {
        "prefix": "components.boatphysics:ApplyRowForce",
        "body": "components.boatphysics:ApplyRowForce(${1:dir_x},${2:dir_z},${3:force},${4:max_velocity})",
        "description": "参数:(dir_x)<>[],(dir_z)<>[],(force)<>[],(max_velocity)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.OnLoad:": {
        "prefix": "components.boatphysics:OnLoad",
        "body": "components.boatphysics:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetDebugString:": {
        "prefix": "components.boatphysics:GetDebugString",
        "body": "components.boatphysics:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetRudderTurnSpeed:": {
        "prefix": "components.boatphysics:GetRudderTurnSpeed",
        "body": "components.boatphysics:GetRudderTurnSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.AddEmergencyBrakeSource:": {
        "prefix": "components.boatphysics:AddEmergencyBrakeSource",
        "body": "components.boatphysics:AddEmergencyBrakeSource(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetBoatDrag:": {
        "prefix": "components.boatphysics:GetBoatDrag",
        "body": "components.boatphysics:GetBoatDrag(${1:velocity},${2:total_anchor_drag})",
        "description": "参数:(velocity)<>[],(total_anchor_drag)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.ApplyDrag:": {
        "prefix": "components.boatphysics:ApplyDrag",
        "body": "components.boatphysics:ApplyDrag(${1:dt},${2:total_drag},${3:cur_velocity},${4:velocity_normal_x},${5:velocity_normal_z})",
        "description": "参数:(dt)<>[],(total_drag)<>[],(cur_velocity)<>[],(velocity_normal_x)<>[],(velocity_normal_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.RemoveEmergencyBrakeSource:": {
        "prefix": "components.boatphysics:RemoveEmergencyBrakeSource",
        "body": "components.boatphysics:RemoveEmergencyBrakeSource(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.SetHalting:": {
        "prefix": "components.boatphysics:SetHalting",
        "body": "components.boatphysics:SetHalting(${1:halt})",
        "description": "参数:(halt)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.OnUpdate:": {
        "prefix": "components.boatphysics:OnUpdate",
        "body": "components.boatphysics:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.GetNormalizedVelocities:": {
        "prefix": "components.boatphysics:GetNormalizedVelocities",
        "body": "components.boatphysics:GetNormalizedVelocities()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.StartUpdating:": {
        "prefix": "components.boatphysics:StartUpdating",
        "body": "components.boatphysics:StartUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatphysics.RemoveAnchorCmp:": {
        "prefix": "components.boatphysics:RemoveAnchorCmp",
        "body": "components.boatphysics:RemoveAnchorCmp(${1:anchor})",
        "description": "参数:(anchor)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatphysics.ApplyForce:": {
        "prefix": "components.boatphysics:ApplyForce",
        "body": "components.boatphysics:ApplyForce(${1:dir_x},${2:dir_z},${3:force})",
        "description": "参数:(dir_x)<>[],(dir_z)<>[],(force)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.GetHeadingNormal:": {
        "prefix": "components.boatracecrew:GetHeadingNormal",
        "body": "components.boatracecrew:GetHeadingNormal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.SetTarget:": {
        "prefix": "components.boatracecrew:SetTarget",
        "body": "components.boatracecrew:SetTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.SetCaptain:": {
        "prefix": "components.boatracecrew:SetCaptain",
        "body": "components.boatracecrew:SetCaptain(${1:captain})",
        "description": "参数:(captain)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.RemoveMemberListeners:": {
        "prefix": "components.boatracecrew:RemoveMemberListeners",
        "body": "components.boatracecrew:RemoveMemberListeners(${1:member})",
        "description": "参数:(member)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.AddMember:": {
        "prefix": "components.boatracecrew:AddMember",
        "body": "components.boatracecrew:AddMember(${1:new_member},${2:is_captain})",
        "description": "参数:(new_member)<>[],(is_captain)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.OnSave:": {
        "prefix": "components.boatracecrew:OnSave",
        "body": "components.boatracecrew:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.LoadPostPass:": {
        "prefix": "components.boatracecrew:LoadPostPass",
        "body": "components.boatracecrew:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.AddMemberListeners:": {
        "prefix": "components.boatracecrew:AddMemberListeners",
        "body": "components.boatracecrew:AddMemberListeners(${1:member})",
        "description": "参数:(member)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.OnRemoveEntity:": {
        "prefix": "components.boatracecrew:OnRemoveEntity",
        "body": "components.boatracecrew:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.OnRemoveFromEntity:": {
        "prefix": "components.boatracecrew:OnRemoveFromEntity",
        "body": "components.boatracecrew:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.OnUpdate:": {
        "prefix": "components.boatracecrew:OnUpdate",
        "body": "components.boatracecrew:OnUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatracecrew.RemoveMember:": {
        "prefix": "components.boatracecrew:RemoveMember",
        "body": "components.boatracecrew:RemoveMember(${1:member})",
        "description": "参数:(member)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatrace_proximitybeacon.SetBoatraceStartedFn:": {
        "prefix": "components.boatrace_proximitybeacon:SetBoatraceStartedFn",
        "body": "components.boatrace_proximitybeacon:SetBoatraceStartedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatrace_proximitybeacon.OnRemoveFromEntity:": {
        "prefix": "components.boatrace_proximitybeacon:OnRemoveFromEntity",
        "body": "components.boatrace_proximitybeacon:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatrace_proximitybeacon.SetBoatraceFinishedFn:": {
        "prefix": "components.boatrace_proximitybeacon:SetBoatraceFinishedFn",
        "body": "components.boatrace_proximitybeacon:SetBoatraceFinishedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatrace_proximitychecker.OnStartRace:": {
        "prefix": "components.boatrace_proximitychecker:OnStartRace",
        "body": "components.boatrace_proximitychecker:OnStartRace()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatrace_proximitychecker.OnRemoveFromEntity:": {
        "prefix": "components.boatrace_proximitychecker:OnRemoveFromEntity",
        "body": "components.boatrace_proximitychecker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatrace_proximitychecker.OnFinishRace:": {
        "prefix": "components.boatrace_proximitychecker:OnFinishRace",
        "body": "components.boatrace_proximitychecker:OnFinishRace()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatring.RemoveRotator:": {
        "prefix": "components.boatring:RemoveRotator",
        "body": "components.boatring:RemoveRotator(${1:rotator})",
        "description": "参数:(rotator)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatring.GetBumperAtPoint:": {
        "prefix": "components.boatring:GetBumperAtPoint",
        "body": "components.boatring:GetBumperAtPoint(${1:x},${2:z})",
        "description": "参数:(x)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatring.GetRadius:": {
        "prefix": "components.boatring:GetRadius",
        "body": "components.boatring:GetRadius()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatring.OnLoad:": {
        "prefix": "components.boatring:OnLoad",
        "body": "components.boatring:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatring.SetRotationDirection:": {
        "prefix": "components.boatring:SetRotationDirection",
        "body": "components.boatring:SetRotationDirection(${1:dir})",
        "description": "参数:(dir)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatring.GetRotationDirection:": {
        "prefix": "components.boatring:GetRotationDirection",
        "body": "components.boatring:GetRotationDirection()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatring.AddBumper:": {
        "prefix": "components.boatring:AddBumper",
        "body": "components.boatring:AddBumper(${1:bumper})",
        "description": "参数:(bumper)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatring.AddRotator:": {
        "prefix": "components.boatring:AddRotator",
        "body": "components.boatring:AddRotator(${1:rotator})",
        "description": "参数:(rotator)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatring.OnUpdate:": {
        "prefix": "components.boatring:OnUpdate",
        "body": "components.boatring:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatring.OnSave:": {
        "prefix": "components.boatring:OnSave",
        "body": "components.boatring:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatring.OnDeath:": {
        "prefix": "components.boatring:OnDeath",
        "body": "components.boatring:OnDeath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatring.GetNumSegments:": {
        "prefix": "components.boatring:GetNumSegments",
        "body": "components.boatring:GetNumSegments()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatring.RemoveBumper:": {
        "prefix": "components.boatring:RemoveBumper",
        "body": "components.boatring:RemoveBumper(${1:bumper})",
        "description": "参数:(bumper)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatringdata.IsRotating:": {
        "prefix": "components.boatringdata:IsRotating",
        "body": "components.boatringdata:IsRotating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatringdata.GetRadius:": {
        "prefix": "components.boatringdata:GetRadius",
        "body": "components.boatringdata:GetRadius()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatringdata.SetIsRotating:": {
        "prefix": "components.boatringdata:SetIsRotating",
        "body": "components.boatringdata:SetIsRotating(${1:isrotating})",
        "description": "参数:(isrotating)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatringdata.SetNumSegments:": {
        "prefix": "components.boatringdata:SetNumSegments",
        "body": "components.boatringdata:SetNumSegments(${1:segments})",
        "description": "参数:(segments)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatringdata.SetRadius:": {
        "prefix": "components.boatringdata:SetRadius",
        "body": "components.boatringdata:SetRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatringdata.GetNumSegments:": {
        "prefix": "components.boatringdata:GetNumSegments",
        "body": "components.boatringdata:GetNumSegments()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatrotator.OnRemoveEntity:": {
        "prefix": "components.boatrotator:OnRemoveEntity",
        "body": "components.boatrotator:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatrotator.SetRotationDirection:": {
        "prefix": "components.boatrotator:SetRotationDirection",
        "body": "components.boatrotator:SetRotationDirection(${1:dir})",
        "description": "参数:(dir)<>[] 返回值:无返回值 贡献者:@"
    },
    "boatrotator.OnDeath:": {
        "prefix": "components.boatrotator:OnDeath",
        "body": "components.boatrotator:OnDeath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatrotator.OnRemoveFromEntity:": {
        "prefix": "components.boatrotator:OnRemoveFromEntity",
        "body": "components.boatrotator:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "boatrotator.SetBoat:": {
        "prefix": "components.boatrotator:SetBoat",
        "body": "components.boatrotator:SetBoat(${1:boat})",
        "description": "参数:(boat)<>[] 返回值:无返回值 贡献者:@"
    },
    "boattrail.OnUpdate:": {
        "prefix": "components.boattrail:OnUpdate",
        "body": "components.boattrail:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "boattrail.SpawnEffectPrefab:": {
        "prefix": "components.boattrail:SpawnEffectPrefab",
        "body": "components.boattrail:SpawnEffectPrefab(${1:x},${2:y},${3:z},${4:dir_x},${5:dir_z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(dir_x)<>[],(dir_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "boattrailmover.OnUpdate:": {
        "prefix": "components.boattrailmover:OnUpdate",
        "body": "components.boattrailmover:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "boattrailmover.Setup:": {
        "prefix": "components.boattrailmover:Setup",
        "body": "components.boattrailmover:Setup(${1:dir_x},${2:dir_z},${3:velocity},${4:acceleration})",
        "description": "参数:(dir_x)<>[],(dir_z)<>[],(velocity)<>[],(acceleration)<>[] 返回值:无返回值 贡献者:@"
    },
    "book.OnPeruse:": {
        "prefix": "components.book:OnPeruse",
        "body": "components.book:OnPeruse(${1:reader})",
        "description": "参数:(reader)<>[] 返回值:无返回值 贡献者:@"
    },
    "book.SetOnPeruse:": {
        "prefix": "components.book:SetOnPeruse",
        "body": "components.book:SetOnPeruse(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "book.Interact:": {
        "prefix": "components.book:Interact",
        "body": "components.book:Interact(${1:fn},${2:reader})",
        "description": "参数:(fn)<>[],(reader)<>[] 返回值:无返回值 贡献者:@"
    },
    "book.ConsumeUse:": {
        "prefix": "components.book:ConsumeUse",
        "body": "components.book:ConsumeUse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "book.SetOnRead:": {
        "prefix": "components.book:SetOnRead",
        "body": "components.book:SetOnRead(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "book.SetFx:": {
        "prefix": "components.book:SetFx",
        "body": "components.book:SetFx(${1:fx},${2:fxmount})",
        "description": "参数:(fx)<>[],(fxmount)<>[] 返回值:无返回值 贡献者:@"
    },
    "book.SetPeruseSanity:": {
        "prefix": "components.book:SetPeruseSanity",
        "body": "components.book:SetPeruseSanity(${1:sanity})",
        "description": "参数:(sanity)<>[] 返回值:无返回值 贡献者:@"
    },
    "book.SetReadSanity:": {
        "prefix": "components.book:SetReadSanity",
        "body": "components.book:SetReadSanity(${1:sanity})",
        "description": "参数:(sanity)<>[] 返回值:无返回值 贡献者:@"
    },
    "book.OnRead:": {
        "prefix": "components.book:OnRead",
        "body": "components.book:OnRead(${1:reader})",
        "description": "参数:(reader)<>[] 返回值:无返回值 贡献者:@"
    },
    "brushable.GetDebugString:": {
        "prefix": "components.brushable:GetDebugString",
        "body": "components.brushable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "brushable.OnSave:": {
        "prefix": "components.brushable:OnSave",
        "body": "components.brushable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "brushable.OnLoad:": {
        "prefix": "components.brushable:OnLoad",
        "body": "components.brushable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "brushable.SetBrushable:": {
        "prefix": "components.brushable:SetBrushable",
        "body": "components.brushable:SetBrushable(${1:brushable},${2:reset})",
        "description": "参数:(brushable)<>[],(reset)<>[] 返回值:无返回值 贡献者:@"
    },
    "brushable.CalculateNumPrizes:": {
        "prefix": "components.brushable:CalculateNumPrizes",
        "body": "components.brushable:CalculateNumPrizes()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "brushable.Brush:": {
        "prefix": "components.brushable:Brush",
        "body": "components.brushable:Brush(${1:doer},${2:brush})",
        "description": "参数:(doer)<>[],(brush)<>[] 返回值:无返回值 贡献者:@"
    },
    "brushable.SetOnBrushed:": {
        "prefix": "components.brushable:SetOnBrushed",
        "body": "components.brushable:SetOnBrushed(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.GiveTempTechBonus:": {
        "prefix": "components.builder:GiveTempTechBonus",
        "body": "components.builder:GiveTempTechBonus(${1:tech})",
        "description": "参数:(tech)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.ActivateCurrentResearchMachine:": {
        "prefix": "components.builder:ActivateCurrentResearchMachine",
        "body": "components.builder:ActivateCurrentResearchMachine(${1:recipe})",
        "description": "参数:(recipe)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.HasTechIngredient:": {
        "prefix": "components.builder:HasTechIngredient",
        "body": "components.builder:HasTechIngredient(${1:ingredient})",
        "description": "参数:(ingredient)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.LongUpdate:": {
        "prefix": "components.builder:LongUpdate",
        "body": "components.builder:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.BufferBuild:": {
        "prefix": "components.builder:BufferBuild",
        "body": "components.builder:BufferBuild(${1:recname})",
        "description": "参数:(recname)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.MakeRecipe:": {
        "prefix": "components.builder:MakeRecipe",
        "body": "components.builder:MakeRecipe(${1:recipe},${2:pt},${3:rot},${4:skin},${5:onsuccess})",
        "description": "参数:(recipe)<>[],(pt)<>[],(rot)<>[],(skin)<>[],(onsuccess)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.MakeRecipeAtPoint:": {
        "prefix": "components.builder:MakeRecipeAtPoint",
        "body": "components.builder:MakeRecipeAtPoint(${1:recipe},${2:pt},${3:rot},${4:skin})",
        "description": "参数:(recipe)<>[],(pt)<>[],(rot)<>[],(skin)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.RemoveRecipe:": {
        "prefix": "components.builder:RemoveRecipe",
        "body": "components.builder:RemoveRecipe(${1:recname})",
        "description": "参数:(recname)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.MakeRecipeFromMenu:": {
        "prefix": "components.builder:MakeRecipeFromMenu",
        "body": "components.builder:MakeRecipeFromMenu(${1:recipe},${2:skin})",
        "description": "参数:(recipe)<>[],(skin)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.HasCharacterIngredient:": {
        "prefix": "components.builder:HasCharacterIngredient",
        "body": "components.builder:HasCharacterIngredient(${1:ingredient})",
        "description": "参数:(ingredient)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.ConsumeTempTechBonuses:": {
        "prefix": "components.builder:ConsumeTempTechBonuses",
        "body": "components.builder:ConsumeTempTechBonuses()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "builder.GetTempTechBonuses:": {
        "prefix": "components.builder:GetTempTechBonuses",
        "body": "components.builder:GetTempTechBonuses()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "builder.AddRecipe:": {
        "prefix": "components.builder:AddRecipe",
        "body": "components.builder:AddRecipe(${1:recname})",
        "description": "参数:(recname)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.DoBuild:": {
        "prefix": "components.builder:DoBuild",
        "body": "components.builder:DoBuild(${1:recname},${2:pt},${3:rotation},${4:skin})",
        "description": "参数:(recname)<>[],(pt)<>[],(rotation)<>[],(skin)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.RemoveIngredients:": {
        "prefix": "components.builder:RemoveIngredients",
        "body": "components.builder:RemoveIngredients(${1:ingredients},${2:recname},${3:discounted})",
        "description": "参数:(ingredients)<>[],(recname)<>[],(discounted)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.GetIngredientWetness:": {
        "prefix": "components.builder:GetIngredientWetness",
        "body": "components.builder:GetIngredientWetness(${1:ingredients})",
        "description": "参数:(ingredients)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.OnLoad:": {
        "prefix": "components.builder:OnLoad",
        "body": "components.builder:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.KnowsRecipe:": {
        "prefix": "components.builder:KnowsRecipe",
        "body": "components.builder:KnowsRecipe(${1:recipe},${2:ignore_tempbonus})",
        "description": "参数:(recipe)<>[],(ignore_tempbonus)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.CanLearn:": {
        "prefix": "components.builder:CanLearn",
        "body": "components.builder:CanLearn(${1:recname})",
        "description": "参数:(recname)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.UsePrototyper:": {
        "prefix": "components.builder:UsePrototyper",
        "body": "components.builder:UsePrototyper(${1:prototyper})",
        "description": "参数:(prototyper)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.IsBuildBuffered:": {
        "prefix": "components.builder:IsBuildBuffered",
        "body": "components.builder:IsBuildBuffered(${1:recname})",
        "description": "参数:(recname)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.GetIngredients:": {
        "prefix": "components.builder:GetIngredients",
        "body": "components.builder:GetIngredients(${1:recname})",
        "description": "参数:(recname)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.CanBuild:": {
        "prefix": "components.builder:CanBuild",
        "body": "components.builder:CanBuild(${1:recipe_name})",
        "description": "参数:(recipe_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.HasIngredients:": {
        "prefix": "components.builder:HasIngredients",
        "body": "components.builder:HasIngredients(${1:recipe})",
        "description": "参数:(recipe)<>[] 返回值:无返回值 贡献者:@"
    },
    "builder.OnUpdate:": {
        "prefix": "components.builder:OnUpdate",
        "body": "components.builder:OnUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "builder.OnSave:": {
        "prefix": "components.builder:OnSave",
        "body": "components.builder:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "builder.GetTechBonuses:": {
        "prefix": "components.builder:GetTechBonuses",
        "body": "components.builder:GetTechBonuses()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "builder.GiveAllRecipes:": {
        "prefix": "components.builder:GiveAllRecipes",
        "body": "components.builder:GiveAllRecipes()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "builder.UnlockRecipe:": {
        "prefix": "components.builder:UnlockRecipe",
        "body": "components.builder:UnlockRecipe(${1:recname})",
        "description": "参数:(recname)<>[] 返回值:无返回值 贡献者:@"
    },
    "bundlemaker.OnStartBundling:": {
        "prefix": "components.bundlemaker:OnStartBundling",
        "body": "components.bundlemaker:OnStartBundling(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "bundlemaker.SetSkinData:": {
        "prefix": "components.bundlemaker:SetSkinData",
        "body": "components.bundlemaker:SetSkinData(${1:skinname},${2:skin_id})",
        "description": "参数:(skinname)<>[],(skin_id)<>[] 返回值:无返回值 贡献者:@"
    },
    "bundlemaker.SetOnStartBundlingFn:": {
        "prefix": "components.bundlemaker:SetOnStartBundlingFn",
        "body": "components.bundlemaker:SetOnStartBundlingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "bundlemaker.SetBundlingPrefabs:": {
        "prefix": "components.bundlemaker:SetBundlingPrefabs",
        "body": "components.bundlemaker:SetBundlingPrefabs(${1:bundling},${2:bundled})",
        "description": "参数:(bundling)<>[],(bundled)<>[] 返回值:无返回值 贡献者:@"
    },
    "bundler.OnLoad:": {
        "prefix": "components.bundler:OnLoad",
        "body": "components.bundler:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "bundler.CanStartBundling:": {
        "prefix": "components.bundler:CanStartBundling",
        "body": "components.bundler:CanStartBundling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bundler.StartBundling:": {
        "prefix": "components.bundler:StartBundling",
        "body": "components.bundler:StartBundling(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "bundler.StopBundling:": {
        "prefix": "components.bundler:StopBundling",
        "body": "components.bundler:StopBundling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bundler.OnFinishBundling:": {
        "prefix": "components.bundler:OnFinishBundling",
        "body": "components.bundler:OnFinishBundling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bundler.OnSave:": {
        "prefix": "components.bundler:OnSave",
        "body": "components.bundler:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "bundler.IsBundling:": {
        "prefix": "components.bundler:IsBundling",
        "body": "components.bundler:IsBundling(${1:bundlinginst})",
        "description": "参数:(bundlinginst)<>[] 返回值:无返回值 贡献者:@"
    },
    "bundler.FinishBundling:": {
        "prefix": "components.bundler:FinishBundling",
        "body": "components.bundler:FinishBundling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.Ignite:": {
        "prefix": "components.burnable:Ignite",
        "body": "components.burnable:Ignite(${1:immediate},${2:source},${3:doer})",
        "description": "参数:(immediate)<>[],(source)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.SetBurnTime:": {
        "prefix": "components.burnable:SetBurnTime",
        "body": "components.burnable:SetBurnTime(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.SetFXOffset:": {
        "prefix": "components.burnable:SetFXOffset",
        "body": "components.burnable:SetFXOffset(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.OnRemoveFromEntity:": {
        "prefix": "components.burnable:OnRemoveFromEntity",
        "body": "components.burnable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.SetBurningFX:": {
        "prefix": "components.burnable:SetBurningFX",
        "body": "components.burnable:SetBurningFX(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.GetLargestLightRadius:": {
        "prefix": "components.burnable:GetLargestLightRadius",
        "body": "components.burnable:GetLargestLightRadius()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.HasEndothermicHeat:": {
        "prefix": "components.burnable:HasEndothermicHeat",
        "body": "components.burnable:HasEndothermicHeat()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.StartWildfire:": {
        "prefix": "components.burnable:StartWildfire",
        "body": "components.burnable:StartWildfire()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.IsSmoldering:": {
        "prefix": "components.burnable:IsSmoldering",
        "body": "components.burnable:IsSmoldering()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.OverrideBurnFXRadius:": {
        "prefix": "components.burnable:OverrideBurnFXRadius",
        "body": "components.burnable:OverrideBurnFXRadius(${1:radius_levels})",
        "description": "参数:(radius_levels)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.SmotherSmolder:": {
        "prefix": "components.burnable:SmotherSmolder",
        "body": "components.burnable:SmotherSmolder(${1:smotherer})",
        "description": "参数:(smotherer)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.KillFX:": {
        "prefix": "components.burnable:KillFX",
        "body": "components.burnable:KillFX()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.ExtendBurning:": {
        "prefix": "components.burnable:ExtendBurning",
        "body": "components.burnable:ExtendBurning()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.SetFXLevel:": {
        "prefix": "components.burnable:SetFXLevel",
        "body": "components.burnable:SetFXLevel(${1:level},${2:percent})",
        "description": "参数:(level)<>[],(percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.SpawnFX:": {
        "prefix": "components.burnable:SpawnFX",
        "body": "components.burnable:SpawnFX(${1:immediate})",
        "description": "参数:(immediate)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.Extinguish:": {
        "prefix": "components.burnable:Extinguish",
        "body": "components.burnable:Extinguish(${1:resetpropagator},${2:heatpct},${3:smotherer})",
        "description": "参数:(resetpropagator)<>[],(heatpct)<>[],(smotherer)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.OnRemoveEntity:": {
        "prefix": "components.burnable:OnRemoveEntity",
        "body": "components.burnable:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.GetDebugString:": {
        "prefix": "components.burnable:GetDebugString",
        "body": "components.burnable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.OverrideBurnFXFinalOffset:": {
        "prefix": "components.burnable:OverrideBurnFXFinalOffset",
        "body": "components.burnable:OverrideBurnFXFinalOffset(${1:offs})",
        "description": "参数:(offs)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.StopSmoldering:": {
        "prefix": "components.burnable:StopSmoldering",
        "body": "components.burnable:StopSmoldering(${1:heatpct})",
        "description": "参数:(heatpct)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.AddBurnFX:": {
        "prefix": "components.burnable:AddBurnFX",
        "body": "components.burnable:AddBurnFX(${1:prefab},${2:offset},${3:followsymbol},${4:followaschild},${5:scale},${6:followlayered})",
        "description": "参数:(prefab)<>[],(offset)<>[],(followsymbol)<>[],(followaschild)<>[],(scale)<>[],(followlayered)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.GetControlledBurn:": {
        "prefix": "components.burnable:GetControlledBurn",
        "body": "components.burnable:GetControlledBurn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.LongUpdate:": {
        "prefix": "components.burnable:LongUpdate",
        "body": "components.burnable:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.FixFX:": {
        "prefix": "components.burnable:FixFX",
        "body": "components.burnable:FixFX()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.IsBurning:": {
        "prefix": "components.burnable:IsBurning",
        "body": "components.burnable:IsBurning()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.CalculateControlledBurnDuration:": {
        "prefix": "components.burnable:CalculateControlledBurnDuration",
        "body": "components.burnable:CalculateControlledBurnDuration()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.IsControlledBurn:": {
        "prefix": "components.burnable:IsControlledBurn",
        "body": "components.burnable:IsControlledBurn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "burnable.OverrideBurnFXBuild:": {
        "prefix": "components.burnable:OverrideBurnFXBuild",
        "body": "components.burnable:OverrideBurnFXBuild(${1:build})",
        "description": "参数:(build)<>[] 返回值:无返回值 贡献者:@"
    },
    "burnable.HasExothermicHeat:": {
        "prefix": "components.burnable:HasExothermicHeat",
        "body": "components.burnable:HasExothermicHeat()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "canopylightrays.SpawnLightrays:": {
        "prefix": "components.canopylightrays:SpawnLightrays",
        "body": "components.canopylightrays:SpawnLightrays()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "canopylightrays.DespawnLightrays:": {
        "prefix": "components.canopylightrays:DespawnLightrays",
        "body": "components.canopylightrays:DespawnLightrays()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "canopylightrays.OnRemoveEntity:": {
        "prefix": "components.canopylightrays:OnRemoveEntity",
        "body": "components.canopylightrays:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "canopyshadows.DespawnShadows:": {
        "prefix": "components.canopyshadows:DespawnShadows",
        "body": "components.canopyshadows:DespawnShadows(${1:ignore_entity_sleep})",
        "description": "参数:(ignore_entity_sleep)<>[] 返回值:无返回值 贡献者:@"
    },
    "canopyshadows.GenerateCanopyShadowPositions:": {
        "prefix": "components.canopyshadows:GenerateCanopyShadowPositions",
        "body": "components.canopyshadows:GenerateCanopyShadowPositions()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "canopyshadows.OnRemoveEntity:": {
        "prefix": "components.canopyshadows:OnRemoveEntity",
        "body": "components.canopyshadows:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "canopyshadows.OnEntityWake:": {
        "prefix": "components.canopyshadows:OnEntityWake",
        "body": "components.canopyshadows:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "canopyshadows.RemoveCanopyShadowPositions:": {
        "prefix": "components.canopyshadows:RemoveCanopyShadowPositions",
        "body": "components.canopyshadows:RemoveCanopyShadowPositions()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "canopyshadows.OnEntitySleep:": {
        "prefix": "components.canopyshadows:OnEntitySleep",
        "body": "components.canopyshadows:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "canopyshadows.SpawnShadows:": {
        "prefix": "components.canopyshadows:SpawnShadows",
        "body": "components.canopyshadows:SpawnShadows()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "carefulwalker.OnUpdate:": {
        "prefix": "components.carefulwalker:OnUpdate",
        "body": "components.carefulwalker:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "carefulwalker.SetCarefulWalkingSpeedMultiplier:": {
        "prefix": "components.carefulwalker:SetCarefulWalkingSpeedMultiplier",
        "body": "components.carefulwalker:SetCarefulWalkingSpeedMultiplier(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "carefulwalker.ToggleCareful:": {
        "prefix": "components.carefulwalker:ToggleCareful",
        "body": "components.carefulwalker:ToggleCareful(${1:careful})",
        "description": "参数:(careful)<>[] 返回值:无返回值 贡献者:@"
    },
    "carefulwalker.IsCarefulWalking:": {
        "prefix": "components.carefulwalker:IsCarefulWalking",
        "body": "components.carefulwalker:IsCarefulWalking()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "carefulwalker.OnRemoveFromEntity:": {
        "prefix": "components.carefulwalker:OnRemoveFromEntity",
        "body": "components.carefulwalker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "carefulwalker.TrackTarget:": {
        "prefix": "components.carefulwalker:TrackTarget",
        "body": "components.carefulwalker:TrackTarget(${1:target},${2:radius},${3:duration})",
        "description": "参数:(target)<>[],(radius)<>[],(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "carnivaldecor.GetDecorValue:": {
        "prefix": "components.carnivaldecor:GetDecorValue",
        "body": "components.carnivaldecor:GetDecorValue()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "carnivaldecor.OnRemoveFromEntity:": {
        "prefix": "components.carnivaldecor:OnRemoveFromEntity",
        "body": "components.carnivaldecor:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "carnivaldecor.OnRemoveEntity:": {
        "prefix": "components.carnivaldecor:OnRemoveEntity",
        "body": "components.carnivaldecor:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "carnivaldecorranker.UpdateDecorValue:": {
        "prefix": "components.carnivaldecorranker:UpdateDecorValue",
        "body": "components.carnivaldecorranker:UpdateDecorValue(${1:snap})",
        "description": "参数:(snap)<>[] 返回值:无返回值 贡献者:@"
    },
    "carnivaldecorranker.GetDebugString:": {
        "prefix": "components.carnivaldecorranker:GetDebugString",
        "body": "components.carnivaldecorranker:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "carnivaldecorranker.AddDecor:": {
        "prefix": "components.carnivaldecorranker:AddDecor",
        "body": "components.carnivaldecorranker:AddDecor(${1:decor})",
        "description": "参数:(decor)<>[] 返回值:无返回值 贡献者:@"
    },
    "carnivaldecorranker.RemoveDecor:": {
        "prefix": "components.carnivaldecorranker:RemoveDecor",
        "body": "components.carnivaldecorranker:RemoveDecor(${1:decor})",
        "description": "参数:(decor)<>[] 返回值:无返回值 贡献者:@"
    },
    "carnivalgamefeedable.DoFeed:": {
        "prefix": "components.carnivalgamefeedable:DoFeed",
        "body": "components.carnivalgamefeedable:DoFeed(${1:doer},${2:item})",
        "description": "参数:(doer)<>[],(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "carnivalgameshooter.Initialize:": {
        "prefix": "components.carnivalgameshooter:Initialize",
        "body": "components.carnivalgameshooter:Initialize()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "carnivalgameshooter.UpdateAiming:": {
        "prefix": "components.carnivalgameshooter:UpdateAiming",
        "body": "components.carnivalgameshooter:UpdateAiming(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "carnivalgameshooter.SetAim:": {
        "prefix": "components.carnivalgameshooter:SetAim",
        "body": "components.carnivalgameshooter:SetAim()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "carnivalgameshooter.Shoot:": {
        "prefix": "components.carnivalgameshooter:Shoot",
        "body": "components.carnivalgameshooter:Shoot()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "carnivalhostsummon.SetCanSummon:": {
        "prefix": "components.carnivalhostsummon:SetCanSummon",
        "body": "components.carnivalhostsummon:SetCanSummon(${1:cansummon})",
        "description": "参数:(cansummon)<>[] 返回值:无返回值 贡献者:@"
    },
    "catcher.StartWatching:": {
        "prefix": "components.catcher:StartWatching",
        "body": "components.catcher:StartWatching(${1:projectile})",
        "description": "参数:(projectile)<>[] 返回值:无返回值 贡献者:@"
    },
    "catcher.OnUpdate:": {
        "prefix": "components.catcher:OnUpdate",
        "body": "components.catcher:OnUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "catcher.SetCatchDistance:": {
        "prefix": "components.catcher:SetCatchDistance",
        "body": "components.catcher:SetCatchDistance(${1:dist})",
        "description": "参数:(dist)<>[] 返回值:无返回值 贡献者:@"
    },
    "catcher.SetEnabled:": {
        "prefix": "components.catcher:SetEnabled",
        "body": "components.catcher:SetEnabled(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "catcher.StopWatching:": {
        "prefix": "components.catcher:StopWatching",
        "body": "components.catcher:StopWatching(${1:projectile})",
        "description": "参数:(projectile)<>[] 返回值:无返回值 贡献者:@"
    },
    "catcher.SetActionDistance:": {
        "prefix": "components.catcher:SetActionDistance",
        "body": "components.catcher:SetActionDistance(${1:dist})",
        "description": "参数:(dist)<>[] 返回值:无返回值 贡献者:@"
    },
    "catcher.OnRemoveFromEntity:": {
        "prefix": "components.catcher:OnRemoveFromEntity",
        "body": "components.catcher:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "catcher.CanCatch:": {
        "prefix": "components.catcher:CanCatch",
        "body": "components.catcher:CanCatch()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cattoy.SetOnPlay:": {
        "prefix": "components.cattoy:SetOnPlay",
        "body": "components.cattoy:SetOnPlay(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "cattoy.Play:": {
        "prefix": "components.cattoy:Play",
        "body": "components.cattoy:Play(${1:doer},${2:is_airborne})",
        "description": "参数:(doer)<>[],(is_airborne)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelable.IsChanneling:": {
        "prefix": "components.channelable:IsChanneling",
        "body": "components.channelable:IsChanneling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "channelable.OnUpdate:": {
        "prefix": "components.channelable:OnUpdate",
        "body": "components.channelable:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelable.StartChanneling:": {
        "prefix": "components.channelable:StartChanneling",
        "body": "components.channelable:StartChanneling(${1:channeler})",
        "description": "参数:(channeler)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelable.SetEnabled:": {
        "prefix": "components.channelable:SetEnabled",
        "body": "components.channelable:SetEnabled(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelable.GetDebugString:": {
        "prefix": "components.channelable:GetDebugString",
        "body": "components.channelable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "channelable.StopChanneling:": {
        "prefix": "components.channelable:StopChanneling",
        "body": "components.channelable:StopChanneling(${1:aborted})",
        "description": "参数:(aborted)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelable.OnRemoveFromEntity:": {
        "prefix": "components.channelable:OnRemoveFromEntity",
        "body": "components.channelable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "channelable.SetChannelingFn:": {
        "prefix": "components.channelable:SetChannelingFn",
        "body": "components.channelable:SetChannelingFn(${1:startfn},${2:stopfn})",
        "description": "参数:(startfn)<>[],(stopfn)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelcastable.IsAnyUserChanneling:": {
        "prefix": "components.channelcastable:IsAnyUserChanneling",
        "body": "components.channelcastable:IsAnyUserChanneling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "channelcastable.SetStrafing:": {
        "prefix": "components.channelcastable:SetStrafing",
        "body": "components.channelcastable:SetStrafing(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelcastable.StopChanneling:": {
        "prefix": "components.channelcastable:StopChanneling",
        "body": "components.channelcastable:StopChanneling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "channelcastable.SetOnStartChannelingFn:": {
        "prefix": "components.channelcastable:SetOnStartChannelingFn",
        "body": "components.channelcastable:SetOnStartChannelingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelcastable.OnStartChanneling:": {
        "prefix": "components.channelcastable:OnStartChanneling",
        "body": "components.channelcastable:OnStartChanneling(${1:user})",
        "description": "参数:(user)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelcastable.GetDebugString:": {
        "prefix": "components.channelcastable:GetDebugString",
        "body": "components.channelcastable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "channelcastable.IsUserChanneling:": {
        "prefix": "components.channelcastable:IsUserChanneling",
        "body": "components.channelcastable:IsUserChanneling(${1:user})",
        "description": "参数:(user)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelcastable.OnStopChanneling:": {
        "prefix": "components.channelcastable:OnStopChanneling",
        "body": "components.channelcastable:OnStopChanneling(${1:user})",
        "description": "参数:(user)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelcastable.SetOnStopChannelingFn:": {
        "prefix": "components.channelcastable:SetOnStopChannelingFn",
        "body": "components.channelcastable:SetOnStopChannelingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelcaster.SetOnStartChannelingFn:": {
        "prefix": "components.channelcaster:SetOnStartChannelingFn",
        "body": "components.channelcaster:SetOnStartChannelingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelcaster.StartChanneling:": {
        "prefix": "components.channelcaster:StartChanneling",
        "body": "components.channelcaster:StartChanneling(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelcaster.IsChanneling:": {
        "prefix": "components.channelcaster:IsChanneling",
        "body": "components.channelcaster:IsChanneling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "channelcaster.GetDebugString:": {
        "prefix": "components.channelcaster:GetDebugString",
        "body": "components.channelcaster:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "channelcaster.StopChanneling:": {
        "prefix": "components.channelcaster:StopChanneling",
        "body": "components.channelcaster:StopChanneling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "channelcaster.IsChannelingItem:": {
        "prefix": "components.channelcaster:IsChannelingItem",
        "body": "components.channelcaster:IsChannelingItem(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "channelcaster.SetOnStopChannelingFn:": {
        "prefix": "components.channelcaster:SetOnStopChannelingFn",
        "body": "components.channelcaster:SetOnStopChannelingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.ClientLockCamera:": {
        "prefix": "components.charliecutscene:ClientLockCamera",
        "body": "components.charliecutscene:ClientLockCamera()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.IsGateRepaired:": {
        "prefix": "components.charliecutscene:IsGateRepaired",
        "body": "components.charliecutscene:IsGateRepaired()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.OnSave:": {
        "prefix": "components.charliecutscene:OnSave",
        "body": "components.charliecutscene:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.OnLoad:": {
        "prefix": "components.charliecutscene:OnLoad",
        "body": "components.charliecutscene:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.SpawnCharlieHand:": {
        "prefix": "components.charliecutscene:SpawnCharlieHand",
        "body": "components.charliecutscene:SpawnCharlieHand()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.FindCharlieHandSpawnPoint:": {
        "prefix": "components.charliecutscene:FindCharlieHandSpawnPoint",
        "body": "components.charliecutscene:FindCharlieHandSpawnPoint()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.FindSceneCameraAngle:": {
        "prefix": "components.charliecutscene:FindSceneCameraAngle",
        "body": "components.charliecutscene:FindSceneCameraAngle()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.Start:": {
        "prefix": "components.charliecutscene:Start",
        "body": "components.charliecutscene:Start()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.RepairGate:": {
        "prefix": "components.charliecutscene:RepairGate",
        "body": "components.charliecutscene:RepairGate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.SpawnCharlieWithDelay:": {
        "prefix": "components.charliecutscene:SpawnCharlieWithDelay",
        "body": "components.charliecutscene:SpawnCharlieWithDelay(${1:delay})",
        "description": "参数:(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.FindCharlieSpawnPoint:": {
        "prefix": "components.charliecutscene:FindCharlieSpawnPoint",
        "body": "components.charliecutscene:FindCharlieSpawnPoint()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.StartRepairingGateWithDelay:": {
        "prefix": "components.charliecutscene:StartRepairingGateWithDelay",
        "body": "components.charliecutscene:StartRepairingGateWithDelay(${1:delay},${2:delay_to_fix})",
        "description": "参数:(delay)<>[],(delay_to_fix)<>[] 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.ClientUnlockCamera:": {
        "prefix": "components.charliecutscene:ClientUnlockCamera",
        "body": "components.charliecutscene:ClientUnlockCamera()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.CollectAtriumPillarsData:": {
        "prefix": "components.charliecutscene:CollectAtriumPillarsData",
        "body": "components.charliecutscene:CollectAtriumPillarsData()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "charliecutscene.Finish:": {
        "prefix": "components.charliecutscene:Finish",
        "body": "components.charliecutscene:Finish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.QueueSpawnChild:": {
        "prefix": "components.childspawner:QueueSpawnChild",
        "body": "components.childspawner:QueueSpawnChild()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.TakeEmergencyOwnership:": {
        "prefix": "components.childspawner:TakeEmergencyOwnership",
        "body": "components.childspawner:TakeEmergencyOwnership(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.OnSave:": {
        "prefix": "components.childspawner:OnSave",
        "body": "components.childspawner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.StartUpdate:": {
        "prefix": "components.childspawner:StartUpdate",
        "body": "components.childspawner:StartUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetOnAddChildFn:": {
        "prefix": "components.childspawner:SetOnAddChildFn",
        "body": "components.childspawner:SetOnAddChildFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.TrySpawnEmergencyChild:": {
        "prefix": "components.childspawner:TrySpawnEmergencyChild",
        "body": "components.childspawner:TrySpawnEmergencyChild()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.OnRemoveFromEntity:": {
        "prefix": "components.childspawner:OnRemoveFromEntity",
        "body": "components.childspawner:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.CanEmergencySpawn:": {
        "prefix": "components.childspawner:CanEmergencySpawn",
        "body": "components.childspawner:CanEmergencySpawn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.CountChildrenOutside:": {
        "prefix": "components.childspawner:CountChildrenOutside",
        "body": "components.childspawner:CountChildrenOutside(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetOnTakeOwnershipFn:": {
        "prefix": "components.childspawner:SetOnTakeOwnershipFn",
        "body": "components.childspawner:SetOnTakeOwnershipFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.ShouldUpdate:": {
        "prefix": "components.childspawner:ShouldUpdate",
        "body": "components.childspawner:ShouldUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.StopSpawning:": {
        "prefix": "components.childspawner:StopSpawning",
        "body": "components.childspawner:StopSpawning()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetOnChildKilledFn:": {
        "prefix": "components.childspawner:SetOnChildKilledFn",
        "body": "components.childspawner:SetOnChildKilledFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.GetTimeToNextRegen:": {
        "prefix": "components.childspawner:GetTimeToNextRegen",
        "body": "components.childspawner:GetTimeToNextRegen()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.NumChildren:": {
        "prefix": "components.childspawner:NumChildren",
        "body": "components.childspawner:NumChildren()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetSpawnedFn:": {
        "prefix": "components.childspawner:SetSpawnedFn",
        "body": "components.childspawner:SetSpawnedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.StartSpawning:": {
        "prefix": "components.childspawner:StartSpawning",
        "body": "components.childspawner:StartSpawning()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.ReleaseAllChildren:": {
        "prefix": "components.childspawner:ReleaseAllChildren",
        "body": "components.childspawner:ReleaseAllChildren(${1:target},${2:prefab},${3:radius})",
        "description": "参数:(target)<>[],(prefab)<>[],(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.StartRegen:": {
        "prefix": "components.childspawner:StartRegen",
        "body": "components.childspawner:StartRegen()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.TakeOwnership:": {
        "prefix": "components.childspawner:TakeOwnership",
        "body": "components.childspawner:TakeOwnership(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.AddEmergencyChildrenInside:": {
        "prefix": "components.childspawner:AddEmergencyChildrenInside",
        "body": "components.childspawner:AddEmergencyChildrenInside(${1:count})",
        "description": "参数:(count)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.SpawnEmergencyChild:": {
        "prefix": "components.childspawner:SpawnEmergencyChild",
        "body": "components.childspawner:SpawnEmergencyChild(${1:target},${2:prefab},${3:radius})",
        "description": "参数:(target)<>[],(prefab)<>[],(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.AddChildrenInside:": {
        "prefix": "components.childspawner:AddChildrenInside",
        "body": "components.childspawner:AddChildrenInside(${1:count})",
        "description": "参数:(count)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.IsEmergencyFull:": {
        "prefix": "components.childspawner:IsEmergencyFull",
        "body": "components.childspawner:IsEmergencyFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetRegenPeriod:": {
        "prefix": "components.childspawner:SetRegenPeriod",
        "body": "components.childspawner:SetRegenPeriod(${1:period},${2:variance})",
        "description": "参数:(period)<>[],(variance)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetRareChild:": {
        "prefix": "components.childspawner:SetRareChild",
        "body": "components.childspawner:SetRareChild(${1:childname},${2:chance})",
        "description": "参数:(childname)<>[],(chance)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.LongUpdate:": {
        "prefix": "components.childspawner:LongUpdate",
        "body": "components.childspawner:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetMaxEmergencyChildren:": {
        "prefix": "components.childspawner:SetMaxEmergencyChildren",
        "body": "components.childspawner:SetMaxEmergencyChildren(${1:max})",
        "description": "参数:(max)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.GetTimeToNextSpawn:": {
        "prefix": "components.childspawner:GetTimeToNextSpawn",
        "body": "components.childspawner:GetTimeToNextSpawn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.CanSpawn:": {
        "prefix": "components.childspawner:CanSpawn",
        "body": "components.childspawner:CanSpawn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.IsFull:": {
        "prefix": "components.childspawner:IsFull",
        "body": "components.childspawner:IsFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.CanSpawnOffscreenOrAwake:": {
        "prefix": "components.childspawner:CanSpawnOffscreenOrAwake",
        "body": "components.childspawner:CanSpawnOffscreenOrAwake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetSpawnPeriod:": {
        "prefix": "components.childspawner:SetSpawnPeriod",
        "body": "components.childspawner:SetSpawnPeriod(${1:period},${2:variance})",
        "description": "参数:(period)<>[],(variance)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.TryStopUpdate:": {
        "prefix": "components.childspawner:TryStopUpdate",
        "body": "components.childspawner:TryStopUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.UpdateMaxEmergencyCommit:": {
        "prefix": "components.childspawner:UpdateMaxEmergencyCommit",
        "body": "components.childspawner:UpdateMaxEmergencyCommit()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.DoSpawnChild:": {
        "prefix": "components.childspawner:DoSpawnChild",
        "body": "components.childspawner:DoSpawnChild(${1:target},${2:prefab},${3:radius})",
        "description": "参数:(target)<>[],(prefab)<>[],(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.SpawnChild:": {
        "prefix": "components.childspawner:SpawnChild",
        "body": "components.childspawner:SpawnChild(${1:target},${2:prefab},${3:radius})",
        "description": "参数:(target)<>[],(prefab)<>[],(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.DoQueuedSpawn:": {
        "prefix": "components.childspawner:DoQueuedSpawn",
        "body": "components.childspawner:DoQueuedSpawn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.OnEntityWake:": {
        "prefix": "components.childspawner:OnEntityWake",
        "body": "components.childspawner:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.LoadPostPass:": {
        "prefix": "components.childspawner:LoadPostPass",
        "body": "components.childspawner:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetOccupiedFn:": {
        "prefix": "components.childspawner:SetOccupiedFn",
        "body": "components.childspawner:SetOccupiedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.OnLoad:": {
        "prefix": "components.childspawner:OnLoad",
        "body": "components.childspawner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetVacateFn:": {
        "prefix": "components.childspawner:SetVacateFn",
        "body": "components.childspawner:SetVacateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetGoHomeFn:": {
        "prefix": "components.childspawner:SetGoHomeFn",
        "body": "components.childspawner:SetGoHomeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.OnUpdate:": {
        "prefix": "components.childspawner:OnUpdate",
        "body": "components.childspawner:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.GetDebugString:": {
        "prefix": "components.childspawner:GetDebugString",
        "body": "components.childspawner:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.OnChildKilled:": {
        "prefix": "components.childspawner:OnChildKilled",
        "body": "components.childspawner:OnChildKilled(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetMaxChildren:": {
        "prefix": "components.childspawner:SetMaxChildren",
        "body": "components.childspawner:SetMaxChildren(${1:max})",
        "description": "参数:(max)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.StopRegen:": {
        "prefix": "components.childspawner:StopRegen",
        "body": "components.childspawner:StopRegen()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.NumEmergencyChildren:": {
        "prefix": "components.childspawner:NumEmergencyChildren",
        "body": "components.childspawner:NumEmergencyChildren()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.DoTakeOwnership:": {
        "prefix": "components.childspawner:DoTakeOwnership",
        "body": "components.childspawner:DoTakeOwnership(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.SetEmergencyRadius:": {
        "prefix": "components.childspawner:SetEmergencyRadius",
        "body": "components.childspawner:SetEmergencyRadius(${1:rad})",
        "description": "参数:(rad)<>[] 返回值:无返回值 贡献者:@"
    },
    "childspawner.DoRegen:": {
        "prefix": "components.childspawner:DoRegen",
        "body": "components.childspawner:DoRegen()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "childspawner.GoHome:": {
        "prefix": "components.childspawner:GoHome",
        "body": "components.childspawner:GoHome(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "circler.Start:": {
        "prefix": "components.circler:Start",
        "body": "components.circler:Start()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "circler.GetMinScale:": {
        "prefix": "components.circler:GetMinScale",
        "body": "components.circler:GetMinScale()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "circler.GetDebugString:": {
        "prefix": "components.circler:GetDebugString",
        "body": "components.circler:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "circler.OnUpdate:": {
        "prefix": "components.circler:OnUpdate",
        "body": "components.circler:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "circler.SetCircleTarget:": {
        "prefix": "components.circler:SetCircleTarget",
        "body": "components.circler:SetCircleTarget(${1:tar})",
        "description": "参数:(tar)<>[] 返回值:无返回值 贡献者:@"
    },
    "circler.GetMinSpeed:": {
        "prefix": "components.circler:GetMinSpeed",
        "body": "components.circler:GetMinSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "circler.Stop:": {
        "prefix": "components.circler:Stop",
        "body": "components.circler:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "circler.GetSpeed:": {
        "prefix": "components.circler:GetSpeed",
        "body": "components.circler:GetSpeed(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "circuitnode.Disconnect:": {
        "prefix": "components.circuitnode:Disconnect",
        "body": "components.circuitnode:Disconnect()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "circuitnode.NumConnectedNodes:": {
        "prefix": "components.circuitnode:NumConnectedNodes",
        "body": "components.circuitnode:NumConnectedNodes()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "circuitnode.OnRemoveEntity:": {
        "prefix": "components.circuitnode:OnRemoveEntity",
        "body": "components.circuitnode:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "circuitnode.IsEnabled:": {
        "prefix": "components.circuitnode:IsEnabled",
        "body": "components.circuitnode:IsEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "circuitnode.SetRange:": {
        "prefix": "components.circuitnode:SetRange",
        "body": "components.circuitnode:SetRange(${1:range})",
        "description": "参数:(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "circuitnode.ConnectTo:": {
        "prefix": "components.circuitnode:ConnectTo",
        "body": "components.circuitnode:ConnectTo(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "circuitnode.ForEachNode:": {
        "prefix": "components.circuitnode:ForEachNode",
        "body": "components.circuitnode:ForEachNode(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "circuitnode.RemoveNode:": {
        "prefix": "components.circuitnode:RemoveNode",
        "body": "components.circuitnode:RemoveNode(${1:node})",
        "description": "参数:(node)<>[] 返回值:无返回值 贡献者:@"
    },
    "circuitnode.SetOnDisconnectFn:": {
        "prefix": "components.circuitnode:SetOnDisconnectFn",
        "body": "components.circuitnode:SetOnDisconnectFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "circuitnode.AddNode:": {
        "prefix": "components.circuitnode:AddNode",
        "body": "components.circuitnode:AddNode(${1:node})",
        "description": "参数:(node)<>[] 返回值:无返回值 贡献者:@"
    },
    "circuitnode.SetOnConnectFn:": {
        "prefix": "components.circuitnode:SetOnConnectFn",
        "body": "components.circuitnode:SetOnConnectFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "circuitnode.IsConnected:": {
        "prefix": "components.circuitnode:IsConnected",
        "body": "components.circuitnode:IsConnected()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "circuitnode.SetFootprint:": {
        "prefix": "components.circuitnode:SetFootprint",
        "body": "components.circuitnode:SetFootprint(${1:footprint})",
        "description": "参数:(footprint)<>[] 返回值:无返回值 贡献者:@"
    },
    "closeinspector.SetInspectPointFn:": {
        "prefix": "components.closeinspector:SetInspectPointFn",
        "body": "components.closeinspector:SetInspectPointFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "closeinspector.CloseInspectTarget:": {
        "prefix": "components.closeinspector:CloseInspectTarget",
        "body": "components.closeinspector:CloseInspectTarget(${1:doer},${2:target})",
        "description": "参数:(doer)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "closeinspector.CloseInspectPoint:": {
        "prefix": "components.closeinspector:CloseInspectPoint",
        "body": "components.closeinspector:CloseInspectPoint(${1:doer},${2:pt})",
        "description": "参数:(doer)<>[],(pt)<>[] 返回值:无返回值 贡献者:@"
    },
    "closeinspector.SetInspectTargetFn:": {
        "prefix": "components.closeinspector:SetInspectTargetFn",
        "body": "components.closeinspector:SetInspectTargetFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "closeinspector.OnRemoveFromEntity:": {
        "prefix": "components.closeinspector:OnRemoveFromEntity",
        "body": "components.closeinspector:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "coach.StartInspiring:": {
        "prefix": "components.coach:StartInspiring",
        "body": "components.coach:StartInspiring()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "coach.StopInspiring:": {
        "prefix": "components.coach:StopInspiring",
        "body": "components.coach:StopInspiring()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "coach.Disable:": {
        "prefix": "components.coach:Disable",
        "body": "components.coach:Disable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "coach.Enable:": {
        "prefix": "components.coach:Enable",
        "body": "components.coach:Enable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "colouradder.GetCurrentColour:": {
        "prefix": "components.colouradder:GetCurrentColour",
        "body": "components.colouradder:GetCurrentColour()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "colouradder.DetachChild:": {
        "prefix": "components.colouradder:DetachChild",
        "body": "components.colouradder:DetachChild(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "colouradder.OnRemoveFromEntity:": {
        "prefix": "components.colouradder:OnRemoveFromEntity",
        "body": "components.colouradder:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "colouradder.CalculateCurrentColour:": {
        "prefix": "components.colouradder:CalculateCurrentColour",
        "body": "components.colouradder:CalculateCurrentColour()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "colouradder.AttachChild:": {
        "prefix": "components.colouradder:AttachChild",
        "body": "components.colouradder:AttachChild(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "colouradder.OnSetColour:": {
        "prefix": "components.colouradder:OnSetColour",
        "body": "components.colouradder:OnSetColour(${1:r},${2:g},${3:b},${4:a})",
        "description": "参数:(r)<>[],(g)<>[],(b)<>[],(a)<>[] 返回值:无返回值 贡献者:@"
    },
    "colouradder.GetDebugString:": {
        "prefix": "components.colouradder:GetDebugString",
        "body": "components.colouradder:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "colouradder.PopColour:": {
        "prefix": "components.colouradder:PopColour",
        "body": "components.colouradder:PopColour(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "colouradder.PushColour:": {
        "prefix": "components.colouradder:PushColour",
        "body": "components.colouradder:PushColour(${1:source},${2:r},${3:g},${4:b},${5:a})",
        "description": "参数:(source)<>[],(r)<>[],(g)<>[],(b)<>[],(a)<>[] 返回值:无返回值 贡献者:@"
    },
    "colouraddersync.SetColourChangedFn:": {
        "prefix": "components.colouraddersync:SetColourChangedFn",
        "body": "components.colouraddersync:SetColourChangedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "colouraddersync.SyncColour:": {
        "prefix": "components.colouraddersync:SyncColour",
        "body": "components.colouraddersync:SyncColour(${1:r},${2:g},${3:b},${4:a})",
        "description": "参数:(r)<>[],(g)<>[],(b)<>[],(a)<>[] 返回值:无返回值 贡献者:@"
    },
    "colourtweener.DoUpdate:": {
        "prefix": "components.colourtweener:DoUpdate",
        "body": "components.colourtweener:DoUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "colourtweener.EndTween:": {
        "prefix": "components.colourtweener:EndTween",
        "body": "components.colourtweener:EndTween()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.GetLastAttackedTime:": {
        "prefix": "components.combat:GetLastAttackedTime",
        "body": "components.combat:GetLastAttackedTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.CalcReflectedDamage:": {
        "prefix": "components.combat:CalcReflectedDamage",
        "body": "components.combat:CalcReflectedDamage(${1:targ},${2:dmg},${3:weapon},${4:stimuli},${5:reflect_list},${6:spdmg})",
        "description": "参数:(targ)<>[],(dmg)<>[],(weapon)<>[],(stimuli)<>[],(reflect_list)<>[],(spdmg)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.BattleCry:": {
        "prefix": "components.combat:BattleCry",
        "body": "components.combat:BattleCry()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.TryAttack:": {
        "prefix": "components.combat:TryAttack",
        "body": "components.combat:TryAttack(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.StopTrackingTarget:": {
        "prefix": "components.combat:StopTrackingTarget",
        "body": "components.combat:StopTrackingTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.EngageTarget:": {
        "prefix": "components.combat:EngageTarget",
        "body": "components.combat:EngageTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.TargetHasFriendlyLeader:": {
        "prefix": "components.combat:TargetHasFriendlyLeader",
        "body": "components.combat:TargetHasFriendlyLeader(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.EnableAreaDamage:": {
        "prefix": "components.combat:EnableAreaDamage",
        "body": "components.combat:EnableAreaDamage(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.GetWeapon:": {
        "prefix": "components.combat:GetWeapon",
        "body": "components.combat:GetWeapon()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.CanTarget:": {
        "prefix": "components.combat:CanTarget",
        "body": "components.combat:CanTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.GetImpactSound:": {
        "prefix": "components.combat:GetImpactSound",
        "body": "components.combat:GetImpactSound(${1:target},${2:weapon})",
        "description": "参数:(target)<>[],(weapon)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.SetHurtSound:": {
        "prefix": "components.combat:SetHurtSound",
        "body": "components.combat:SetHurtSound(${1:sound})",
        "description": "参数:(sound)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.ForceAttack:": {
        "prefix": "components.combat:ForceAttack",
        "body": "components.combat:ForceAttack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.TryRetarget:": {
        "prefix": "components.combat:TryRetarget",
        "body": "components.combat:TryRetarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.OnEntitySleep:": {
        "prefix": "components.combat:OnEntitySleep",
        "body": "components.combat:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.SetKeepTargetFunction:": {
        "prefix": "components.combat:SetKeepTargetFunction",
        "body": "components.combat:SetKeepTargetFunction(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.TargetIs:": {
        "prefix": "components.combat:TargetIs",
        "body": "components.combat:TargetIs(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.SuggestTarget:": {
        "prefix": "components.combat:SuggestTarget",
        "body": "components.combat:SuggestTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.SetLastTarget:": {
        "prefix": "components.combat:SetLastTarget",
        "body": "components.combat:SetLastTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.ValidateTarget:": {
        "prefix": "components.combat:ValidateTarget",
        "body": "components.combat:ValidateTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.GetDebugString:": {
        "prefix": "components.combat:GetDebugString",
        "body": "components.combat:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.SetRange:": {
        "prefix": "components.combat:SetRange",
        "body": "components.combat:SetRange(${1:attack},${2:hit})",
        "description": "参数:(attack)<>[],(hit)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.CalcAttackRangeSq:": {
        "prefix": "components.combat:CalcAttackRangeSq",
        "body": "components.combat:CalcAttackRangeSq(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.LocomotorCanAttack:": {
        "prefix": "components.combat:LocomotorCanAttack",
        "body": "components.combat:LocomotorCanAttack(${1:reached_dest},${2:target})",
        "description": "参数:(reached_dest)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.ShareTarget:": {
        "prefix": "components.combat:ShareTarget",
        "body": "components.combat:ShareTarget(${1:target},${2:range},${3:fn},${4:maxnum},${5:musttags})",
        "description": "参数:(target)<>[],(range)<>[],(fn)<>[],(maxnum)<>[],(musttags)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.StartTrackingTarget:": {
        "prefix": "components.combat:StartTrackingTarget",
        "body": "components.combat:StartTrackingTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.OnUpdate:": {
        "prefix": "components.combat:OnUpdate",
        "body": "components.combat:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.ResetCooldown:": {
        "prefix": "components.combat:ResetCooldown",
        "body": "components.combat:ResetCooldown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.RemoveShouldAvoidAggro:": {
        "prefix": "components.combat:RemoveShouldAvoidAggro",
        "body": "components.combat:RemoveShouldAvoidAggro(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.GetHitRange:": {
        "prefix": "components.combat:GetHitRange",
        "body": "components.combat:GetHitRange()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.RemoveNoAggroTag:": {
        "prefix": "components.combat:RemoveNoAggroTag",
        "body": "components.combat:RemoveNoAggroTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.SetAttackPeriod:": {
        "prefix": "components.combat:SetAttackPeriod",
        "body": "components.combat:SetAttackPeriod(${1:period})",
        "description": "参数:(period)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.GetBattleCryString:": {
        "prefix": "components.combat:GetBattleCryString",
        "body": "components.combat:GetBattleCryString(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.SetShouldAvoidAggro:": {
        "prefix": "components.combat:SetShouldAvoidAggro",
        "body": "components.combat:SetShouldAvoidAggro(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.HasTarget:": {
        "prefix": "components.combat:HasTarget",
        "body": "components.combat:HasTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.CancelAttack:": {
        "prefix": "components.combat:CancelAttack",
        "body": "components.combat:CancelAttack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.CanHitTarget:": {
        "prefix": "components.combat:CanHitTarget",
        "body": "components.combat:CanHitTarget(${1:target},${2:weapon})",
        "description": "参数:(target)<>[],(weapon)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.DropTarget:": {
        "prefix": "components.combat:DropTarget",
        "body": "components.combat:DropTarget(${1:hasnexttarget})",
        "description": "参数:(hasnexttarget)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.OverrideCooldown:": {
        "prefix": "components.combat:OverrideCooldown",
        "body": "components.combat:OverrideCooldown(${1:cd})",
        "description": "参数:(cd)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.InCooldown:": {
        "prefix": "components.combat:InCooldown",
        "body": "components.combat:InCooldown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.SetShouldAggroFn:": {
        "prefix": "components.combat:SetShouldAggroFn",
        "body": "components.combat:SetShouldAggroFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.CanExtinguishTarget:": {
        "prefix": "components.combat:CanExtinguishTarget",
        "body": "components.combat:CanExtinguishTarget(${1:target},${2:weapon})",
        "description": "参数:(target)<>[],(weapon)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.OnRemoveFromEntity:": {
        "prefix": "components.combat:OnRemoveFromEntity",
        "body": "components.combat:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.RestartCooldown:": {
        "prefix": "components.combat:RestartCooldown",
        "body": "components.combat:RestartCooldown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.ShouldAggro:": {
        "prefix": "components.combat:ShouldAggro",
        "body": "components.combat:ShouldAggro(${1:target},${2:ignore_forbidden})",
        "description": "参数:(target)<>[],(ignore_forbidden)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.IsAlly:": {
        "prefix": "components.combat:IsAlly",
        "body": "components.combat:IsAlly(${1:guy})",
        "description": "参数:(guy)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.DoAreaAttack:": {
        "prefix": "components.combat:DoAreaAttack",
        "body": "components.combat:DoAreaAttack(${1:target},${2:range},${3:weapon},${4:validfn},${5:stimuli},${6:excludetags})",
        "description": "参数:(target)<>[],(range)<>[],(weapon)<>[],(validfn)<>[],(stimuli)<>[],(excludetags)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.SetOnHit:": {
        "prefix": "components.combat:SetOnHit",
        "body": "components.combat:SetOnHit(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.GetDamageReflect:": {
        "prefix": "components.combat:GetDamageReflect",
        "body": "components.combat:GetDamageReflect(${1:target},${2:damage},${3:weapon},${4:stimuli})",
        "description": "参数:(target)<>[],(damage)<>[],(weapon)<>[],(stimuli)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.DoAttack:": {
        "prefix": "components.combat:DoAttack",
        "body": "components.combat:DoAttack(${1:targ},${2:weapon},${3:projectile},${4:stimuli},${5:instancemult},${6:instrangeoverride},${7:instpos})",
        "description": "参数:(targ)<>[],(weapon)<>[],(projectile)<>[],(stimuli)<>[],(instancemult)<>[],(instrangeoverride)<>[],(instpos)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.CanLightTarget:": {
        "prefix": "components.combat:CanLightTarget",
        "body": "components.combat:CanLightTarget(${1:target},${2:weapon})",
        "description": "参数:(target)<>[],(weapon)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.CalcDamage:": {
        "prefix": "components.combat:CalcDamage",
        "body": "components.combat:CalcDamage(${1:target},${2:weapon},${3:multiplier})",
        "description": "参数:(target)<>[],(weapon)<>[],(multiplier)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.ClearAttackTemps:": {
        "prefix": "components.combat:ClearAttackTemps",
        "body": "components.combat:ClearAttackTemps()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.CalcHitRangeSq:": {
        "prefix": "components.combat:CalcHitRangeSq",
        "body": "components.combat:CalcHitRangeSq(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.GetAttackRange:": {
        "prefix": "components.combat:GetAttackRange",
        "body": "components.combat:GetAttackRange()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.CanAttack:": {
        "prefix": "components.combat:CanAttack",
        "body": "components.combat:CanAttack(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.AddNoAggroTag:": {
        "prefix": "components.combat:AddNoAggroTag",
        "body": "components.combat:AddNoAggroTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.StartAttack:": {
        "prefix": "components.combat:StartAttack",
        "body": "components.combat:StartAttack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.ResetBattleCryCooldown:": {
        "prefix": "components.combat:ResetBattleCryCooldown",
        "body": "components.combat:ResetBattleCryCooldown(${1:t})",
        "description": "参数:(t)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.GetAttacked:": {
        "prefix": "components.combat:GetAttacked",
        "body": "components.combat:GetAttacked(${1:attacker},${2:damage},${3:weapon},${4:stimuli},${5:spdamage})",
        "description": "参数:(attacker)<>[],(damage)<>[],(weapon)<>[],(stimuli)<>[],(spdamage)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.GiveUp:": {
        "prefix": "components.combat:GiveUp",
        "body": "components.combat:GiveUp()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.SetDefaultDamage:": {
        "prefix": "components.combat:SetDefaultDamage",
        "body": "components.combat:SetDefaultDamage(${1:damage})",
        "description": "参数:(damage)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.GetGiveUpString:": {
        "prefix": "components.combat:GetGiveUpString",
        "body": "components.combat:GetGiveUpString(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.IsValidTarget:": {
        "prefix": "components.combat:IsValidTarget",
        "body": "components.combat:IsValidTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.SetPlayerStunlock:": {
        "prefix": "components.combat:SetPlayerStunlock",
        "body": "components.combat:SetPlayerStunlock(${1:stunlock})",
        "description": "参数:(stunlock)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.SetTarget:": {
        "prefix": "components.combat:SetTarget",
        "body": "components.combat:SetTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.GetCooldown:": {
        "prefix": "components.combat:GetCooldown",
        "body": "components.combat:GetCooldown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.SetNoAggroTags:": {
        "prefix": "components.combat:SetNoAggroTags",
        "body": "components.combat:SetNoAggroTags(${1:tags})",
        "description": "参数:(tags)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.CanBeAttacked:": {
        "prefix": "components.combat:CanBeAttacked",
        "body": "components.combat:CanBeAttacked(${1:attacker})",
        "description": "参数:(attacker)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.IsRecentTarget:": {
        "prefix": "components.combat:IsRecentTarget",
        "body": "components.combat:IsRecentTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.OnEntityWake:": {
        "prefix": "components.combat:OnEntityWake",
        "body": "components.combat:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "combat.SetRetargetFunction:": {
        "prefix": "components.combat:SetRetargetFunction",
        "body": "components.combat:SetRetargetFunction(${1:period},${2:fn})",
        "description": "参数:(period)<>[],(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "combat.SetAreaDamage:": {
        "prefix": "components.combat:SetAreaDamage",
        "body": "components.combat:SetAreaDamage(${1:range},${2:percent},${3:areahitcheck})",
        "description": "参数:(range)<>[],(percent)<>[],(areahitcheck)<>[] 返回值:无返回值 贡献者:@"
    },
    "commander.StopTrackingDistance:": {
        "prefix": "components.commander:StopTrackingDistance",
        "body": "components.commander:StopTrackingDistance()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "commander.PushEventToAllSoldiers:": {
        "prefix": "components.commander:PushEventToAllSoldiers",
        "body": "components.commander:PushEventToAllSoldiers(${1:ev},${2:data})",
        "description": "参数:(ev)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "commander.ShareTargetToAllSoldiers:": {
        "prefix": "components.commander:ShareTargetToAllSoldiers",
        "body": "components.commander:ShareTargetToAllSoldiers(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "commander.GetDebugString:": {
        "prefix": "components.commander:GetDebugString",
        "body": "components.commander:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "commander.AlertAllSoldiers:": {
        "prefix": "components.commander:AlertAllSoldiers",
        "body": "components.commander:AlertAllSoldiers()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "commander.OnRemoveFromEntity:": {
        "prefix": "components.commander:OnRemoveFromEntity",
        "body": "components.commander:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "commander.StartTrackingDistance:": {
        "prefix": "components.commander:StartTrackingDistance",
        "body": "components.commander:StartTrackingDistance()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "commander.AddSoldier:": {
        "prefix": "components.commander:AddSoldier",
        "body": "components.commander:AddSoldier(${1:ent})",
        "description": "参数:(ent)<>[] 返回值:无返回值 贡献者:@"
    },
    "commander.SetTrackingDistance:": {
        "prefix": "components.commander:SetTrackingDistance",
        "body": "components.commander:SetTrackingDistance(${1:dist})",
        "description": "参数:(dist)<>[] 返回值:无返回值 贡献者:@"
    },
    "commander.GetAllSoldiers:": {
        "prefix": "components.commander:GetAllSoldiers",
        "body": "components.commander:GetAllSoldiers(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "commander.IsSoldier:": {
        "prefix": "components.commander:IsSoldier",
        "body": "components.commander:IsSoldier(${1:ent})",
        "description": "参数:(ent)<>[] 返回值:无返回值 贡献者:@"
    },
    "commander.IsAnySoldierNotAlert:": {
        "prefix": "components.commander:IsAnySoldierNotAlert",
        "body": "components.commander:IsAnySoldierNotAlert()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "commander.DropAllSoldierTargets:": {
        "prefix": "components.commander:DropAllSoldierTargets",
        "body": "components.commander:DropAllSoldierTargets()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "commander.RemoveSoldier:": {
        "prefix": "components.commander:RemoveSoldier",
        "body": "components.commander:RemoveSoldier(${1:ent})",
        "description": "参数:(ent)<>[] 返回值:无返回值 贡献者:@"
    },
    "commander.GetNumSoldiers:": {
        "prefix": "components.commander:GetNumSoldiers",
        "body": "components.commander:GetNumSoldiers(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.OnUpdate:": {
        "prefix": "components.complexprojectile:OnUpdate",
        "body": "components.complexprojectile:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.Hit:": {
        "prefix": "components.complexprojectile:Hit",
        "body": "components.complexprojectile:Hit(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.SetGravity:": {
        "prefix": "components.complexprojectile:SetGravity",
        "body": "components.complexprojectile:SetGravity(${1:g})",
        "description": "参数:(g)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.Cancel:": {
        "prefix": "components.complexprojectile:Cancel",
        "body": "components.complexprojectile:Cancel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.GetDebugString:": {
        "prefix": "components.complexprojectile:GetDebugString",
        "body": "components.complexprojectile:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.SetHorizontalSpeedForDistance:": {
        "prefix": "components.complexprojectile:SetHorizontalSpeedForDistance",
        "body": "components.complexprojectile:SetHorizontalSpeedForDistance(${1:desired_horizontal_distance},${2:fallback})",
        "description": "参数:(desired_horizontal_distance)<>[],(fallback)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.OnRemoveFromEntity:": {
        "prefix": "components.complexprojectile:OnRemoveFromEntity",
        "body": "components.complexprojectile:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.Launch:": {
        "prefix": "components.complexprojectile:Launch",
        "body": "components.complexprojectile:Launch(${1:targetPos},${2:attacker},${3:owningweapon})",
        "description": "参数:(targetPos)<>[],(attacker)<>[],(owningweapon)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.CalculateTrajectory:": {
        "prefix": "components.complexprojectile:CalculateTrajectory",
        "body": "components.complexprojectile:CalculateTrajectory(${1:startPos},${2:endPos},${3:speed})",
        "description": "参数:(startPos)<>[],(endPos)<>[],(speed)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.CalculateMinimumSpeedForDistance:": {
        "prefix": "components.complexprojectile:CalculateMinimumSpeedForDistance",
        "body": "components.complexprojectile:CalculateMinimumSpeedForDistance(${1:desired_horizontal_distance})",
        "description": "参数:(desired_horizontal_distance)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.SetOnHit:": {
        "prefix": "components.complexprojectile:SetOnHit",
        "body": "components.complexprojectile:SetOnHit(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.SetHorizontalSpeed:": {
        "prefix": "components.complexprojectile:SetHorizontalSpeed",
        "body": "components.complexprojectile:SetHorizontalSpeed(${1:speed})",
        "description": "参数:(speed)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.SetOnUpdate:": {
        "prefix": "components.complexprojectile:SetOnUpdate",
        "body": "components.complexprojectile:SetOnUpdate(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.SetOnLaunch:": {
        "prefix": "components.complexprojectile:SetOnLaunch",
        "body": "components.complexprojectile:SetOnLaunch(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.SetLaunchOffset:": {
        "prefix": "components.complexprojectile:SetLaunchOffset",
        "body": "components.complexprojectile:SetLaunchOffset(${1:offset})",
        "description": "参数:(offset)<>[] 返回值:无返回值 贡献者:@"
    },
    "complexprojectile.SetTargetOffset:": {
        "prefix": "components.complexprojectile:SetTargetOffset",
        "body": "components.complexprojectile:SetTargetOffset(${1:offset})",
        "description": "参数:(offset)<>[] 返回值:无返回值 贡献者:@"
    },
    "compostingbin.IsComposting:": {
        "prefix": "components.compostingbin:IsComposting",
        "body": "components.compostingbin:IsComposting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "compostingbin.OnLoad:": {
        "prefix": "components.compostingbin:OnLoad",
        "body": "components.compostingbin:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "compostingbin.OnRemoveFromEntity:": {
        "prefix": "components.compostingbin:OnRemoveFromEntity",
        "body": "components.compostingbin:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "compostingbin.AddCompostable:": {
        "prefix": "components.compostingbin:AddCompostable",
        "body": "components.compostingbin:AddCompostable(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "compostingbin.IsFull:": {
        "prefix": "components.compostingbin:IsFull",
        "body": "components.compostingbin:IsFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "compostingbin.OnSave:": {
        "prefix": "components.compostingbin:OnSave",
        "body": "components.compostingbin:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "compostingbin.AddMaterials:": {
        "prefix": "components.compostingbin:AddMaterials",
        "body": "components.compostingbin:AddMaterials(${1:greens},${2:browns})",
        "description": "参数:(greens)<>[],(browns)<>[] 返回值:无返回值 贡献者:@"
    },
    "compostingbin.Refresh:": {
        "prefix": "components.compostingbin:Refresh",
        "body": "components.compostingbin:Refresh(${1:cycle_completed})",
        "description": "参数:(cycle_completed)<>[] 返回值:无返回值 贡献者:@"
    },
    "compostingbin.GetMaterialTotal:": {
        "prefix": "components.compostingbin:GetMaterialTotal",
        "body": "components.compostingbin:GetMaterialTotal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionbuilder.CanStartConstruction:": {
        "prefix": "components.constructionbuilder:CanStartConstruction",
        "body": "components.constructionbuilder:CanStartConstruction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionbuilder.IsConstructing:": {
        "prefix": "components.constructionbuilder:IsConstructing",
        "body": "components.constructionbuilder:IsConstructing(${1:constructioninst})",
        "description": "参数:(constructioninst)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionbuilder.OnLoad:": {
        "prefix": "components.constructionbuilder:OnLoad",
        "body": "components.constructionbuilder:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionbuilder.OnFinishConstruction:": {
        "prefix": "components.constructionbuilder:OnFinishConstruction",
        "body": "components.constructionbuilder:OnFinishConstruction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionbuilder.IsConstructingAny:": {
        "prefix": "components.constructionbuilder:IsConstructingAny",
        "body": "components.constructionbuilder:IsConstructingAny()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionbuilder.StartConstruction:": {
        "prefix": "components.constructionbuilder:StartConstruction",
        "body": "components.constructionbuilder:StartConstruction(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionbuilder.OnSave:": {
        "prefix": "components.constructionbuilder:OnSave",
        "body": "components.constructionbuilder:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionbuilder.FinishConstruction:": {
        "prefix": "components.constructionbuilder:FinishConstruction",
        "body": "components.constructionbuilder:FinishConstruction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionbuilder.StopConstruction:": {
        "prefix": "components.constructionbuilder:StopConstruction",
        "body": "components.constructionbuilder:StopConstruction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionbuilderuidata.SetContainer:": {
        "prefix": "components.constructionbuilderuidata:SetContainer",
        "body": "components.constructionbuilderuidata:SetContainer(${1:containerinst})",
        "description": "参数:(containerinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionbuilderuidata.SetTarget:": {
        "prefix": "components.constructionbuilderuidata:SetTarget",
        "body": "components.constructionbuilderuidata:SetTarget(${1:targetinst})",
        "description": "参数:(targetinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionbuilderuidata.GetSlotForIngredient:": {
        "prefix": "components.constructionbuilderuidata:GetSlotForIngredient",
        "body": "components.constructionbuilderuidata:GetSlotForIngredient(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionbuilderuidata.GetIngredientForSlot:": {
        "prefix": "components.constructionbuilderuidata:GetIngredientForSlot",
        "body": "components.constructionbuilderuidata:GetIngredientForSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionbuilderuidata.GetContainer:": {
        "prefix": "components.constructionbuilderuidata:GetContainer",
        "body": "components.constructionbuilderuidata:GetContainer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionbuilderuidata.GetTarget:": {
        "prefix": "components.constructionbuilderuidata:GetTarget",
        "body": "components.constructionbuilderuidata:GetTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionbuilderuidata.GetConstructionSite:": {
        "prefix": "components.constructionbuilderuidata:GetConstructionSite",
        "body": "components.constructionbuilderuidata:GetConstructionSite()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionplans.AddTargetPrefab:": {
        "prefix": "components.constructionplans:AddTargetPrefab",
        "body": "components.constructionplans:AddTargetPrefab(${1:prefab},${2:constructionprefab})",
        "description": "参数:(prefab)<>[],(constructionprefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionplans.StartConstruction:": {
        "prefix": "components.constructionplans:StartConstruction",
        "body": "components.constructionplans:StartConstruction(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionplans.OnRemoveFromEntity:": {
        "prefix": "components.constructionplans:OnRemoveFromEntity",
        "body": "components.constructionplans:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionplans.RemoveTargetPrefab:": {
        "prefix": "components.constructionplans:RemoveTargetPrefab",
        "body": "components.constructionplans:RemoveTargetPrefab(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.HasBuilder:": {
        "prefix": "components.constructionsite:HasBuilder",
        "body": "components.constructionsite:HasBuilder()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionsite.Disable:": {
        "prefix": "components.constructionsite:Disable",
        "body": "components.constructionsite:Disable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionsite.GetMaterialCount:": {
        "prefix": "components.constructionsite:GetMaterialCount",
        "body": "components.constructionsite:GetMaterialCount(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.SetConstructionPrefab:": {
        "prefix": "components.constructionsite:SetConstructionPrefab",
        "body": "components.constructionsite:SetConstructionPrefab(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.OnStartConstruction:": {
        "prefix": "components.constructionsite:OnStartConstruction",
        "body": "components.constructionsite:OnStartConstruction(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.SetOnConstructedFn:": {
        "prefix": "components.constructionsite:SetOnConstructedFn",
        "body": "components.constructionsite:SetOnConstructedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.Enable:": {
        "prefix": "components.constructionsite:Enable",
        "body": "components.constructionsite:Enable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionsite.DropAllMaterials:": {
        "prefix": "components.constructionsite:DropAllMaterials",
        "body": "components.constructionsite:DropAllMaterials(${1:drop_pos})",
        "description": "参数:(drop_pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.GetDebugString:": {
        "prefix": "components.constructionsite:GetDebugString",
        "body": "components.constructionsite:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionsite.RemoveMaterial:": {
        "prefix": "components.constructionsite:RemoveMaterial",
        "body": "components.constructionsite:RemoveMaterial(${1:prefab},${2:num})",
        "description": "参数:(prefab)<>[],(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.IsEnabled:": {
        "prefix": "components.constructionsite:IsEnabled",
        "body": "components.constructionsite:IsEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionsite.OnLoad:": {
        "prefix": "components.constructionsite:OnLoad",
        "body": "components.constructionsite:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.OnSave:": {
        "prefix": "components.constructionsite:OnSave",
        "body": "components.constructionsite:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionsite.IsComplete:": {
        "prefix": "components.constructionsite:IsComplete",
        "body": "components.constructionsite:IsComplete()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionsite.OnConstruct:": {
        "prefix": "components.constructionsite:OnConstruct",
        "body": "components.constructionsite:OnConstruct(${1:doer},${2:items})",
        "description": "参数:(doer)<>[],(items)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.SetOnStartConstructionFn:": {
        "prefix": "components.constructionsite:SetOnStartConstructionFn",
        "body": "components.constructionsite:SetOnStartConstructionFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.AddMaterial:": {
        "prefix": "components.constructionsite:AddMaterial",
        "body": "components.constructionsite:AddMaterial(${1:prefab},${2:num})",
        "description": "参数:(prefab)<>[],(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.IsBuilder:": {
        "prefix": "components.constructionsite:IsBuilder",
        "body": "components.constructionsite:IsBuilder(${1:guy})",
        "description": "参数:(guy)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.OnStopConstruction:": {
        "prefix": "components.constructionsite:OnStopConstruction",
        "body": "components.constructionsite:OnStopConstruction(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.SetOnStopConstructionFn:": {
        "prefix": "components.constructionsite:SetOnStopConstructionFn",
        "body": "components.constructionsite:SetOnStopConstructionFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "constructionsite.ForceStopConstruction:": {
        "prefix": "components.constructionsite:ForceStopConstruction",
        "body": "components.constructionsite:ForceStopConstruction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "constructionsite.GetSlotCount:": {
        "prefix": "components.constructionsite:GetSlotCount",
        "body": "components.constructionsite:GetSlotCount(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.GetItemSlot:": {
        "prefix": "components.container:GetItemSlot",
        "body": "components.container:GetItemSlot(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.ShouldPrioritizeContainer:": {
        "prefix": "components.container:ShouldPrioritizeContainer",
        "body": "components.container:ShouldPrioritizeContainer(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.OnSave:": {
        "prefix": "components.container:OnSave",
        "body": "components.container:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.RemoveItemBySlot:": {
        "prefix": "components.container:RemoveItemBySlot",
        "body": "components.container:RemoveItemBySlot(${1:slot},${2:keepoverstacked})",
        "description": "参数:(slot)<>[],(keepoverstacked)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.DropOverstackedExcess:": {
        "prefix": "components.container:DropOverstackedExcess",
        "body": "components.container:DropOverstackedExcess(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.DropItemAt:": {
        "prefix": "components.container:DropItemAt",
        "body": "components.container:DropItemAt(${1:itemtodrop},${2:x},${3:y},${4:z})",
        "description": "参数:(itemtodrop)<>[],(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.GetOpeners:": {
        "prefix": "components.container:GetOpeners",
        "body": "components.container:GetOpeners()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.HasItemWithTag:": {
        "prefix": "components.container:HasItemWithTag",
        "body": "components.container:HasItemWithTag(${1:tag},${2:amount})",
        "description": "参数:(tag)<>[],(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.GetAllItems:": {
        "prefix": "components.container:GetAllItems",
        "body": "components.container:GetAllItems()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.Close:": {
        "prefix": "components.container:Close",
        "body": "components.container:Close(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.IsSideWidget:": {
        "prefix": "components.container:IsSideWidget",
        "body": "components.container:IsSideWidget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.MoveItemFromHalfOfSlot:": {
        "prefix": "components.container:MoveItemFromHalfOfSlot",
        "body": "components.container:MoveItemFromHalfOfSlot(${1:slot},${2:container},${3:opener})",
        "description": "参数:(slot)<>[],(container)<>[],(opener)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.GiveItem:": {
        "prefix": "components.container:GiveItem",
        "body": "components.container:GiveItem(${1:item},${2:slot},${3:src_pos},${4:drop_on_fail})",
        "description": "参数:(item)<>[],(slot)<>[],(src_pos)<>[],(drop_on_fail)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.Open:": {
        "prefix": "components.container:Open",
        "body": "components.container:Open(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.AcceptsStacks:": {
        "prefix": "components.container:AcceptsStacks",
        "body": "components.container:AcceptsStacks()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.IsEmpty:": {
        "prefix": "components.container:IsEmpty",
        "body": "components.container:IsEmpty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.GetNumSlots:": {
        "prefix": "components.container:GetNumSlots",
        "body": "components.container:GetNumSlots()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.SwapOneOfActiveItemWithSlot:": {
        "prefix": "components.container:SwapOneOfActiveItemWithSlot",
        "body": "components.container:SwapOneOfActiveItemWithSlot(${1:slot},${2:opener})",
        "description": "参数:(slot)<>[],(opener)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.GetItemInSlot:": {
        "prefix": "components.container:GetItemInSlot",
        "body": "components.container:GetItemInSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.MoveItemFromAllOfSlot:": {
        "prefix": "components.container:MoveItemFromAllOfSlot",
        "body": "components.container:MoveItemFromAllOfSlot(${1:slot},${2:container},${3:opener})",
        "description": "参数:(slot)<>[],(container)<>[],(opener)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.FindItem:": {
        "prefix": "components.container:FindItem",
        "body": "components.container:FindItem(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.ForEachItem:": {
        "prefix": "components.container:ForEachItem",
        "body": "components.container:ForEachItem(${1:fn},${2:...})",
        "description": "参数:(fn)<>[],(...)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.GetWidget:": {
        "prefix": "components.container:GetWidget",
        "body": "components.container:GetWidget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.SwapActiveItemWithSlot:": {
        "prefix": "components.container:SwapActiveItemWithSlot",
        "body": "components.container:SwapActiveItemWithSlot(${1:slot},${2:opener})",
        "description": "参数:(slot)<>[],(opener)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.DropEverythingUpToMaxStacks:": {
        "prefix": "components.container:DropEverythingUpToMaxStacks",
        "body": "components.container:DropEverythingUpToMaxStacks(${1:maxstacks},${2:drop_pos})",
        "description": "参数:(maxstacks)<>[],(drop_pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.HasItemThatMatches:": {
        "prefix": "components.container:HasItemThatMatches",
        "body": "components.container:HasItemThatMatches(${1:fn},${2:amount})",
        "description": "参数:(fn)<>[],(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.IsOpen:": {
        "prefix": "components.container:IsOpen",
        "body": "components.container:IsOpen()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.DropEverythingWithTag:": {
        "prefix": "components.container:DropEverythingWithTag",
        "body": "components.container:DropEverythingWithTag(${1:tag},${2:drop_pos},${3:keepoverstacked})",
        "description": "参数:(tag)<>[],(drop_pos)<>[],(keepoverstacked)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.SetNumSlots:": {
        "prefix": "components.container:SetNumSlots",
        "body": "components.container:SetNumSlots(${1:numslots})",
        "description": "参数:(numslots)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.DropItemBySlot:": {
        "prefix": "components.container:DropItemBySlot",
        "body": "components.container:DropItemBySlot(${1:slot},${2:drop_pos},${3:keepoverstacked})",
        "description": "参数:(slot)<>[],(drop_pos)<>[],(keepoverstacked)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.DestroyContentsConditionally:": {
        "prefix": "components.container:DestroyContentsConditionally",
        "body": "components.container:DestroyContentsConditionally(${1:filterfn},${2:onpredestroyitemcallbackfn})",
        "description": "参数:(filterfn)<>[],(onpredestroyitemcallbackfn)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.FindItems:": {
        "prefix": "components.container:FindItems",
        "body": "components.container:FindItems(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.GetSpecificSlotForItem:": {
        "prefix": "components.container:GetSpecificSlotForItem",
        "body": "components.container:GetSpecificSlotForItem(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.PutAllOfActiveItemInSlot:": {
        "prefix": "components.container:PutAllOfActiveItemInSlot",
        "body": "components.container:PutAllOfActiveItemInSlot(${1:slot},${2:opener})",
        "description": "参数:(slot)<>[],(opener)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.DestroyContents:": {
        "prefix": "components.container:DestroyContents",
        "body": "components.container:DestroyContents(${1:onpredestroyitemcallbackfn})",
        "description": "参数:(onpredestroyitemcallbackfn)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.TakeActiveItemFromAllOfSlot:": {
        "prefix": "components.container:TakeActiveItemFromAllOfSlot",
        "body": "components.container:TakeActiveItemFromAllOfSlot(${1:slot},${2:opener})",
        "description": "参数:(slot)<>[],(opener)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.DropItem:": {
        "prefix": "components.container:DropItem",
        "body": "components.container:DropItem(${1:itemtodrop})",
        "description": "参数:(itemtodrop)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.AddOneOfActiveItemToSlot:": {
        "prefix": "components.container:AddOneOfActiveItemToSlot",
        "body": "components.container:AddOneOfActiveItemToSlot(${1:slot},${2:opener})",
        "description": "参数:(slot)<>[],(opener)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.IsFull:": {
        "prefix": "components.container:IsFull",
        "body": "components.container:IsFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.AddAllOfActiveItemToSlot:": {
        "prefix": "components.container:AddAllOfActiveItemToSlot",
        "body": "components.container:AddAllOfActiveItemToSlot(${1:slot},${2:opener})",
        "description": "参数:(slot)<>[],(opener)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.PutOneOfActiveItemInSlot:": {
        "prefix": "components.container:PutOneOfActiveItemInSlot",
        "body": "components.container:PutOneOfActiveItemInSlot(${1:slot},${2:opener})",
        "description": "参数:(slot)<>[],(opener)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.OnUpdate:": {
        "prefix": "components.container:OnUpdate",
        "body": "components.container:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.RemoveItem_Internal:": {
        "prefix": "components.container:RemoveItem_Internal",
        "body": "components.container:RemoveItem_Internal(${1:item},${2:slot},${3:wholestack},${4:keepoverstacked})",
        "description": "参数:(item)<>[],(slot)<>[],(wholestack)<>[],(keepoverstacked)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.RemoveItem:": {
        "prefix": "components.container:RemoveItem",
        "body": "components.container:RemoveItem(${1:item},${2:wholestack},${3:_checkallcontainers_},${4:keepoverstacked})",
        "description": "参数:(item)<>[],(wholestack)<>[],(_checkallcontainers_)<>[],(keepoverstacked)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.EnableInfiniteStackSize:": {
        "prefix": "components.container:EnableInfiniteStackSize",
        "body": "components.container:EnableInfiniteStackSize(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.CanAcceptCount:": {
        "prefix": "components.container:CanAcceptCount",
        "body": "components.container:CanAcceptCount(${1:item},${2:maxcount})",
        "description": "参数:(item)<>[],(maxcount)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.ConsumeByName:": {
        "prefix": "components.container:ConsumeByName",
        "body": "components.container:ConsumeByName(${1:item},${2:amount})",
        "description": "参数:(item)<>[],(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.GetItemByName:": {
        "prefix": "components.container:GetItemByName",
        "body": "components.container:GetItemByName(${1:item},${2:amount})",
        "description": "参数:(item)<>[],(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.GetItemsWithTag:": {
        "prefix": "components.container:GetItemsWithTag",
        "body": "components.container:GetItemsWithTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.OnLoad:": {
        "prefix": "components.container:OnLoad",
        "body": "components.container:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.WidgetSetup:": {
        "prefix": "components.container:WidgetSetup",
        "body": "components.container:WidgetSetup(${1:prefab},${2:data})",
        "description": "参数:(prefab)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.Has:": {
        "prefix": "components.container:Has",
        "body": "components.container:Has(${1:item},${2:amount},${3:iscrafting})",
        "description": "参数:(item)<>[],(amount)<>[],(iscrafting)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.IsHolding:": {
        "prefix": "components.container:IsHolding",
        "body": "components.container:IsHolding(${1:item},${2:checkcontainer})",
        "description": "参数:(item)<>[],(checkcontainer)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.CanOpen:": {
        "prefix": "components.container:CanOpen",
        "body": "components.container:CanOpen()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.DropEverything:": {
        "prefix": "components.container:DropEverything",
        "body": "components.container:DropEverything(${1:drop_pos},${2:keepoverstacked})",
        "description": "参数:(drop_pos)<>[],(keepoverstacked)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.IsOpenedByOthers:": {
        "prefix": "components.container:IsOpenedByOthers",
        "body": "components.container:IsOpenedByOthers(${1:guy})",
        "description": "参数:(guy)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.IsOpenedBy:": {
        "prefix": "components.container:IsOpenedBy",
        "body": "components.container:IsOpenedBy(${1:guy})",
        "description": "参数:(guy)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.RemoveAllItems:": {
        "prefix": "components.container:RemoveAllItems",
        "body": "components.container:RemoveAllItems()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.CanTakeItemInSlot:": {
        "prefix": "components.container:CanTakeItemInSlot",
        "body": "components.container:CanTakeItemInSlot(${1:item},${2:slot})",
        "description": "参数:(item)<>[],(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "container.ReferenceAllItems:": {
        "prefix": "components.container:ReferenceAllItems",
        "body": "components.container:ReferenceAllItems()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.NumItems:": {
        "prefix": "components.container:NumItems",
        "body": "components.container:NumItems()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "container.TakeActiveItemFromHalfOfSlot:": {
        "prefix": "components.container:TakeActiveItemFromHalfOfSlot",
        "body": "components.container:TakeActiveItemFromHalfOfSlot(${1:slot},${2:opener})",
        "description": "参数:(slot)<>[],(opener)<>[] 返回值:无返回值 贡献者:@"
    },
    "cookable.Cook:": {
        "prefix": "components.cookable:Cook",
        "body": "components.cookable:Cook(${1:cooker},${2:chef})",
        "description": "参数:(cooker)<>[],(chef)<>[] 返回值:无返回值 贡献者:@"
    },
    "cookable.SetOnCookedFn:": {
        "prefix": "components.cookable:SetOnCookedFn",
        "body": "components.cookable:SetOnCookedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "cookable.OnRemoveFromEntity:": {
        "prefix": "components.cookable:OnRemoveFromEntity",
        "body": "components.cookable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cookbookupdater.LearnFoodStats:": {
        "prefix": "components.cookbookupdater:LearnFoodStats",
        "body": "components.cookbookupdater:LearnFoodStats(${1:product})",
        "description": "参数:(product)<>[] 返回值:无返回值 贡献者:@"
    },
    "cookbookupdater.LearnRecipe:": {
        "prefix": "components.cookbookupdater:LearnRecipe",
        "body": "components.cookbookupdater:LearnRecipe(${1:product},${2:ingredients})",
        "description": "参数:(product)<>[],(ingredients)<>[] 返回值:无返回值 贡献者:@"
    },
    "cooker.CanCook:": {
        "prefix": "components.cooker:CanCook",
        "body": "components.cooker:CanCook(${1:item},${2:chef})",
        "description": "参数:(item)<>[],(chef)<>[] 返回值:无返回值 贡献者:@"
    },
    "cooker.OnRemoveFromEntity:": {
        "prefix": "components.cooker:OnRemoveFromEntity",
        "body": "components.cooker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cooker.CookItem:": {
        "prefix": "components.cooker:CookItem",
        "body": "components.cooker:CookItem(${1:item},${2:chef})",
        "description": "参数:(item)<>[],(chef)<>[] 返回值:无返回值 贡献者:@"
    },
    "cookiecutterdrill.ResetDrilling:": {
        "prefix": "components.cookiecutterdrill:ResetDrilling",
        "body": "components.cookiecutterdrill:ResetDrilling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cookiecutterdrill.PauseDrilling:": {
        "prefix": "components.cookiecutterdrill:PauseDrilling",
        "body": "components.cookiecutterdrill:PauseDrilling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cookiecutterdrill.OnEntitySleep:": {
        "prefix": "components.cookiecutterdrill:OnEntitySleep",
        "body": "components.cookiecutterdrill:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cookiecutterdrill.FinishDrilling:": {
        "prefix": "components.cookiecutterdrill:FinishDrilling",
        "body": "components.cookiecutterdrill:FinishDrilling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cookiecutterdrill.OnUpdate:": {
        "prefix": "components.cookiecutterdrill:OnUpdate",
        "body": "components.cookiecutterdrill:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "cookiecutterdrill.ResumeDrilling:": {
        "prefix": "components.cookiecutterdrill:ResumeDrilling",
        "body": "components.cookiecutterdrill:ResumeDrilling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cookiecutterdrill.GetIsDoneDrilling:": {
        "prefix": "components.cookiecutterdrill:GetIsDoneDrilling",
        "body": "components.cookiecutterdrill:GetIsDoneDrilling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cooldown.OnSave:": {
        "prefix": "components.cooldown:OnSave",
        "body": "components.cooldown:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cooldown.OnLoad:": {
        "prefix": "components.cooldown:OnLoad",
        "body": "components.cooldown:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "cooldown.GetDebugString:": {
        "prefix": "components.cooldown:GetDebugString",
        "body": "components.cooldown:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cooldown.GetTimeToCharged:": {
        "prefix": "components.cooldown:GetTimeToCharged",
        "body": "components.cooldown:GetTimeToCharged()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cooldown.OnRemoveFromEntity:": {
        "prefix": "components.cooldown:OnRemoveFromEntity",
        "body": "components.cooldown:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cooldown.IsCharging:": {
        "prefix": "components.cooldown:IsCharging",
        "body": "components.cooldown:IsCharging()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cooldown.FinishCharging:": {
        "prefix": "components.cooldown:FinishCharging",
        "body": "components.cooldown:FinishCharging()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cooldown.StartCharging:": {
        "prefix": "components.cooldown:StartCharging",
        "body": "components.cooldown:StartCharging(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "cooldown.LongUpdate:": {
        "prefix": "components.cooldown:LongUpdate",
        "body": "components.cooldown:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "cooldown.IsCharged:": {
        "prefix": "components.cooldown:IsCharged",
        "body": "components.cooldown:IsCharged()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "craftingstation.GetRecipes:": {
        "prefix": "components.craftingstation:GetRecipes",
        "body": "components.craftingstation:GetRecipes()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "craftingstation.KnowsItem:": {
        "prefix": "components.craftingstation:KnowsItem",
        "body": "components.craftingstation:KnowsItem(${1:itemname})",
        "description": "参数:(itemname)<>[] 返回值:无返回值 贡献者:@"
    },
    "craftingstation.OnSave:": {
        "prefix": "components.craftingstation:OnSave",
        "body": "components.craftingstation:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "craftingstation.LearnItem:": {
        "prefix": "components.craftingstation:LearnItem",
        "body": "components.craftingstation:LearnItem(${1:itemname},${2:recipetouse})",
        "description": "参数:(itemname)<>[],(recipetouse)<>[] 返回值:无返回值 贡献者:@"
    },
    "craftingstation.ForgetItem:": {
        "prefix": "components.craftingstation:ForgetItem",
        "body": "components.craftingstation:ForgetItem(${1:itemname})",
        "description": "参数:(itemname)<>[] 返回值:无返回值 贡献者:@"
    },
    "craftingstation.OnLoad:": {
        "prefix": "components.craftingstation:OnLoad",
        "body": "components.craftingstation:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "craftingstation.ForgetAllItems:": {
        "prefix": "components.craftingstation:ForgetAllItems",
        "body": "components.craftingstation:ForgetAllItems()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "craftingstation.GetItems:": {
        "prefix": "components.craftingstation:GetItems",
        "body": "components.craftingstation:GetItems()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crewmember.Row:": {
        "prefix": "components.crewmember:Row",
        "body": "components.crewmember:Row()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crewmember.Shouldrow:": {
        "prefix": "components.crewmember:Shouldrow",
        "body": "components.crewmember:Shouldrow()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crewmember.GetDebugString:": {
        "prefix": "components.crewmember:GetDebugString",
        "body": "components.crewmember:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crewmember.OnRemoveFromEntity:": {
        "prefix": "components.crewmember:OnRemoveFromEntity",
        "body": "components.crewmember:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crewmember.SetBoat:": {
        "prefix": "components.crewmember:SetBoat",
        "body": "components.crewmember:SetBoat(${1:boat})",
        "description": "参数:(boat)<>[] 返回值:无返回值 贡献者:@"
    },
    "crewmember.OnLeftCrew:": {
        "prefix": "components.crewmember:OnLeftCrew",
        "body": "components.crewmember:OnLeftCrew()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crewmember.Leave:": {
        "prefix": "components.crewmember:Leave",
        "body": "components.crewmember:Leave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crewmember.GetBoat:": {
        "prefix": "components.crewmember:GetBoat",
        "body": "components.crewmember:GetBoat()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crewmember.Enable:": {
        "prefix": "components.crewmember:Enable",
        "body": "components.crewmember:Enable(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "crittertraits.SetDominantTrait:": {
        "prefix": "components.crittertraits:SetDominantTrait",
        "body": "components.crittertraits:SetDominantTrait(${1:trait})",
        "description": "参数:(trait)<>[] 返回值:无返回值 贡献者:@"
    },
    "crittertraits.OnSave:": {
        "prefix": "components.crittertraits:OnSave",
        "body": "components.crittertraits:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crittertraits.OnLoad:": {
        "prefix": "components.crittertraits:OnLoad",
        "body": "components.crittertraits:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "crittertraits.IsDominantTrait:": {
        "prefix": "components.crittertraits:IsDominantTrait",
        "body": "components.crittertraits:IsDominantTrait(${1:trait})",
        "description": "参数:(trait)<>[] 返回值:无返回值 贡献者:@"
    },
    "crittertraits.RefreshDominantTrait:": {
        "prefix": "components.crittertraits:RefreshDominantTrait",
        "body": "components.crittertraits:RefreshDominantTrait()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crittertraits.DecayTraits:": {
        "prefix": "components.crittertraits:DecayTraits",
        "body": "components.crittertraits:DecayTraits()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crittertraits.StartTracking:": {
        "prefix": "components.crittertraits:StartTracking",
        "body": "components.crittertraits:StartTracking()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crittertraits.OnPet:": {
        "prefix": "components.crittertraits:OnPet",
        "body": "components.crittertraits:OnPet(${1:petter})",
        "description": "参数:(petter)<>[] 返回值:无返回值 贡献者:@"
    },
    "crittertraits.IncTracker:": {
        "prefix": "components.crittertraits:IncTracker",
        "body": "components.crittertraits:IncTracker(${1:name},${2:multiplier})",
        "description": "参数:(name)<>[],(multiplier)<>[] 返回值:无返回值 贡献者:@"
    },
    "crittertraits.GetDebugString:": {
        "prefix": "components.crittertraits:GetDebugString",
        "body": "components.crittertraits:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crop.OnSave:": {
        "prefix": "components.crop:OnSave",
        "body": "components.crop:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crop.LongUpdate:": {
        "prefix": "components.crop:LongUpdate",
        "body": "components.crop:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "crop.OnRemoveFromEntity:": {
        "prefix": "components.crop:OnRemoveFromEntity",
        "body": "components.crop:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crop.StartGrowing:": {
        "prefix": "components.crop:StartGrowing",
        "body": "components.crop:StartGrowing(${1:prod},${2:grow_time},${3:grower},${4:percent})",
        "description": "参数:(prod)<>[],(grow_time)<>[],(grower)<>[],(percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "crop.LoadPostPass:": {
        "prefix": "components.crop:LoadPostPass",
        "body": "components.crop:LoadPostPass()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crop.SetOnMatureFn:": {
        "prefix": "components.crop:SetOnMatureFn",
        "body": "components.crop:SetOnMatureFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "crop.Resume:": {
        "prefix": "components.crop:Resume",
        "body": "components.crop:Resume()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crop.Fertilize:": {
        "prefix": "components.crop:Fertilize",
        "body": "components.crop:Fertilize(${1:fertilizer},${2:doer})",
        "description": "参数:(fertilizer)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "crop.OnLoad:": {
        "prefix": "components.crop:OnLoad",
        "body": "components.crop:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "crop.GetDebugString:": {
        "prefix": "components.crop:GetDebugString",
        "body": "components.crop:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crop.SetOnHarvestFn:": {
        "prefix": "components.crop:SetOnHarvestFn",
        "body": "components.crop:SetOnHarvestFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "crop.Harvest:": {
        "prefix": "components.crop:Harvest",
        "body": "components.crop:Harvest(${1:harvester})",
        "description": "参数:(harvester)<>[] 返回值:无返回值 贡献者:@"
    },
    "crop.SetOnWitheredFn:": {
        "prefix": "components.crop:SetOnWitheredFn",
        "body": "components.crop:SetOnWitheredFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "crop.IsReadyForHarvest:": {
        "prefix": "components.crop:IsReadyForHarvest",
        "body": "components.crop:IsReadyForHarvest()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crop.MakeWithered:": {
        "prefix": "components.crop:MakeWithered",
        "body": "components.crop:MakeWithered()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crop.GetWorldGrowthRateMultiplier:": {
        "prefix": "components.crop:GetWorldGrowthRateMultiplier",
        "body": "components.crop:GetWorldGrowthRateMultiplier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "crop.DoGrow:": {
        "prefix": "components.crop:DoGrow",
        "body": "components.crop:DoGrow(${1:dt},${2:nowither})",
        "description": "参数:(dt)<>[],(nowither)<>[] 返回值:无返回值 贡献者:@"
    },
    "crop.Mature:": {
        "prefix": "components.crop:Mature",
        "body": "components.crop:Mature()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cursable.IsCursable:": {
        "prefix": "components.cursable:IsCursable",
        "body": "components.cursable:IsCursable(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "cursable.RemoveCurse:": {
        "prefix": "components.cursable:RemoveCurse",
        "body": "components.cursable:RemoveCurse(${1:curse},${2:numofitems},${3:dropitems})",
        "description": "参数:(curse)<>[],(numofitems)<>[],(dropitems)<>[] 返回值:无返回值 贡献者:@"
    },
    "cursable.OnLoad:": {
        "prefix": "components.cursable:OnLoad",
        "body": "components.cursable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "cursable.ApplyCurse:": {
        "prefix": "components.cursable:ApplyCurse",
        "body": "components.cursable:ApplyCurse(${1:item},${2:curse})",
        "description": "参数:(item)<>[],(curse)<>[] 返回值:无返回值 贡献者:@"
    },
    "cursable.OnSave:": {
        "prefix": "components.cursable:OnSave",
        "body": "components.cursable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cursable.Died:": {
        "prefix": "components.cursable:Died",
        "body": "components.cursable:Died()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cursable.ForceOntoOwner:": {
        "prefix": "components.cursable:ForceOntoOwner",
        "body": "components.cursable:ForceOntoOwner(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "curseditem.lookforplayer:": {
        "prefix": "components.curseditem:lookforplayer",
        "body": "components.curseditem:lookforplayer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "curseditem.checkplayersinventoryforspace:": {
        "prefix": "components.curseditem:checkplayersinventoryforspace",
        "body": "components.curseditem:checkplayersinventoryforspace(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "curseditem.OnUpdate:": {
        "prefix": "components.curseditem:OnUpdate",
        "body": "components.curseditem:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "curseditem.CheckForOwner:": {
        "prefix": "components.curseditem:CheckForOwner",
        "body": "components.curseditem:CheckForOwner()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "curseditem.Given:": {
        "prefix": "components.curseditem:Given",
        "body": "components.curseditem:Given(${1:item},${2:data})",
        "description": "参数:(item)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "custombuildmanager.SetCanSwapSymbol:": {
        "prefix": "components.custombuildmanager:SetCanSwapSymbol",
        "body": "components.custombuildmanager:SetCanSwapSymbol(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "custombuildmanager.SetGroups:": {
        "prefix": "components.custombuildmanager:SetGroups",
        "body": "components.custombuildmanager:SetGroups(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "custombuildmanager.OnLoad:": {
        "prefix": "components.custombuildmanager:OnLoad",
        "body": "components.custombuildmanager:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "custombuildmanager.OnSave:": {
        "prefix": "components.custombuildmanager:OnSave",
        "body": "components.custombuildmanager:OnSave(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "custombuildmanager.refreshart:": {
        "prefix": "components.custombuildmanager:refreshart",
        "body": "components.custombuildmanager:refreshart()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "custombuildmanager.ChangeGroup:": {
        "prefix": "components.custombuildmanager:ChangeGroup",
        "body": "components.custombuildmanager:ChangeGroup(${1:group},${2:build})",
        "description": "参数:(group)<>[],(build)<>[] 返回值:无返回值 贡献者:@"
    },
    "cyclable.OnSave:": {
        "prefix": "components.cyclable:OnSave",
        "body": "components.cyclable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "cyclable.SetOnCycleFn:": {
        "prefix": "components.cyclable:SetOnCycleFn",
        "body": "components.cyclable:SetOnCycleFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "cyclable.Cycle:": {
        "prefix": "components.cyclable:Cycle",
        "body": "components.cyclable:Cycle(${1:doer},${2:negative})",
        "description": "参数:(doer)<>[],(negative)<>[] 返回值:无返回值 贡献者:@"
    },
    "cyclable.SetStep:": {
        "prefix": "components.cyclable:SetStep",
        "body": "components.cyclable:SetStep(${1:step},${2:doer},${3:ignore_callback})",
        "description": "参数:(step)<>[],(doer)<>[],(ignore_callback)<>[] 返回值:无返回值 贡献者:@"
    },
    "cyclable.OnLoad:": {
        "prefix": "components.cyclable:OnLoad",
        "body": "components.cyclable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "damagereflect.SetDefaultDamage:": {
        "prefix": "components.damagereflect:SetDefaultDamage",
        "body": "components.damagereflect:SetDefaultDamage(${1:value})",
        "description": "参数:(value)<>[] 返回值:无返回值 贡献者:@"
    },
    "damagereflect.SetReflectDamageFn:": {
        "prefix": "components.damagereflect:SetReflectDamageFn",
        "body": "components.damagereflect:SetReflectDamageFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "damagereflect.GetReflectedDamage:": {
        "prefix": "components.damagereflect:GetReflectedDamage",
        "body": "components.damagereflect:GetReflectedDamage(${1:attacker},${2:damage},${3:weapon},${4:stimuli},${5:spdamage})",
        "description": "参数:(attacker)<>[],(damage)<>[],(weapon)<>[],(stimuli)<>[],(spdamage)<>[] 返回值:无返回值 贡献者:@"
    },
    "damagetracker.Start:": {
        "prefix": "components.damagetracker:Start",
        "body": "components.damagetracker:Start()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "damagetracker.OnHealthDelta:": {
        "prefix": "components.damagetracker:OnHealthDelta",
        "body": "components.damagetracker:OnHealthDelta(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "damagetracker.Stop:": {
        "prefix": "components.damagetracker:Stop",
        "body": "components.damagetracker:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "damagetypebonus.GetBonus:": {
        "prefix": "components.damagetypebonus:GetBonus",
        "body": "components.damagetypebonus:GetBonus(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "damagetypebonus.RemoveBonus:": {
        "prefix": "components.damagetypebonus:RemoveBonus",
        "body": "components.damagetypebonus:RemoveBonus(${1:tag},${2:src},${3:key})",
        "description": "参数:(tag)<>[],(src)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "damagetypebonus.AddBonus:": {
        "prefix": "components.damagetypebonus:AddBonus",
        "body": "components.damagetypebonus:AddBonus(${1:tag},${2:src},${3:pct},${4:key})",
        "description": "参数:(tag)<>[],(src)<>[],(pct)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "damagetypebonus.GetDebugString:": {
        "prefix": "components.damagetypebonus:GetDebugString",
        "body": "components.damagetypebonus:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "damagetyperesist.GetDebugString:": {
        "prefix": "components.damagetyperesist:GetDebugString",
        "body": "components.damagetyperesist:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "damagetyperesist.RemoveResist:": {
        "prefix": "components.damagetyperesist:RemoveResist",
        "body": "components.damagetyperesist:RemoveResist(${1:tag},${2:src},${3:key})",
        "description": "参数:(tag)<>[],(src)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "damagetyperesist.AddResist:": {
        "prefix": "components.damagetyperesist:AddResist",
        "body": "components.damagetyperesist:AddResist(${1:tag},${2:src},${3:pct},${4:key})",
        "description": "参数:(tag)<>[],(src)<>[],(pct)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "damagetyperesist.GetResist:": {
        "prefix": "components.damagetyperesist:GetResist",
        "body": "components.damagetyperesist:GetResist(${1:attacker},${2:weapon})",
        "description": "参数:(attacker)<>[],(weapon)<>[] 返回值:无返回值 贡献者:@"
    },
    "dataanalyzer.OnSave:": {
        "prefix": "components.dataanalyzer:OnSave",
        "body": "components.dataanalyzer:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dataanalyzer.OnLoad:": {
        "prefix": "components.dataanalyzer:OnLoad",
        "body": "components.dataanalyzer:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "dataanalyzer.SpendData:": {
        "prefix": "components.dataanalyzer:SpendData",
        "body": "components.dataanalyzer:SpendData(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "dataanalyzer.GetData:": {
        "prefix": "components.dataanalyzer:GetData",
        "body": "components.dataanalyzer:GetData(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "dataanalyzer.StopDataRegen:": {
        "prefix": "components.dataanalyzer:StopDataRegen",
        "body": "components.dataanalyzer:StopDataRegen()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.WatchDaywalker:": {
        "prefix": "components.daywalkerspawner:WatchDaywalker",
        "body": "components.daywalkerspawner:WatchDaywalker(${1:daywalker})",
        "description": "参数:(daywalker)<>[] 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.IncrementPowerLevel:": {
        "prefix": "components.daywalkerspawner:IncrementPowerLevel",
        "body": "components.daywalkerspawner:IncrementPowerLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.OnLoad:": {
        "prefix": "components.daywalkerspawner:OnLoad",
        "body": "components.daywalkerspawner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.UnregisterDayWalkerSpawningPoint:": {
        "prefix": "components.daywalkerspawner:UnregisterDayWalkerSpawningPoint",
        "body": "components.daywalkerspawner:UnregisterDayWalkerSpawningPoint(${1:spawnpoint})",
        "description": "参数:(spawnpoint)<>[] 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.OnSave:": {
        "prefix": "components.daywalkerspawner:OnSave",
        "body": "components.daywalkerspawner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.SpawnDayWalkerArena:": {
        "prefix": "components.daywalkerspawner:SpawnDayWalkerArena",
        "body": "components.daywalkerspawner:SpawnDayWalkerArena(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.RegisterDayWalkerSpawningPoint:": {
        "prefix": "components.daywalkerspawner:RegisterDayWalkerSpawningPoint",
        "body": "components.daywalkerspawner:RegisterDayWalkerSpawningPoint(${1:spawnpoint})",
        "description": "参数:(spawnpoint)<>[] 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.IsValidSpawningPoint:": {
        "prefix": "components.daywalkerspawner:IsValidSpawningPoint",
        "body": "components.daywalkerspawner:IsValidSpawningPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.OnPostInit:": {
        "prefix": "components.daywalkerspawner:OnPostInit",
        "body": "components.daywalkerspawner:OnPostInit()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.LoadPostPass:": {
        "prefix": "components.daywalkerspawner:LoadPostPass",
        "body": "components.daywalkerspawner:LoadPostPass(${1:ents},${2:data})",
        "description": "参数:(ents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.FindBestSpawningPoint:": {
        "prefix": "components.daywalkerspawner:FindBestSpawningPoint",
        "body": "components.daywalkerspawner:FindBestSpawningPoint()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.GetPowerLevel:": {
        "prefix": "components.daywalkerspawner:GetPowerLevel",
        "body": "components.daywalkerspawner:GetPowerLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.OnDayChange:": {
        "prefix": "components.daywalkerspawner:OnDayChange",
        "body": "components.daywalkerspawner:OnDayChange()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.TryToSpawnDayWalkerArena:": {
        "prefix": "components.daywalkerspawner:TryToSpawnDayWalkerArena",
        "body": "components.daywalkerspawner:TryToSpawnDayWalkerArena()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "daywalkerspawner.TryToRegisterSpawningPoint:": {
        "prefix": "components.daywalkerspawner:TryToRegisterSpawningPoint",
        "body": "components.daywalkerspawner:TryToRegisterSpawningPoint(${1:spawnpoint})",
        "description": "参数:(spawnpoint)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuff.OnDetach:": {
        "prefix": "components.debuff:OnDetach",
        "body": "components.debuff:OnDetach()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "debuff.SetDetachedFn:": {
        "prefix": "components.debuff:SetDetachedFn",
        "body": "components.debuff:SetDetachedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuff.ChangeFollowSymbol:": {
        "prefix": "components.debuff:ChangeFollowSymbol",
        "body": "components.debuff:ChangeFollowSymbol(${1:followsymbol},${2:followoffset})",
        "description": "参数:(followsymbol)<>[],(followoffset)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuff.Stop:": {
        "prefix": "components.debuff:Stop",
        "body": "components.debuff:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "debuff.SetChangeFollowSymbolFn:": {
        "prefix": "components.debuff:SetChangeFollowSymbolFn",
        "body": "components.debuff:SetChangeFollowSymbolFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuff.AttachTo:": {
        "prefix": "components.debuff:AttachTo",
        "body": "components.debuff:AttachTo(${1:name},${2:target},${3:followsymbol},${4:followoffset},${5:data})",
        "description": "参数:(name)<>[],(target)<>[],(followsymbol)<>[],(followoffset)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuff.SetAttachedFn:": {
        "prefix": "components.debuff:SetAttachedFn",
        "body": "components.debuff:SetAttachedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuff.Extend:": {
        "prefix": "components.debuff:Extend",
        "body": "components.debuff:Extend(${1:followsymbol},${2:followoffset},${3:data})",
        "description": "参数:(followsymbol)<>[],(followoffset)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuff.SetExtendedFn:": {
        "prefix": "components.debuff:SetExtendedFn",
        "body": "components.debuff:SetExtendedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuffable.SetFollowSymbol:": {
        "prefix": "components.debuffable:SetFollowSymbol",
        "body": "components.debuffable:SetFollowSymbol(${1:symbol},${2:x},${3:y},${4:z})",
        "description": "参数:(symbol)<>[],(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuffable.OnSave:": {
        "prefix": "components.debuffable:OnSave",
        "body": "components.debuffable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "debuffable.GetDebuff:": {
        "prefix": "components.debuffable:GetDebuff",
        "body": "components.debuffable:GetDebuff(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuffable.IsEnabled:": {
        "prefix": "components.debuffable:IsEnabled",
        "body": "components.debuffable:IsEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "debuffable.GetDebugString:": {
        "prefix": "components.debuffable:GetDebugString",
        "body": "components.debuffable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "debuffable.RemoveOnDespawn:": {
        "prefix": "components.debuffable:RemoveOnDespawn",
        "body": "components.debuffable:RemoveOnDespawn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "debuffable.TransferComponent:": {
        "prefix": "components.debuffable:TransferComponent",
        "body": "components.debuffable:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuffable.OnLoad:": {
        "prefix": "components.debuffable:OnLoad",
        "body": "components.debuffable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuffable.RemoveDebuff:": {
        "prefix": "components.debuffable:RemoveDebuff",
        "body": "components.debuffable:RemoveDebuff(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuffable.HasDebuff:": {
        "prefix": "components.debuffable:HasDebuff",
        "body": "components.debuffable:HasDebuff(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuffable.AddDebuff:": {
        "prefix": "components.debuffable:AddDebuff",
        "body": "components.debuffable:AddDebuff(${1:name},${2:prefab},${3:data})",
        "description": "参数:(name)<>[],(prefab)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "debuffable.Enable:": {
        "prefix": "components.debuffable:Enable",
        "body": "components.debuffable:Enable(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "debugger.SetOrigin:": {
        "prefix": "components.debugger:SetOrigin",
        "body": "components.debugger:SetOrigin(${1:key},${2:x},${3:y})",
        "description": "参数:(key)<>[],(x)<>[],(y)<>[] 返回值:无返回值 贡献者:@"
    },
    "debugger.SetTarget:": {
        "prefix": "components.debugger:SetTarget",
        "body": "components.debugger:SetTarget(${1:key},${2:x},${3:y})",
        "description": "参数:(key)<>[],(x)<>[],(y)<>[] 返回值:无返回值 贡献者:@"
    },
    "debugger.SetColour:": {
        "prefix": "components.debugger:SetColour",
        "body": "components.debugger:SetColour(${1:key},${2:r},${3:g},${4:b},${5:a})",
        "description": "参数:(key)<>[],(r)<>[],(g)<>[],(b)<>[],(a)<>[] 返回值:无返回值 贡献者:@"
    },
    "debugger.OnUpdate:": {
        "prefix": "components.debugger:OnUpdate",
        "body": "components.debugger:OnUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "debugger.SetAll:": {
        "prefix": "components.debugger:SetAll",
        "body": "components.debugger:SetAll(${1:key},${2:origin},${3:tar},${4:colour})",
        "description": "参数:(key)<>[],(origin)<>[],(tar)<>[],(colour)<>[] 返回值:无返回值 贡献者:@"
    },
    "debugger.SetZ:": {
        "prefix": "components.debugger:SetZ",
        "body": "components.debugger:SetZ(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "decay.DoDelta:": {
        "prefix": "components.decay:DoDelta",
        "body": "components.decay:DoDelta(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "decay.SetTimeDelta:": {
        "prefix": "components.decay:SetTimeDelta",
        "body": "components.decay:SetTimeDelta(${1:amount},${2:pause},${3:num})",
        "description": "参数:(amount)<>[],(pause)<>[],(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "deciduoustreeupdater.StartMonster:": {
        "prefix": "components.deciduoustreeupdater:StartMonster",
        "body": "components.deciduoustreeupdater:StartMonster(${1:starttime})",
        "description": "参数:(starttime)<>[] 返回值:无返回值 贡献者:@"
    },
    "deciduoustreeupdater.OnEntitySleep:": {
        "prefix": "components.deciduoustreeupdater:OnEntitySleep",
        "body": "components.deciduoustreeupdater:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deciduoustreeupdater.OnEntityWake:": {
        "prefix": "components.deciduoustreeupdater:OnEntityWake",
        "body": "components.deciduoustreeupdater:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deciduoustreeupdater.StopMonster:": {
        "prefix": "components.deciduoustreeupdater:StopMonster",
        "body": "components.deciduoustreeupdater:StopMonster()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deciduoustreeupdater.OnUpdate:": {
        "prefix": "components.deciduoustreeupdater:OnUpdate",
        "body": "components.deciduoustreeupdater:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "deciduoustreeupdater.SpawnIgniteWave:": {
        "prefix": "components.deciduoustreeupdater:SpawnIgniteWave",
        "body": "components.deciduoustreeupdater:SpawnIgniteWave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deerherding.IsGrazing:": {
        "prefix": "components.deerherding:IsGrazing",
        "body": "components.deerherding:IsGrazing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deerherding.OnSave:": {
        "prefix": "components.deerherding:OnSave",
        "body": "components.deerherding:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deerherding.SetValidAareaCheckFn:": {
        "prefix": "components.deerherding:SetValidAareaCheckFn",
        "body": "components.deerherding:SetValidAareaCheckFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "deerherding.IsAnyEntityAsleep:": {
        "prefix": "components.deerherding:IsAnyEntityAsleep",
        "body": "components.deerherding:IsAnyEntityAsleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deerherding.IsAHerdAlertTarget:": {
        "prefix": "components.deerherding:IsAHerdAlertTarget",
        "body": "components.deerherding:IsAHerdAlertTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "deerherding.UpdateDeerHerdingStatus:": {
        "prefix": "components.deerherding:UpdateDeerHerdingStatus",
        "body": "components.deerherding:UpdateDeerHerdingStatus()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deerherding.UpdateHerdLocation:": {
        "prefix": "components.deerherding:UpdateHerdLocation",
        "body": "components.deerherding:UpdateHerdLocation(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "deerherding.CalcIsHerdSpooked:": {
        "prefix": "components.deerherding:CalcIsHerdSpooked",
        "body": "components.deerherding:CalcIsHerdSpooked()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deerherding.HerdHasAlertTarget:": {
        "prefix": "components.deerherding:HerdHasAlertTarget",
        "body": "components.deerherding:HerdHasAlertTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deerherding.CalcHerdCenterPoint:": {
        "prefix": "components.deerherding:CalcHerdCenterPoint",
        "body": "components.deerherding:CalcHerdCenterPoint(${1:detailedinfo})",
        "description": "参数:(detailedinfo)<>[] 返回值:无返回值 贡献者:@"
    },
    "deerherding.GetDebugString:": {
        "prefix": "components.deerherding:GetDebugString",
        "body": "components.deerherding:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deerherding.LoadPostPass:": {
        "prefix": "components.deerherding:LoadPostPass",
        "body": "components.deerherding:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "deerherding.OnUpdate:": {
        "prefix": "components.deerherding:OnUpdate",
        "body": "components.deerherding:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "deerherding.OnLoad:": {
        "prefix": "components.deerherding:OnLoad",
        "body": "components.deerherding:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "deerherding.SetHerdAlertTarget:": {
        "prefix": "components.deerherding:SetHerdAlertTarget",
        "body": "components.deerherding:SetHerdAlertTarget(${1:deer},${2:target})",
        "description": "参数:(deer)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "deerherding.GetClosestHerdAlertTarget:": {
        "prefix": "components.deerherding:GetClosestHerdAlertTarget",
        "body": "components.deerherding:GetClosestHerdAlertTarget(${1:deer})",
        "description": "参数:(deer)<>[] 返回值:无返回值 贡献者:@"
    },
    "deerherding.IsActiveInHerd:": {
        "prefix": "components.deerherding:IsActiveInHerd",
        "body": "components.deerherding:IsActiveInHerd(${1:deer})",
        "description": "参数:(deer)<>[] 返回值:无返回值 贡献者:@"
    },
    "deployable.SetDeployMode:": {
        "prefix": "components.deployable:SetDeployMode",
        "body": "components.deployable:SetDeployMode(${1:mode})",
        "description": "参数:(mode)<>[] 返回值:无返回值 贡献者:@"
    },
    "deployable.DeploySpacingRadius:": {
        "prefix": "components.deployable:DeploySpacingRadius",
        "body": "components.deployable:DeploySpacingRadius()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deployable.IsDeployable:": {
        "prefix": "components.deployable:IsDeployable",
        "body": "components.deployable:IsDeployable(${1:deployer})",
        "description": "参数:(deployer)<>[] 返回值:无返回值 贡献者:@"
    },
    "deployable.OnRemoveFromEntity:": {
        "prefix": "components.deployable:OnRemoveFromEntity",
        "body": "components.deployable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deployable.SetDeploySpacing:": {
        "prefix": "components.deployable:SetDeploySpacing",
        "body": "components.deployable:SetDeploySpacing(${1:spacing})",
        "description": "参数:(spacing)<>[] 返回值:无返回值 贡献者:@"
    },
    "deployable.SetUseGridPlacer:": {
        "prefix": "components.deployable:SetUseGridPlacer",
        "body": "components.deployable:SetUseGridPlacer(${1:usegridplacer})",
        "description": "参数:(usegridplacer)<>[] 返回值:无返回值 贡献者:@"
    },
    "deployable.Deploy:": {
        "prefix": "components.deployable:Deploy",
        "body": "components.deployable:Deploy(${1:pt},${2:deployer},${3:rot})",
        "description": "参数:(pt)<>[],(deployer)<>[],(rot)<>[] 返回值:无返回值 贡献者:@"
    },
    "deployable.CanDeploy:": {
        "prefix": "components.deployable:CanDeploy",
        "body": "components.deployable:CanDeploy(${1:pt},${2:mouseover},${3:deployer},${4:rot})",
        "description": "参数:(pt)<>[],(mouseover)<>[],(deployer)<>[],(rot)<>[] 返回值:无返回值 贡献者:@"
    },
    "deployable.SetDeployTossSymbolOverride:": {
        "prefix": "components.deployable:SetDeployTossSymbolOverride",
        "body": "components.deployable:SetDeployTossSymbolOverride(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "deployhelper.AddRecipeFilter:": {
        "prefix": "components.deployhelper:AddRecipeFilter",
        "body": "components.deployhelper:AddRecipeFilter(${1:recipename})",
        "description": "参数:(recipename)<>[] 返回值:无返回值 贡献者:@"
    },
    "deployhelper.StopHelper:": {
        "prefix": "components.deployhelper:StopHelper",
        "body": "components.deployhelper:StopHelper()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deployhelper.OnEntitySleep:": {
        "prefix": "components.deployhelper:OnEntitySleep",
        "body": "components.deployhelper:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deployhelper.OnEntityWake:": {
        "prefix": "components.deployhelper:OnEntityWake",
        "body": "components.deployhelper:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deployhelper.OnWallUpdate:": {
        "prefix": "components.deployhelper:OnWallUpdate",
        "body": "components.deployhelper:OnWallUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "deployhelper.AddKeyFilter:": {
        "prefix": "components.deployhelper:AddKeyFilter",
        "body": "components.deployhelper:AddKeyFilter(${1:key})",
        "description": "参数:(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "deployhelper.StartHelper:": {
        "prefix": "components.deployhelper:StartHelper",
        "body": "components.deployhelper:StartHelper(${1:recipename},${2:placerinst})",
        "description": "参数:(recipename)<>[],(placerinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "despawnfader.FadeOut:": {
        "prefix": "components.despawnfader:FadeOut",
        "body": "components.despawnfader:FadeOut()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "despawnfader.OnRemoveFromEntity:": {
        "prefix": "components.despawnfader:OnRemoveFromEntity",
        "body": "components.despawnfader:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "despawnfader.OnUpdate:": {
        "prefix": "components.despawnfader:OnUpdate",
        "body": "components.despawnfader:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "digester.TryDigest:": {
        "prefix": "components.digester:TryDigest",
        "body": "components.digester:TryDigest()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "disappears.GetDebugString:": {
        "prefix": "components.disappears:GetDebugString",
        "body": "components.disappears:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "disappears.PrepareDisappear:": {
        "prefix": "components.disappears:PrepareDisappear",
        "body": "components.disappears:PrepareDisappear()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "disappears.Disappear:": {
        "prefix": "components.disappears:Disappear",
        "body": "components.disappears:Disappear()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "disappears.StopDisappear:": {
        "prefix": "components.disappears:StopDisappear",
        "body": "components.disappears:StopDisappear()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "discoverable.Discover:": {
        "prefix": "components.discoverable:Discover",
        "body": "components.discoverable:Discover()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "discoverable.OnLoad:": {
        "prefix": "components.discoverable:OnLoad",
        "body": "components.discoverable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "discoverable.SetIcons:": {
        "prefix": "components.discoverable:SetIcons",
        "body": "components.discoverable:SetIcons(${1:undiscovered},${2:discovered})",
        "description": "参数:(undiscovered)<>[],(discovered)<>[] 返回值:无返回值 贡献者:@"
    },
    "discoverable.OnSave:": {
        "prefix": "components.discoverable:OnSave",
        "body": "components.discoverable:OnSave(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "discoverable.Hide:": {
        "prefix": "components.discoverable:Hide",
        "body": "components.discoverable:Hide()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "diseaseable.Disease:": {
        "prefix": "components.diseaseable:Disease",
        "body": "components.diseaseable:Disease()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "diseaseable.Spread:": {
        "prefix": "components.diseaseable:Spread",
        "body": "components.diseaseable:Spread()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "diseaseable.OnSave:": {
        "prefix": "components.diseaseable:OnSave",
        "body": "components.diseaseable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "diseaseable.OnLoad:": {
        "prefix": "components.diseaseable:OnLoad",
        "body": "components.diseaseable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "diseaseable.GetDebugString:": {
        "prefix": "components.diseaseable:GetDebugString",
        "body": "components.diseaseable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "diseaseable.OnRemoveFromEntity:": {
        "prefix": "components.diseaseable:OnRemoveFromEntity",
        "body": "components.diseaseable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "diseaseable.IsDiseased:": {
        "prefix": "components.diseaseable:IsDiseased",
        "body": "components.diseaseable:IsDiseased()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "diseaseable.SetDiseasedFn:": {
        "prefix": "components.diseaseable:SetDiseasedFn",
        "body": "components.diseaseable:SetDiseasedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "diseaseable.IsBecomingDiseased:": {
        "prefix": "components.diseaseable:IsBecomingDiseased",
        "body": "components.diseaseable:IsBecomingDiseased()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "diseaseable.RestartNearbySpread:": {
        "prefix": "components.diseaseable:RestartNearbySpread",
        "body": "components.diseaseable:RestartNearbySpread()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "distancefade.OnEntitySleep:": {
        "prefix": "components.distancefade:OnEntitySleep",
        "body": "components.distancefade:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "distancefade.OnEntityWake:": {
        "prefix": "components.distancefade:OnEntityWake",
        "body": "components.distancefade:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "distancefade.OnUpdate:": {
        "prefix": "components.distancefade:OnUpdate",
        "body": "components.distancefade:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "distancefade.SetExtraFn:": {
        "prefix": "components.distancefade:SetExtraFn",
        "body": "components.distancefade:SetExtraFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "distancefade.Setup:": {
        "prefix": "components.distancefade:Setup",
        "body": "components.distancefade:Setup(${1:range},${2:fadedist})",
        "description": "参数:(range)<>[],(fadedist)<>[] 返回值:无返回值 贡献者:@"
    },
    "distancetracker.OnUpdate:": {
        "prefix": "components.distancetracker:OnUpdate",
        "body": "components.distancetracker:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "domesticatable.SetDomesticationTrigger:": {
        "prefix": "components.domesticatable:SetDomesticationTrigger",
        "body": "components.domesticatable:SetDomesticationTrigger(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "domesticatable.OnSave:": {
        "prefix": "components.domesticatable:OnSave",
        "body": "components.domesticatable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "domesticatable.CheckAndStartTask:": {
        "prefix": "components.domesticatable:CheckAndStartTask",
        "body": "components.domesticatable:CheckAndStartTask()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "domesticatable.OnRemoveFromEntity:": {
        "prefix": "components.domesticatable:OnRemoveFromEntity",
        "body": "components.domesticatable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "domesticatable.DeltaObedience:": {
        "prefix": "components.domesticatable:DeltaObedience",
        "body": "components.domesticatable:DeltaObedience(${1:delta})",
        "description": "参数:(delta)<>[] 返回值:无返回值 贡献者:@"
    },
    "domesticatable.CheckForChanges:": {
        "prefix": "components.domesticatable:CheckForChanges",
        "body": "components.domesticatable:CheckForChanges()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "domesticatable.Validate:": {
        "prefix": "components.domesticatable:Validate",
        "body": "components.domesticatable:Validate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "domesticatable.IsDomesticated:": {
        "prefix": "components.domesticatable:IsDomesticated",
        "body": "components.domesticatable:IsDomesticated()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "domesticatable.OnLoad:": {
        "prefix": "components.domesticatable:OnLoad",
        "body": "components.domesticatable:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "domesticatable.SetMinObedience:": {
        "prefix": "components.domesticatable:SetMinObedience",
        "body": "components.domesticatable:SetMinObedience(${1:min})",
        "description": "参数:(min)<>[] 返回值:无返回值 贡献者:@"
    },
    "domesticatable.GetDebugString:": {
        "prefix": "components.domesticatable:GetDebugString",
        "body": "components.domesticatable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "domesticatable.PauseDomesticationDecay:": {
        "prefix": "components.domesticatable:PauseDomesticationDecay",
        "body": "components.domesticatable:PauseDomesticationDecay(${1:pause})",
        "description": "参数:(pause)<>[] 返回值:无返回值 贡献者:@"
    },
    "domesticatable.SetDomesticated:": {
        "prefix": "components.domesticatable:SetDomesticated",
        "body": "components.domesticatable:SetDomesticated(${1:domesticated})",
        "description": "参数:(domesticated)<>[] 返回值:无返回值 贡献者:@"
    },
    "domesticatable.GetObedience:": {
        "prefix": "components.domesticatable:GetObedience",
        "body": "components.domesticatable:GetObedience()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "domesticatable.CancelTask:": {
        "prefix": "components.domesticatable:CancelTask",
        "body": "components.domesticatable:CancelTask()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "domesticatable.TryBecomeDomesticated:": {
        "prefix": "components.domesticatable:TryBecomeDomesticated",
        "body": "components.domesticatable:TryBecomeDomesticated()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "domesticatable.DeltaTendency:": {
        "prefix": "components.domesticatable:DeltaTendency",
        "body": "components.domesticatable:DeltaTendency(${1:tendency},${2:delta})",
        "description": "参数:(tendency)<>[],(delta)<>[] 返回值:无返回值 贡献者:@"
    },
    "domesticatable.GetDomestication:": {
        "prefix": "components.domesticatable:GetDomestication",
        "body": "components.domesticatable:GetDomestication()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "domesticatable.DeltaDomestication:": {
        "prefix": "components.domesticatable:DeltaDomestication",
        "body": "components.domesticatable:DeltaDomestication(${1:delta},${2:doer})",
        "description": "参数:(delta)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "domesticatable.BecomeDomesticated:": {
        "prefix": "components.domesticatable:BecomeDomesticated",
        "body": "components.domesticatable:BecomeDomesticated()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drawable.GetBGAtlas:": {
        "prefix": "components.drawable:GetBGAtlas",
        "body": "components.drawable:GetBGAtlas()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drawable.GetImage:": {
        "prefix": "components.drawable:GetImage",
        "body": "components.drawable:GetImage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drawable.CanDraw:": {
        "prefix": "components.drawable:CanDraw",
        "body": "components.drawable:CanDraw()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drawable.OnRemoveFromEntity:": {
        "prefix": "components.drawable:OnRemoveFromEntity",
        "body": "components.drawable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drawable.OnDrawn:": {
        "prefix": "components.drawable:OnDrawn",
        "body": "components.drawable:OnDrawn(${1:imagename},${2:imagesource},${3:atlasname},${4:bgimagename},${5:bgatlasname})",
        "description": "参数:(imagename)<>[],(imagesource)<>[],(atlasname)<>[],(bgimagename)<>[],(bgatlasname)<>[] 返回值:无返回值 贡献者:@"
    },
    "drawable.GetAtlas:": {
        "prefix": "components.drawable:GetAtlas",
        "body": "components.drawable:GetAtlas()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drawable.OnLoad:": {
        "prefix": "components.drawable:OnLoad",
        "body": "components.drawable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "drawable.OnSave:": {
        "prefix": "components.drawable:OnSave",
        "body": "components.drawable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drawable.SetCanDraw:": {
        "prefix": "components.drawable:SetCanDraw",
        "body": "components.drawable:SetCanDraw(${1:candraw})",
        "description": "参数:(candraw)<>[] 返回值:无返回值 贡献者:@"
    },
    "drawable.GetBGImage:": {
        "prefix": "components.drawable:GetBGImage",
        "body": "components.drawable:GetBGImage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drawable.SetOnDrawnFn:": {
        "prefix": "components.drawable:SetOnDrawnFn",
        "body": "components.drawable:SetOnDrawnFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "drawingtool.Draw:": {
        "prefix": "components.drawingtool:Draw",
        "body": "components.drawingtool:Draw(${1:target},${2:image},${3:src},${4:atlas},${5:bgimage},${6:bgatlas})",
        "description": "参数:(target)<>[],(image)<>[],(src)<>[],(atlas)<>[],(bgimage)<>[],(bgatlas)<>[] 返回值:无返回值 贡献者:@"
    },
    "drawingtool.SetOnDrawFn:": {
        "prefix": "components.drawingtool:SetOnDrawFn",
        "body": "components.drawingtool:SetOnDrawFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "drawingtool.GetImageToDraw:": {
        "prefix": "components.drawingtool:GetImageToDraw",
        "body": "components.drawingtool:GetImageToDraw(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "drownable.GetWashingAshoreTeleportSpot:": {
        "prefix": "components.drownable:GetWashingAshoreTeleportSpot",
        "body": "components.drownable:GetWashingAshoreTeleportSpot(${1:excludeclosest})",
        "description": "参数:(excludeclosest)<>[] 返回值:无返回值 贡献者:@"
    },
    "drownable.IsOverWater:": {
        "prefix": "components.drownable:IsOverWater",
        "body": "components.drownable:IsOverWater()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drownable.WashAshore:": {
        "prefix": "components.drownable:WashAshore",
        "body": "components.drownable:WashAshore()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drownable.DropInventory:": {
        "prefix": "components.drownable:DropInventory",
        "body": "components.drownable:DropInventory()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drownable.TakeDrowningDamage:": {
        "prefix": "components.drownable:TakeDrowningDamage",
        "body": "components.drownable:TakeDrowningDamage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drownable.Teleport:": {
        "prefix": "components.drownable:Teleport",
        "body": "components.drownable:Teleport()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drownable.SetOnTakeDrowningDamageFn:": {
        "prefix": "components.drownable:SetOnTakeDrowningDamageFn",
        "body": "components.drownable:SetOnTakeDrowningDamageFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "drownable.ShouldDropItems:": {
        "prefix": "components.drownable:ShouldDropItems",
        "body": "components.drownable:ShouldDropItems()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drownable.OnFallInOcean:": {
        "prefix": "components.drownable:OnFallInOcean",
        "body": "components.drownable:OnFallInOcean(${1:shore_x},${2:shore_y},${3:shore_z})",
        "description": "参数:(shore_x)<>[],(shore_y)<>[],(shore_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "drownable.ShouldDrown:": {
        "prefix": "components.drownable:ShouldDrown",
        "body": "components.drownable:ShouldDrown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "drownable.SetCustomTuningsFn:": {
        "prefix": "components.drownable:SetCustomTuningsFn",
        "body": "components.drownable:SetCustomTuningsFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryable.SetDriedBuildFile:": {
        "prefix": "components.dryable:SetDriedBuildFile",
        "body": "components.dryable:SetDriedBuildFile(${1:dried_buildfile})",
        "description": "参数:(dried_buildfile)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryable.GetProduct:": {
        "prefix": "components.dryable:GetProduct",
        "body": "components.dryable:GetProduct()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryable.OnRemoveFromEntity:": {
        "prefix": "components.dryable:OnRemoveFromEntity",
        "body": "components.dryable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryable.SetProduct:": {
        "prefix": "components.dryable:SetProduct",
        "body": "components.dryable:SetProduct(${1:product})",
        "description": "参数:(product)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryable.GetBuildFile:": {
        "prefix": "components.dryable:GetBuildFile",
        "body": "components.dryable:GetBuildFile()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryable.GetDriedBuildFile:": {
        "prefix": "components.dryable:GetDriedBuildFile",
        "body": "components.dryable:GetDriedBuildFile()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryable.SetDryTime:": {
        "prefix": "components.dryable:SetDryTime",
        "body": "components.dryable:SetDryTime(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryable.GetDryTime:": {
        "prefix": "components.dryable:GetDryTime",
        "body": "components.dryable:GetDryTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryable.SetBuildFile:": {
        "prefix": "components.dryable:SetBuildFile",
        "body": "components.dryable:SetBuildFile(${1:buildfile})",
        "description": "参数:(buildfile)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryer.Pause:": {
        "prefix": "components.dryer:Pause",
        "body": "components.dryer:Pause()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryer.SetStartDryingFn:": {
        "prefix": "components.dryer:SetStartDryingFn",
        "body": "components.dryer:SetStartDryingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryer.LongUpdate:": {
        "prefix": "components.dryer:LongUpdate",
        "body": "components.dryer:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryer.IsDone:": {
        "prefix": "components.dryer:IsDone",
        "body": "components.dryer:IsDone()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryer.OnRemoveFromEntity:": {
        "prefix": "components.dryer:OnRemoveFromEntity",
        "body": "components.dryer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryer.GetTimeToSpoil:": {
        "prefix": "components.dryer:GetTimeToSpoil",
        "body": "components.dryer:GetTimeToSpoil()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryer.IsDrying:": {
        "prefix": "components.dryer:IsDrying",
        "body": "components.dryer:IsDrying()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryer.Resume:": {
        "prefix": "components.dryer:Resume",
        "body": "components.dryer:Resume()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryer.SetDoneDryingFn:": {
        "prefix": "components.dryer:SetDoneDryingFn",
        "body": "components.dryer:SetDoneDryingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryer.CanDry:": {
        "prefix": "components.dryer:CanDry",
        "body": "components.dryer:CanDry(${1:dryable})",
        "description": "参数:(dryable)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryer.GetTimeToDry:": {
        "prefix": "components.dryer:GetTimeToDry",
        "body": "components.dryer:GetTimeToDry()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryer.OnLoad:": {
        "prefix": "components.dryer:OnLoad",
        "body": "components.dryer:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryer.GetDebugString:": {
        "prefix": "components.dryer:GetDebugString",
        "body": "components.dryer:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryer.SetOnHarvestFn:": {
        "prefix": "components.dryer:SetOnHarvestFn",
        "body": "components.dryer:SetOnHarvestFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryer.StopDrying:": {
        "prefix": "components.dryer:StopDrying",
        "body": "components.dryer:StopDrying(${1:reason})",
        "description": "参数:(reason)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryer.Harvest:": {
        "prefix": "components.dryer:Harvest",
        "body": "components.dryer:Harvest(${1:harvester})",
        "description": "参数:(harvester)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryer.StartDrying:": {
        "prefix": "components.dryer:StartDrying",
        "body": "components.dryer:StartDrying(${1:dryable})",
        "description": "参数:(dryable)<>[] 返回值:无返回值 贡献者:@"
    },
    "dryer.OnSave:": {
        "prefix": "components.dryer:OnSave",
        "body": "components.dryer:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryer.DropItem:": {
        "prefix": "components.dryer:DropItem",
        "body": "components.dryer:DropItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dryer.IsPaused:": {
        "prefix": "components.dryer:IsPaused",
        "body": "components.dryer:IsPaused()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dumbbelllifter.IsLifting:": {
        "prefix": "components.dumbbelllifter:IsLifting",
        "body": "components.dumbbelllifter:IsLifting(${1:dumbbell})",
        "description": "参数:(dumbbell)<>[] 返回值:无返回值 贡献者:@"
    },
    "dumbbelllifter.Lift:": {
        "prefix": "components.dumbbelllifter:Lift",
        "body": "components.dumbbelllifter:Lift()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dumbbelllifter.StartLifting:": {
        "prefix": "components.dumbbelllifter:StartLifting",
        "body": "components.dumbbelllifter:StartLifting(${1:dumbbell})",
        "description": "参数:(dumbbell)<>[] 返回值:无返回值 贡献者:@"
    },
    "dumbbelllifter.StopLifting:": {
        "prefix": "components.dumbbelllifter:StopLifting",
        "body": "components.dumbbelllifter:StopLifting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "dumbbelllifter.CanLift:": {
        "prefix": "components.dumbbelllifter:CanLift",
        "body": "components.dumbbelllifter:CanLift(${1:dumbbell})",
        "description": "参数:(dumbbell)<>[] 返回值:无返回值 贡献者:@"
    },
    "dumbbelllifter.IsLiftingAny:": {
        "prefix": "components.dumbbelllifter:IsLiftingAny",
        "body": "components.dumbbelllifter:IsLiftingAny()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "eater.SetDiet:": {
        "prefix": "components.eater:SetDiet",
        "body": "components.eater:SetDiet(${1:caneat},${2:preferseating})",
        "description": "参数:(caneat)<>[],(preferseating)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.OnSave:": {
        "prefix": "components.eater:OnSave",
        "body": "components.eater:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "eater.SetPrefersEatingTag:": {
        "prefix": "components.eater:SetPrefersEatingTag",
        "body": "components.eater:SetPrefersEatingTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.SetOnEatFn:": {
        "prefix": "components.eater:SetOnEatFn",
        "body": "components.eater:SetOnEatFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.OnRemoveFromEntity:": {
        "prefix": "components.eater:OnRemoveFromEntity",
        "body": "components.eater:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "eater.SetCanEatHorrible:": {
        "prefix": "components.eater:SetCanEatHorrible",
        "body": "components.eater:SetCanEatHorrible()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "eater.SetCanEatGears:": {
        "prefix": "components.eater:SetCanEatGears",
        "body": "components.eater:SetCanEatGears()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "eater.CanEat:": {
        "prefix": "components.eater:CanEat",
        "body": "components.eater:CanEat(${1:food})",
        "description": "参数:(food)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.SetAbsorptionModifiers:": {
        "prefix": "components.eater:SetAbsorptionModifiers",
        "body": "components.eater:SetAbsorptionModifiers(${1:health},${2:hunger},${3:sanity})",
        "description": "参数:(health)<>[],(hunger)<>[],(sanity)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.GetEdibleTags:": {
        "prefix": "components.eater:GetEdibleTags",
        "body": "components.eater:GetEdibleTags()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "eater.OnLoad:": {
        "prefix": "components.eater:OnLoad",
        "body": "components.eater:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.HasBeen:": {
        "prefix": "components.eater:HasBeen",
        "body": "components.eater:HasBeen(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.SetIgnoresSpoilage:": {
        "prefix": "components.eater:SetIgnoresSpoilage",
        "body": "components.eater:SetIgnoresSpoilage(${1:ignores})",
        "description": "参数:(ignores)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.Eat:": {
        "prefix": "components.eater:Eat",
        "body": "components.eater:Eat(${1:food},${2:feeder})",
        "description": "参数:(food)<>[],(feeder)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.DoFoodEffects:": {
        "prefix": "components.eater:DoFoodEffects",
        "body": "components.eater:DoFoodEffects(${1:food})",
        "description": "参数:(food)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.SetCanEatNitre:": {
        "prefix": "components.eater:SetCanEatNitre",
        "body": "components.eater:SetCanEatNitre(${1:can_eat})",
        "description": "参数:(can_eat)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.PrefersToEat:": {
        "prefix": "components.eater:PrefersToEat",
        "body": "components.eater:PrefersToEat(${1:food})",
        "description": "参数:(food)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.SetCanEatRawMeat:": {
        "prefix": "components.eater:SetCanEatRawMeat",
        "body": "components.eater:SetCanEatRawMeat(${1:can_eat})",
        "description": "参数:(can_eat)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.TestFood:": {
        "prefix": "components.eater:TestFood",
        "body": "components.eater:TestFood(${1:food},${2:testvalues})",
        "description": "参数:(food)<>[],(testvalues)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.SetRefusesSpoiledFood:": {
        "prefix": "components.eater:SetRefusesSpoiledFood",
        "body": "components.eater:SetRefusesSpoiledFood(${1:refuses})",
        "description": "参数:(refuses)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.TimeSinceLastEating:": {
        "prefix": "components.eater:TimeSinceLastEating",
        "body": "components.eater:TimeSinceLastEating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "eater.SetStrongStomach:": {
        "prefix": "components.eater:SetStrongStomach",
        "body": "components.eater:SetStrongStomach(${1:is_strong})",
        "description": "参数:(is_strong)<>[] 返回值:无返回值 贡献者:@"
    },
    "eater.SetCanEatRaw:": {
        "prefix": "components.eater:SetCanEatRaw",
        "body": "components.eater:SetCanEatRaw()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "edible.OnSave:": {
        "prefix": "components.edible:OnSave",
        "body": "components.edible:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "edible.AddChill:": {
        "prefix": "components.edible:AddChill",
        "body": "components.edible:AddChill(${1:delta})",
        "description": "参数:(delta)<>[] 返回值:无返回值 贡献者:@"
    },
    "edible.GetDebugString:": {
        "prefix": "components.edible:GetDebugString",
        "body": "components.edible:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "edible.GetHunger:": {
        "prefix": "components.edible:GetHunger",
        "body": "components.edible:GetHunger(${1:eater})",
        "description": "参数:(eater)<>[] 返回值:无返回值 贡献者:@"
    },
    "edible.OnRemoveFromEntity:": {
        "prefix": "components.edible:OnRemoveFromEntity",
        "body": "components.edible:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "edible.OnLoad:": {
        "prefix": "components.edible:OnLoad",
        "body": "components.edible:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "edible.DiluteChill:": {
        "prefix": "components.edible:DiluteChill",
        "body": "components.edible:DiluteChill(${1:item},${2:count})",
        "description": "参数:(item)<>[],(count)<>[] 返回值:无返回值 贡献者:@"
    },
    "edible.GetHealth:": {
        "prefix": "components.edible:GetHealth",
        "body": "components.edible:GetHealth(${1:eater})",
        "description": "参数:(eater)<>[] 返回值:无返回值 贡献者:@"
    },
    "edible.OnEaten:": {
        "prefix": "components.edible:OnEaten",
        "body": "components.edible:OnEaten(${1:eater})",
        "description": "参数:(eater)<>[] 返回值:无返回值 贡献者:@"
    },
    "edible.SetGetSanityFn:": {
        "prefix": "components.edible:SetGetSanityFn",
        "body": "components.edible:SetGetSanityFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "edible.SetOnEatenFn:": {
        "prefix": "components.edible:SetOnEatenFn",
        "body": "components.edible:SetOnEatenFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "edible.GetWoodiness:": {
        "prefix": "components.edible:GetWoodiness",
        "body": "components.edible:GetWoodiness(${1:eater})",
        "description": "参数:(eater)<>[] 返回值:无返回值 贡献者:@"
    },
    "edible.SetGetHealthFn:": {
        "prefix": "components.edible:SetGetHealthFn",
        "body": "components.edible:SetGetHealthFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "edible.GetSanity:": {
        "prefix": "components.edible:GetSanity",
        "body": "components.edible:GetSanity(${1:eater})",
        "description": "参数:(eater)<>[] 返回值:无返回值 贡献者:@"
    },
    "efficientuser.GetMultiplier:": {
        "prefix": "components.efficientuser:GetMultiplier",
        "body": "components.efficientuser:GetMultiplier(${1:action})",
        "description": "参数:(action)<>[] 返回值:无返回值 贡献者:@"
    },
    "efficientuser.AddMultiplier:": {
        "prefix": "components.efficientuser:AddMultiplier",
        "body": "components.efficientuser:AddMultiplier(${1:action},${2:multiplier},${3:source})",
        "description": "参数:(action)<>[],(multiplier)<>[],(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "efficientuser.RemoveMultiplier:": {
        "prefix": "components.efficientuser:RemoveMultiplier",
        "body": "components.efficientuser:RemoveMultiplier(${1:action},${2:source})",
        "description": "参数:(action)<>[],(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "electricattacks.AddSource:": {
        "prefix": "components.electricattacks:AddSource",
        "body": "components.electricattacks:AddSource(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "electricattacks.RemoveSource:": {
        "prefix": "components.electricattacks:RemoveSource",
        "body": "components.electricattacks:RemoveSource(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "embarker.HasDestination:": {
        "prefix": "components.embarker:HasDestination",
        "body": "components.embarker:HasDestination()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "embarker.SetEmbarkable:": {
        "prefix": "components.embarker:SetEmbarkable",
        "body": "components.embarker:SetEmbarkable(${1:embarkable})",
        "description": "参数:(embarkable)<>[] 返回值:无返回值 贡献者:@"
    },
    "embarker.StartMoving:": {
        "prefix": "components.embarker:StartMoving",
        "body": "components.embarker:StartMoving()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "embarker.SetDisembarkPos:": {
        "prefix": "components.embarker:SetDisembarkPos",
        "body": "components.embarker:SetDisembarkPos(${1:pos_x},${2:pos_z})",
        "description": "参数:(pos_x)<>[],(pos_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "embarker.UpdateEmbarkingPos:": {
        "prefix": "components.embarker:UpdateEmbarkingPos",
        "body": "components.embarker:UpdateEmbarkingPos(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "embarker.OnUpdate:": {
        "prefix": "components.embarker:OnUpdate",
        "body": "components.embarker:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "embarker.Cancel:": {
        "prefix": "components.embarker:Cancel",
        "body": "components.embarker:Cancel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "embarker.Embark:": {
        "prefix": "components.embarker:Embark",
        "body": "components.embarker:Embark()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "embarker.GetEmbarkPosition:": {
        "prefix": "components.embarker:GetEmbarkPosition",
        "body": "components.embarker:GetEmbarkPosition()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "embarker.SetDisembarkActionPos:": {
        "prefix": "components.embarker:SetDisembarkActionPos",
        "body": "components.embarker:SetDisembarkActionPos(${1:pos_x},${2:pos_z})",
        "description": "参数:(pos_x)<>[],(pos_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "emitter.Emit:": {
        "prefix": "components.emitter:Emit",
        "body": "components.emitter:Emit()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "entitytracker.GetEntity:": {
        "prefix": "components.entitytracker:GetEntity",
        "body": "components.entitytracker:GetEntity(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "entitytracker.TrackEntity:": {
        "prefix": "components.entitytracker:TrackEntity",
        "body": "components.entitytracker:TrackEntity(${1:name},${2:inst})",
        "description": "参数:(name)<>[],(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "entitytracker.LoadPostPass:": {
        "prefix": "components.entitytracker:LoadPostPass",
        "body": "components.entitytracker:LoadPostPass(${1:ents},${2:data})",
        "description": "参数:(ents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "entitytracker.GetDebugString:": {
        "prefix": "components.entitytracker:GetDebugString",
        "body": "components.entitytracker:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "entitytracker.OnSave:": {
        "prefix": "components.entitytracker:OnSave",
        "body": "components.entitytracker:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "entitytracker.OnRemoveFromEntity:": {
        "prefix": "components.entitytracker:OnRemoveFromEntity",
        "body": "components.entitytracker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "entitytracker.ForgetEntity:": {
        "prefix": "components.entitytracker:ForgetEntity",
        "body": "components.entitytracker:ForgetEntity(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "epicscare.SetDefaultDuration:": {
        "prefix": "components.epicscare:SetDefaultDuration",
        "body": "components.epicscare:SetDefaultDuration(${1:duration})",
        "description": "参数:(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "epicscare.SetRange:": {
        "prefix": "components.epicscare:SetRange",
        "body": "components.epicscare:SetRange(${1:range})",
        "description": "参数:(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "epicscare.Scare:": {
        "prefix": "components.epicscare:Scare",
        "body": "components.epicscare:Scare(${1:duration})",
        "description": "参数:(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.GetEquippedMoisture:": {
        "prefix": "components.equippable:GetEquippedMoisture",
        "body": "components.equippable:GetEquippedMoisture()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "equippable.SetOnEquip:": {
        "prefix": "components.equippable:SetOnEquip",
        "body": "components.equippable:SetOnEquip(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.SetOnUnequip:": {
        "prefix": "components.equippable:SetOnUnequip",
        "body": "components.equippable:SetOnUnequip(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.OnRemoveFromEntity:": {
        "prefix": "components.equippable:OnRemoveFromEntity",
        "body": "components.equippable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "equippable.GetWalkSpeedMult:": {
        "prefix": "components.equippable:GetWalkSpeedMult",
        "body": "components.equippable:GetWalkSpeedMult()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "equippable.IsRestricted:": {
        "prefix": "components.equippable:IsRestricted",
        "body": "components.equippable:IsRestricted(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.SetOnPocket:": {
        "prefix": "components.equippable:SetOnPocket",
        "body": "components.equippable:SetOnPocket(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.IsInsulated:": {
        "prefix": "components.equippable:IsInsulated",
        "body": "components.equippable:IsInsulated()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "equippable.SetDappernessFn:": {
        "prefix": "components.equippable:SetDappernessFn",
        "body": "components.equippable:SetDappernessFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.Equip:": {
        "prefix": "components.equippable:Equip",
        "body": "components.equippable:Equip(${1:owner},${2:from_ground})",
        "description": "参数:(owner)<>[],(from_ground)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.SetOnEquipToModel:": {
        "prefix": "components.equippable:SetOnEquipToModel",
        "body": "components.equippable:SetOnEquipToModel(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.IsEquipped:": {
        "prefix": "components.equippable:IsEquipped",
        "body": "components.equippable:IsEquipped()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "equippable.ShouldPreventUnequipping:": {
        "prefix": "components.equippable:ShouldPreventUnequipping",
        "body": "components.equippable:ShouldPreventUnequipping()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "equippable.ToPocket:": {
        "prefix": "components.equippable:ToPocket",
        "body": "components.equippable:ToPocket(${1:owner})",
        "description": "参数:(owner)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.GetDapperness:": {
        "prefix": "components.equippable:GetDapperness",
        "body": "components.equippable:GetDapperness(${1:owner},${2:ignore_wetness})",
        "description": "参数:(owner)<>[],(ignore_wetness)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.SetPreventUnequipping:": {
        "prefix": "components.equippable:SetPreventUnequipping",
        "body": "components.equippable:SetPreventUnequipping(${1:shouldprevent})",
        "description": "参数:(shouldprevent)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.IsRestricted_FromLoad:": {
        "prefix": "components.equippable:IsRestricted_FromLoad",
        "body": "components.equippable:IsRestricted_FromLoad(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "equippable.Unequip:": {
        "prefix": "components.equippable:Unequip",
        "body": "components.equippable:Unequip(${1:owner})",
        "description": "参数:(owner)<>[] 返回值:无返回值 贡献者:@"
    },
    "erasablepaper.SetStackSize:": {
        "prefix": "components.erasablepaper:SetStackSize",
        "body": "components.erasablepaper:SetStackSize(${1:size})",
        "description": "参数:(size)<>[] 返回值:无返回值 贡献者:@"
    },
    "erasablepaper.DoErase:": {
        "prefix": "components.erasablepaper:DoErase",
        "body": "components.erasablepaper:DoErase(${1:eraser},${2:doer})",
        "description": "参数:(eraser)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "erasablepaper.SetErasedPrefab:": {
        "prefix": "components.erasablepaper:SetErasedPrefab",
        "body": "components.erasablepaper:SetErasedPrefab(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "experiencecollector.SetTask:": {
        "prefix": "components.experiencecollector:SetTask",
        "body": "components.experiencecollector:SetTask(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "experiencecollector.OnLoad:": {
        "prefix": "components.experiencecollector:OnLoad",
        "body": "components.experiencecollector:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "experiencecollector.LongUpdate:": {
        "prefix": "components.experiencecollector:LongUpdate",
        "body": "components.experiencecollector:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "experiencecollector.UpdateXp:": {
        "prefix": "components.experiencecollector:UpdateXp",
        "body": "components.experiencecollector:UpdateXp()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "experiencecollector.OnSave:": {
        "prefix": "components.experiencecollector:OnSave",
        "body": "components.experiencecollector:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "expertsailor.SetAnchorRaisingSpeed:": {
        "prefix": "components.expertsailor:SetAnchorRaisingSpeed",
        "body": "components.expertsailor:SetAnchorRaisingSpeed(${1:speed})",
        "description": "参数:(speed)<>[] 返回值:无返回值 贡献者:@"
    },
    "expertsailor.GetRowExtraMaxVelocity:": {
        "prefix": "components.expertsailor:GetRowExtraMaxVelocity",
        "body": "components.expertsailor:GetRowExtraMaxVelocity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "expertsailor.SetRowForceMultiplier:": {
        "prefix": "components.expertsailor:SetRowForceMultiplier",
        "body": "components.expertsailor:SetRowForceMultiplier(${1:force})",
        "description": "参数:(force)<>[] 返回值:无返回值 贡献者:@"
    },
    "expertsailor.SetLowerSailStrength:": {
        "prefix": "components.expertsailor:SetLowerSailStrength",
        "body": "components.expertsailor:SetLowerSailStrength(${1:strength})",
        "description": "参数:(strength)<>[] 返回值:无返回值 贡献者:@"
    },
    "expertsailor.GetAnchorRaisingSpeed:": {
        "prefix": "components.expertsailor:GetAnchorRaisingSpeed",
        "body": "components.expertsailor:GetAnchorRaisingSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "expertsailor.SetRowExtraMaxVelocity:": {
        "prefix": "components.expertsailor:SetRowExtraMaxVelocity",
        "body": "components.expertsailor:SetRowExtraMaxVelocity(${1:vel})",
        "description": "参数:(vel)<>[] 返回值:无返回值 贡献者:@"
    },
    "expertsailor.GetRowForceMultiplier:": {
        "prefix": "components.expertsailor:GetRowForceMultiplier",
        "body": "components.expertsailor:GetRowForceMultiplier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "expertsailor.GetLowerSailStrength:": {
        "prefix": "components.expertsailor:GetLowerSailStrength",
        "body": "components.expertsailor:GetLowerSailStrength()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "explosive.SetPvpAttacker:": {
        "prefix": "components.explosive:SetPvpAttacker",
        "body": "components.explosive:SetPvpAttacker(${1:attacker})",
        "description": "参数:(attacker)<>[] 返回值:无返回值 贡献者:@"
    },
    "explosive.OnBurnt:": {
        "prefix": "components.explosive:OnBurnt",
        "body": "components.explosive:OnBurnt()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "explosive.SetAttacker:": {
        "prefix": "components.explosive:SetAttacker",
        "body": "components.explosive:SetAttacker(${1:attacker})",
        "description": "参数:(attacker)<>[] 返回值:无返回值 贡献者:@"
    },
    "explosive.SetOnExplodeFn:": {
        "prefix": "components.explosive:SetOnExplodeFn",
        "body": "components.explosive:SetOnExplodeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "explosiveresist.OnSave:": {
        "prefix": "components.explosiveresist:OnSave",
        "body": "components.explosiveresist:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "explosiveresist.OnLoad:": {
        "prefix": "components.explosiveresist:OnLoad",
        "body": "components.explosiveresist:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "explosiveresist.DoDelta:": {
        "prefix": "components.explosiveresist:DoDelta",
        "body": "components.explosiveresist:DoDelta(${1:delta})",
        "description": "参数:(delta)<>[] 返回值:无返回值 贡献者:@"
    },
    "explosiveresist.GetResistance:": {
        "prefix": "components.explosiveresist:GetResistance",
        "body": "components.explosiveresist:GetResistance()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "explosiveresist.GetDebugString:": {
        "prefix": "components.explosiveresist:GetDebugString",
        "body": "components.explosiveresist:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "explosiveresist.OnUpdate:": {
        "prefix": "components.explosiveresist:OnUpdate",
        "body": "components.explosiveresist:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "explosiveresist.OnExplosiveDamage:": {
        "prefix": "components.explosiveresist:OnExplosiveDamage",
        "body": "components.explosiveresist:OnExplosiveDamage(${1:damage},${2:src})",
        "description": "参数:(damage)<>[],(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "explosiveresist.SetResistance:": {
        "prefix": "components.explosiveresist:SetResistance",
        "body": "components.explosiveresist:SetResistance(${1:resistance})",
        "description": "参数:(resistance)<>[] 返回值:无返回值 贡献者:@"
    },
    "fader.OnUpdate:": {
        "prefix": "components.fader:OnUpdate",
        "body": "components.fader:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "fader.Fade:": {
        "prefix": "components.fader:Fade",
        "body": "components.fader:Fade(${1:startval},${2:endval},${3:time},${4:setter},${5:atend},${6:id})",
        "description": "参数:(startval)<>[],(endval)<>[],(time)<>[],(setter)<>[],(atend)<>[],(id)<>[] 返回值:无返回值 贡献者:@"
    },
    "fader.StopAll:": {
        "prefix": "components.fader:StopAll",
        "body": "components.fader:StopAll()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fan.SetOnChannelingFn:": {
        "prefix": "components.fan:SetOnChannelingFn",
        "body": "components.fan:SetOnChannelingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fan.IsChanneling:": {
        "prefix": "components.fan:IsChanneling",
        "body": "components.fan:IsChanneling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fan.SetOverrideSymbol:": {
        "prefix": "components.fan:SetOverrideSymbol",
        "body": "components.fan:SetOverrideSymbol(${1:symbol})",
        "description": "参数:(symbol)<>[] 返回值:无返回值 贡献者:@"
    },
    "fan.SetOnUseFn:": {
        "prefix": "components.fan:SetOnUseFn",
        "body": "components.fan:SetOnUseFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fan.Channel:": {
        "prefix": "components.fan:Channel",
        "body": "components.fan:Channel(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "fan.Fan:": {
        "prefix": "components.fan:Fan",
        "body": "components.fan:Fan(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "fan.OnRemoveFromEntity:": {
        "prefix": "components.fan:OnRemoveFromEntity",
        "body": "components.fan:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fan.SetCanUseFn:": {
        "prefix": "components.fan:SetCanUseFn",
        "body": "components.fan:SetCanUseFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmplantable.Plant:": {
        "prefix": "components.farmplantable:Plant",
        "body": "components.farmplantable:Plant(${1:target},${2:planter})",
        "description": "参数:(target)<>[],(planter)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.SetStressed:": {
        "prefix": "components.farmplantstress:SetStressed",
        "body": "components.farmplantstress:SetStressed(${1:name},${2:stressed},${3:doer})",
        "description": "参数:(name)<>[],(stressed)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.OnLoad:": {
        "prefix": "components.farmplantstress:OnLoad",
        "body": "components.farmplantstress:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.GetDebugString:": {
        "prefix": "components.farmplantstress:GetDebugString",
        "body": "components.farmplantstress:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.GetStressDescription:": {
        "prefix": "components.farmplantstress:GetStressDescription",
        "body": "components.farmplantstress:GetStressDescription(${1:viewer})",
        "description": "参数:(viewer)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.AddStressCategory:": {
        "prefix": "components.farmplantstress:AddStressCategory",
        "body": "components.farmplantstress:AddStressCategory(${1:name},${2:testfn},${3:onchangefn})",
        "description": "参数:(name)<>[],(testfn)<>[],(onchangefn)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.Reset:": {
        "prefix": "components.farmplantstress:Reset",
        "body": "components.farmplantstress:Reset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.OnSave:": {
        "prefix": "components.farmplantstress:OnSave",
        "body": "components.farmplantstress:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.CopyFrom:": {
        "prefix": "components.farmplantstress:CopyFrom",
        "body": "components.farmplantstress:CopyFrom(${1:rhs})",
        "description": "参数:(rhs)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.OnInteractWith:": {
        "prefix": "components.farmplantstress:OnInteractWith",
        "body": "components.farmplantstress:OnInteractWith(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.GetFinalStressState:": {
        "prefix": "components.farmplantstress:GetFinalStressState",
        "body": "components.farmplantstress:GetFinalStressState()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.CalcFinalStressState:": {
        "prefix": "components.farmplantstress:CalcFinalStressState",
        "body": "components.farmplantstress:CalcFinalStressState()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmplantstress.MakeCheckpoint:": {
        "prefix": "components.farmplantstress:MakeCheckpoint",
        "body": "components.farmplantstress:MakeCheckpoint()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmplanttendable.TendTo:": {
        "prefix": "components.farmplanttendable:TendTo",
        "body": "components.farmplanttendable:TendTo(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmplanttendable.SetTendable:": {
        "prefix": "components.farmplanttendable:SetTendable",
        "body": "components.farmplanttendable:SetTendable(${1:tendable})",
        "description": "参数:(tendable)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmplanttendable.OnSave:": {
        "prefix": "components.farmplanttendable:OnSave",
        "body": "components.farmplanttendable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmplanttendable.OnLoad:": {
        "prefix": "components.farmplanttendable:OnLoad",
        "body": "components.farmplanttendable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmsoildrinker.UpdateMoistureTime:": {
        "prefix": "components.farmsoildrinker:UpdateMoistureTime",
        "body": "components.farmsoildrinker:UpdateMoistureTime(${1:is_soil_moist},${2:was_soil_moist})",
        "description": "参数:(is_soil_moist)<>[],(was_soil_moist)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmsoildrinker.OnSave:": {
        "prefix": "components.farmsoildrinker:OnSave",
        "body": "components.farmsoildrinker:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmsoildrinker.OnLoad:": {
        "prefix": "components.farmsoildrinker:OnLoad",
        "body": "components.farmsoildrinker:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmsoildrinker.GetDebugString:": {
        "prefix": "components.farmsoildrinker:GetDebugString",
        "body": "components.farmsoildrinker:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmsoildrinker.OnRemoveFromEntity:": {
        "prefix": "components.farmsoildrinker:OnRemoveFromEntity",
        "body": "components.farmsoildrinker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmsoildrinker.Reset:": {
        "prefix": "components.farmsoildrinker:Reset",
        "body": "components.farmsoildrinker:Reset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmsoildrinker.CopyFrom:": {
        "prefix": "components.farmsoildrinker:CopyFrom",
        "body": "components.farmsoildrinker:CopyFrom(${1:rhs})",
        "description": "参数:(rhs)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmsoildrinker.OnSoilMoistureStateChange:": {
        "prefix": "components.farmsoildrinker:OnSoilMoistureStateChange",
        "body": "components.farmsoildrinker:OnSoilMoistureStateChange(${1:cur_state},${2:prev_state})",
        "description": "参数:(cur_state)<>[],(prev_state)<>[] 返回值:无返回值 贡献者:@"
    },
    "farmsoildrinker.GetMoistureRate:": {
        "prefix": "components.farmsoildrinker:GetMoistureRate",
        "body": "components.farmsoildrinker:GetMoistureRate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmsoildrinker.CalcPercentTimeHydrated:": {
        "prefix": "components.farmsoildrinker:CalcPercentTimeHydrated",
        "body": "components.farmsoildrinker:CalcPercentTimeHydrated()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "farmtiller.Till:": {
        "prefix": "components.farmtiller:Till",
        "body": "components.farmtiller:Till(${1:pt},${2:doer})",
        "description": "参数:(pt)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "fencerotator.Rotate:": {
        "prefix": "components.fencerotator:Rotate",
        "body": "components.fencerotator:Rotate(${1:target},${2:delta})",
        "description": "参数:(target)<>[],(delta)<>[] 返回值:无返回值 贡献者:@"
    },
    "fertilizable.Fertilize:": {
        "prefix": "components.fertilizable:Fertilize",
        "body": "components.fertilizable:Fertilize(${1:fertilizer})",
        "description": "参数:(fertilizer)<>[] 返回值:无返回值 贡献者:@"
    },
    "fertilizer.SetNutrients:": {
        "prefix": "components.fertilizer:SetNutrients",
        "body": "components.fertilizer:SetNutrients(${1:nutrient1},${2:nutrient2},${3:nutrient3})",
        "description": "参数:(nutrient1)<>[],(nutrient2)<>[],(nutrient3)<>[] 返回值:无返回值 贡献者:@"
    },
    "fertilizer.Heal:": {
        "prefix": "components.fertilizer:Heal",
        "body": "components.fertilizer:Heal(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "fertilizer.SetHealingAmount:": {
        "prefix": "components.fertilizer:SetHealingAmount",
        "body": "components.fertilizer:SetHealingAmount(${1:health})",
        "description": "参数:(health)<>[] 返回值:无返回值 贡献者:@"
    },
    "fertilizer.OnRemoveFromEntity:": {
        "prefix": "components.fertilizer:OnRemoveFromEntity",
        "body": "components.fertilizer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fertilizer.OnApplied:": {
        "prefix": "components.fertilizer:OnApplied",
        "body": "components.fertilizer:OnApplied(${1:doer},${2:target})",
        "description": "参数:(doer)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "fertilizerresearchable.LearnFertilizer:": {
        "prefix": "components.fertilizerresearchable:LearnFertilizer",
        "body": "components.fertilizerresearchable:LearnFertilizer(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "fertilizerresearchable.GetResearchInfo:": {
        "prefix": "components.fertilizerresearchable:GetResearchInfo",
        "body": "components.fertilizerresearchable:GetResearchInfo()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fertilizerresearchable.SetResearchFn:": {
        "prefix": "components.fertilizerresearchable:SetResearchFn",
        "body": "components.fertilizerresearchable:SetResearchFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fillable.Fill:": {
        "prefix": "components.fillable:Fill",
        "body": "components.fillable:Fill(${1:from_object})",
        "description": "参数:(from_object)<>[] 返回值:无返回值 贡献者:@"
    },
    "finiteuses.OnSave:": {
        "prefix": "components.finiteuses:OnSave",
        "body": "components.finiteuses:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "finiteuses.Use:": {
        "prefix": "components.finiteuses:Use",
        "body": "components.finiteuses:Use(${1:num})",
        "description": "参数:(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "finiteuses.OnRemoveFromEntity:": {
        "prefix": "components.finiteuses:OnRemoveFromEntity",
        "body": "components.finiteuses:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "finiteuses.SetDoesNotStartFull:": {
        "prefix": "components.finiteuses:SetDoesNotStartFull",
        "body": "components.finiteuses:SetDoesNotStartFull(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "finiteuses.SetMaxUses:": {
        "prefix": "components.finiteuses:SetMaxUses",
        "body": "components.finiteuses:SetMaxUses(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "finiteuses.SetConsumption:": {
        "prefix": "components.finiteuses:SetConsumption",
        "body": "components.finiteuses:SetConsumption(${1:action},${2:uses})",
        "description": "参数:(action)<>[],(uses)<>[] 返回值:无返回值 贡献者:@"
    },
    "finiteuses.GetDebugString:": {
        "prefix": "components.finiteuses:GetDebugString",
        "body": "components.finiteuses:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "finiteuses.GetUses:": {
        "prefix": "components.finiteuses:GetUses",
        "body": "components.finiteuses:GetUses()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "finiteuses.IgnoresCombatDurabilityLoss:": {
        "prefix": "components.finiteuses:IgnoresCombatDurabilityLoss",
        "body": "components.finiteuses:IgnoresCombatDurabilityLoss()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "finiteuses.Repair:": {
        "prefix": "components.finiteuses:Repair",
        "body": "components.finiteuses:Repair(${1:repairvalue})",
        "description": "参数:(repairvalue)<>[] 返回值:无返回值 贡献者:@"
    },
    "finiteuses.SetUses:": {
        "prefix": "components.finiteuses:SetUses",
        "body": "components.finiteuses:SetUses(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "finiteuses.SetOnFinished:": {
        "prefix": "components.finiteuses:SetOnFinished",
        "body": "components.finiteuses:SetOnFinished(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "finiteuses.SetPercent:": {
        "prefix": "components.finiteuses:SetPercent",
        "body": "components.finiteuses:SetPercent(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "finiteuses.GetPercent:": {
        "prefix": "components.finiteuses:GetPercent",
        "body": "components.finiteuses:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "finiteuses.OnUsedAsItem:": {
        "prefix": "components.finiteuses:OnUsedAsItem",
        "body": "components.finiteuses:OnUsedAsItem(${1:action},${2:doer},${3:target})",
        "description": "参数:(action)<>[],(doer)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "finiteuses.SetIgnoreCombatDurabilityLoss:": {
        "prefix": "components.finiteuses:SetIgnoreCombatDurabilityLoss",
        "body": "components.finiteuses:SetIgnoreCombatDurabilityLoss(${1:value})",
        "description": "参数:(value)<>[] 返回值:无返回值 贡献者:@"
    },
    "finiteuses.OnLoad:": {
        "prefix": "components.finiteuses:OnLoad",
        "body": "components.finiteuses:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "firebug.GetDebugString:": {
        "prefix": "components.firebug:GetDebugString",
        "body": "components.firebug:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firebug.OnUpdate:": {
        "prefix": "components.firebug:OnUpdate",
        "body": "components.firebug:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "firebug.Disable:": {
        "prefix": "components.firebug:Disable",
        "body": "components.firebug:Disable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firebug.Enable:": {
        "prefix": "components.firebug:Enable",
        "body": "components.firebug:Enable(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "firedetector.SetOnBeginEmergencyFn:": {
        "prefix": "components.firedetector:SetOnBeginEmergencyFn",
        "body": "components.firedetector:SetOnBeginEmergencyFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "firedetector.ResetEmergencyCooldown:": {
        "prefix": "components.firedetector:ResetEmergencyCooldown",
        "body": "components.firedetector:ResetEmergencyCooldown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firedetector.SetOnEndEmergencyFn:": {
        "prefix": "components.firedetector:SetOnEndEmergencyFn",
        "body": "components.firedetector:SetOnEndEmergencyFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "firedetector.SetOnBeginWarningFn:": {
        "prefix": "components.firedetector:SetOnBeginWarningFn",
        "body": "components.firedetector:SetOnBeginWarningFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "firedetector.SetOnFindFireFn:": {
        "prefix": "components.firedetector:SetOnFindFireFn",
        "body": "components.firedetector:SetOnFindFireFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "firedetector.ActivateEmergencyMode:": {
        "prefix": "components.firedetector:ActivateEmergencyMode",
        "body": "components.firedetector:ActivateEmergencyMode(${1:randomizedStartTime})",
        "description": "参数:(randomizedStartTime)<>[] 返回值:无返回值 贡献者:@"
    },
    "firedetector.GetDebugString:": {
        "prefix": "components.firedetector:GetDebugString",
        "body": "components.firedetector:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firedetector.Activate:": {
        "prefix": "components.firedetector:Activate",
        "body": "components.firedetector:Activate(${1:randomizedStartTime})",
        "description": "参数:(randomizedStartTime)<>[] 返回值:无返回值 贡献者:@"
    },
    "firedetector.SetOnEndWarningFn:": {
        "prefix": "components.firedetector:SetOnEndWarningFn",
        "body": "components.firedetector:SetOnEndWarningFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "firedetector.Deactivate:": {
        "prefix": "components.firedetector:Deactivate",
        "body": "components.firedetector:Deactivate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firedetector.SetOnUpdateWarningFn:": {
        "prefix": "components.firedetector:SetOnUpdateWarningFn",
        "body": "components.firedetector:SetOnUpdateWarningFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "firedetector.LowerEmergencyLevel:": {
        "prefix": "components.firedetector:LowerEmergencyLevel",
        "body": "components.firedetector:LowerEmergencyLevel(${1:numlevels})",
        "description": "参数:(numlevels)<>[] 返回值:无返回值 贡献者:@"
    },
    "firedetector.GetEmergencyLevel:": {
        "prefix": "components.firedetector:GetEmergencyLevel",
        "body": "components.firedetector:GetEmergencyLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firedetector.RaiseEmergencyLevel:": {
        "prefix": "components.firedetector:RaiseEmergencyLevel",
        "body": "components.firedetector:RaiseEmergencyLevel(${1:numlevels})",
        "description": "参数:(numlevels)<>[] 返回值:无返回值 贡献者:@"
    },
    "firedetector.DetectFire:": {
        "prefix": "components.firedetector:DetectFire",
        "body": "components.firedetector:DetectFire()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firedetector.IsEmergency:": {
        "prefix": "components.firedetector:IsEmergency",
        "body": "components.firedetector:IsEmergency()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firedetector.OnRemoveFromEntity:": {
        "prefix": "components.firedetector:OnRemoveFromEntity",
        "body": "components.firedetector:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firedetector.GetMaxEmergencyLevel:": {
        "prefix": "components.firedetector:GetMaxEmergencyLevel",
        "body": "components.firedetector:GetMaxEmergencyLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firefx.Extinguish:": {
        "prefix": "components.firefx:Extinguish",
        "body": "components.firefx:Extinguish(${1:fast})",
        "description": "参数:(fast)<>[] 返回值:无返回值 贡献者:@"
    },
    "firefx.OnRemoveEntity:": {
        "prefix": "components.firefx:OnRemoveEntity",
        "body": "components.firefx:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firefx.OnEntityWake:": {
        "prefix": "components.firefx:OnEntityWake",
        "body": "components.firefx:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firefx.AttachLightTo:": {
        "prefix": "components.firefx:AttachLightTo",
        "body": "components.firefx:AttachLightTo(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "firefx.SetPercentInLevel:": {
        "prefix": "components.firefx:SetPercentInLevel",
        "body": "components.firefx:SetPercentInLevel(${1:percent})",
        "description": "参数:(percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "firefx.SetLevel:": {
        "prefix": "components.firefx:SetLevel",
        "body": "components.firefx:SetLevel(${1:lev},${2:immediate},${3:controlled_burn})",
        "description": "参数:(lev)<>[],(immediate)<>[],(controlled_burn)<>[] 返回值:无返回值 贡献者:@"
    },
    "firefx.OnUpdate:": {
        "prefix": "components.firefx:OnUpdate",
        "body": "components.firefx:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "firefx.OnEntitySleep:": {
        "prefix": "components.firefx:OnEntitySleep",
        "body": "components.firefx:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "firefx.GetLevelRadius:": {
        "prefix": "components.firefx:GetLevelRadius",
        "body": "components.firefx:GetLevelRadius(${1:level})",
        "description": "参数:(level)<>[] 返回值:无返回值 贡献者:@"
    },
    "firefx.UpdateRadius:": {
        "prefix": "components.firefx:UpdateRadius",
        "body": "components.firefx:UpdateRadius()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishable.OnLoad:": {
        "prefix": "components.fishable:OnLoad",
        "body": "components.fishable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishable.ReleaseFish:": {
        "prefix": "components.fishable:ReleaseFish",
        "body": "components.fishable:ReleaseFish(${1:fish})",
        "description": "参数:(fish)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishable.SetGetFishFn:": {
        "prefix": "components.fishable:SetGetFishFn",
        "body": "components.fishable:SetGetFishFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishable.GetDebugString:": {
        "prefix": "components.fishable:GetDebugString",
        "body": "components.fishable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishable.GetFishPercent:": {
        "prefix": "components.fishable:GetFishPercent",
        "body": "components.fishable:GetFishPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishable.OnRemoveFromEntity:": {
        "prefix": "components.fishable:OnRemoveFromEntity",
        "body": "components.fishable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishable.RemoveFish:": {
        "prefix": "components.fishable:RemoveFish",
        "body": "components.fishable:RemoveFish(${1:fish})",
        "description": "参数:(fish)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishable.OnSave:": {
        "prefix": "components.fishable:OnSave",
        "body": "components.fishable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishable.RefreshFish:": {
        "prefix": "components.fishable:RefreshFish",
        "body": "components.fishable:RefreshFish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishable.HookFish:": {
        "prefix": "components.fishable:HookFish",
        "body": "components.fishable:HookFish(${1:fisherman})",
        "description": "参数:(fisherman)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishable.SetRespawnTime:": {
        "prefix": "components.fishable:SetRespawnTime",
        "body": "components.fishable:SetRespawnTime(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishable.Unfreeze:": {
        "prefix": "components.fishable:Unfreeze",
        "body": "components.fishable:Unfreeze()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishable.AddFish:": {
        "prefix": "components.fishable:AddFish",
        "body": "components.fishable:AddFish(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishable.Freeze:": {
        "prefix": "components.fishable:Freeze",
        "body": "components.fishable:Freeze()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishable.IsFrozenOver:": {
        "prefix": "components.fishable:IsFrozenOver",
        "body": "components.fishable:IsFrozenOver()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingnet.CastNet:": {
        "prefix": "components.fishingnet:CastNet",
        "body": "components.fishingnet:CastNet(${1:pos_x},${2:pos_z},${3:doer})",
        "description": "参数:(pos_x)<>[],(pos_z)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishingnetvisualizer.UpdateWhenOpening:": {
        "prefix": "components.fishingnetvisualizer:UpdateWhenOpening",
        "body": "components.fishingnetvisualizer:UpdateWhenOpening(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishingnetvisualizer.UpdateWhenMovingToTarget:": {
        "prefix": "components.fishingnetvisualizer:UpdateWhenMovingToTarget",
        "body": "components.fishingnetvisualizer:UpdateWhenMovingToTarget(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishingnetvisualizer.BeginCast:": {
        "prefix": "components.fishingnetvisualizer:BeginCast",
        "body": "components.fishingnetvisualizer:BeginCast(${1:thrower},${2:target_x},${3:target_z})",
        "description": "参数:(thrower)<>[],(target_x)<>[],(target_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishingnetvisualizer.BeginOpening:": {
        "prefix": "components.fishingnetvisualizer:BeginOpening",
        "body": "components.fishingnetvisualizer:BeginOpening()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingnetvisualizer.BeginRetrieving:": {
        "prefix": "components.fishingnetvisualizer:BeginRetrieving",
        "body": "components.fishingnetvisualizer:BeginRetrieving()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingnetvisualizer.UpdateWhenRetrieving:": {
        "prefix": "components.fishingnetvisualizer:UpdateWhenRetrieving",
        "body": "components.fishingnetvisualizer:UpdateWhenRetrieving(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishingnetvisualizer.BeginFinalPickup:": {
        "prefix": "components.fishingnetvisualizer:BeginFinalPickup",
        "body": "components.fishingnetvisualizer:BeginFinalPickup()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingnetvisualizer.DropItem:": {
        "prefix": "components.fishingnetvisualizer:DropItem",
        "body": "components.fishingnetvisualizer:DropItem(${1:item},${2:last_dir_x},${3:last_dir_z},${4:idx})",
        "description": "参数:(item)<>[],(last_dir_x)<>[],(last_dir_z)<>[],(idx)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishingnetvisualizer.CalculateY:": {
        "prefix": "components.fishingnetvisualizer:CalculateY",
        "body": "components.fishingnetvisualizer:CalculateY(${1:x},${2:x_span},${3:scale})",
        "description": "参数:(x)<>[],(x_span)<>[],(scale)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishingrod.Collect:": {
        "prefix": "components.fishingrod:Collect",
        "body": "components.fishingrod:Collect()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingrod.HasCaughtFish:": {
        "prefix": "components.fishingrod:HasCaughtFish",
        "body": "components.fishingrod:HasCaughtFish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingrod.CancelFishTask:": {
        "prefix": "components.fishingrod:CancelFishTask",
        "body": "components.fishingrod:CancelFishTask()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingrod.SetStrainTimes:": {
        "prefix": "components.fishingrod:SetStrainTimes",
        "body": "components.fishingrod:SetStrainTimes(${1:min},${2:max})",
        "description": "参数:(min)<>[],(max)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishingrod.GetDebugString:": {
        "prefix": "components.fishingrod:GetDebugString",
        "body": "components.fishingrod:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingrod.IsFishing:": {
        "prefix": "components.fishingrod:IsFishing",
        "body": "components.fishingrod:IsFishing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingrod.Release:": {
        "prefix": "components.fishingrod:Release",
        "body": "components.fishingrod:Release()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingrod.StartFishing:": {
        "prefix": "components.fishingrod:StartFishing",
        "body": "components.fishingrod:StartFishing(${1:target},${2:fisherman})",
        "description": "参数:(target)<>[],(fisherman)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishingrod.SetWaitTimes:": {
        "prefix": "components.fishingrod:SetWaitTimes",
        "body": "components.fishingrod:SetWaitTimes(${1:min},${2:max})",
        "description": "参数:(min)<>[],(max)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishingrod.StopFishing:": {
        "prefix": "components.fishingrod:StopFishing",
        "body": "components.fishingrod:StopFishing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingrod.HasHookedFish:": {
        "prefix": "components.fishingrod:HasHookedFish",
        "body": "components.fishingrod:HasHookedFish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingrod.OnUpdate:": {
        "prefix": "components.fishingrod:OnUpdate",
        "body": "components.fishingrod:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishingrod.Reel:": {
        "prefix": "components.fishingrod:Reel",
        "body": "components.fishingrod:Reel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingrod.WaitForFish:": {
        "prefix": "components.fishingrod:WaitForFish",
        "body": "components.fishingrod:WaitForFish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingrod.FishIsBiting:": {
        "prefix": "components.fishingrod:FishIsBiting",
        "body": "components.fishingrod:FishIsBiting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishingrod.Hook:": {
        "prefix": "components.fishingrod:Hook",
        "body": "components.fishingrod:Hook()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishschool.OnPreNet:": {
        "prefix": "components.fishschool:OnPreNet",
        "body": "components.fishschool:OnPreNet(${1:net})",
        "description": "参数:(net)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishschool.SetNettedPrefab:": {
        "prefix": "components.fishschool:SetNettedPrefab",
        "body": "components.fishschool:SetNettedPrefab(${1:fishing_net_prefab})",
        "description": "参数:(fishing_net_prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishschool.StartReplenish:": {
        "prefix": "components.fishschool:StartReplenish",
        "body": "components.fishschool:StartReplenish(${1:replenish_rate})",
        "description": "参数:(replenish_rate)<>[] 返回值:无返回值 贡献者:@"
    },
    "fishschool.Replenish:": {
        "prefix": "components.fishschool:Replenish",
        "body": "components.fishschool:Replenish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fishschool.StopReplenish:": {
        "prefix": "components.fishschool:StopReplenish",
        "body": "components.fishschool:StopReplenish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "floater.SetBankSwapOnFloat:": {
        "prefix": "components.floater:SetBankSwapOnFloat",
        "body": "components.floater:SetBankSwapOnFloat(${1:should_bank_swap},${2:float_index},${3:swap_data})",
        "description": "参数:(should_bank_swap)<>[],(float_index)<>[],(swap_data)<>[] 返回值:无返回值 贡献者:@"
    },
    "floater.Erode:": {
        "prefix": "components.floater:Erode",
        "body": "components.floater:Erode(${1:erode_time})",
        "description": "参数:(erode_time)<>[] 返回值:无返回值 贡献者:@"
    },
    "floater.SetSize:": {
        "prefix": "components.floater:SetSize",
        "body": "components.floater:SetSize(${1:size})",
        "description": "参数:(size)<>[] 返回值:无返回值 贡献者:@"
    },
    "floater.IsFloating:": {
        "prefix": "components.floater:IsFloating",
        "body": "components.floater:IsFloating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "floater.SetVerticalOffset:": {
        "prefix": "components.floater:SetVerticalOffset",
        "body": "components.floater:SetVerticalOffset(${1:offset})",
        "description": "参数:(offset)<>[] 返回值:无返回值 贡献者:@"
    },
    "floater.OnNoLongerLandedClient:": {
        "prefix": "components.floater:OnNoLongerLandedClient",
        "body": "components.floater:OnNoLongerLandedClient()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "floater.OnLandedClient:": {
        "prefix": "components.floater:OnLandedClient",
        "body": "components.floater:OnLandedClient()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "floater.SwitchToDefaultAnim:": {
        "prefix": "components.floater:SwitchToDefaultAnim",
        "body": "components.floater:SwitchToDefaultAnim(${1:force_switch})",
        "description": "参数:(force_switch)<>[] 返回值:无返回值 贡献者:@"
    },
    "floater.SetScale:": {
        "prefix": "components.floater:SetScale",
        "body": "components.floater:SetScale(${1:scale})",
        "description": "参数:(scale)<>[] 返回值:无返回值 贡献者:@"
    },
    "floater.ShouldShowEffect:": {
        "prefix": "components.floater:ShouldShowEffect",
        "body": "components.floater:ShouldShowEffect()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "floater.SetSwapData:": {
        "prefix": "components.floater:SetSwapData",
        "body": "components.floater:SetSwapData(${1:swap_data})",
        "description": "参数:(swap_data)<>[] 返回值:无返回值 贡献者:@"
    },
    "floater.OnNoLongerLandedServer:": {
        "prefix": "components.floater:OnNoLongerLandedServer",
        "body": "components.floater:OnNoLongerLandedServer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "floater.OnLandedServer:": {
        "prefix": "components.floater:OnLandedServer",
        "body": "components.floater:OnLandedServer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "floater.SwitchToFloatAnim:": {
        "prefix": "components.floater:SwitchToFloatAnim",
        "body": "components.floater:SwitchToFloatAnim()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "floater.AttachEffect:": {
        "prefix": "components.floater:AttachEffect",
        "body": "components.floater:AttachEffect(${1:effect})",
        "description": "参数:(effect)<>[] 返回值:无返回值 贡献者:@"
    },
    "floater.SetIsObstacle:": {
        "prefix": "components.floater:SetIsObstacle",
        "body": "components.floater:SetIsObstacle(${1:bool})",
        "description": "参数:(bool)<>[] 返回值:无返回值 贡献者:@"
    },
    "flotationdevice.IsEnabled:": {
        "prefix": "components.flotationdevice:IsEnabled",
        "body": "components.flotationdevice:IsEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "flotationdevice.OnPreventDrowningDamage:": {
        "prefix": "components.flotationdevice:OnPreventDrowningDamage",
        "body": "components.flotationdevice:OnPreventDrowningDamage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "focalpoint.StartFocusSource:": {
        "prefix": "components.focalpoint:StartFocusSource",
        "body": "components.focalpoint:StartFocusSource(${1:source},${2:id},${3:target},${4:minrange},${5:maxrange},${6:priority},${7:updater})",
        "description": "参数:(source)<>[],(id)<>[],(target)<>[],(minrange)<>[],(maxrange)<>[],(priority)<>[],(updater)<>[] 返回值:无返回值 贡献者:@"
    },
    "focalpoint.Reset:": {
        "prefix": "components.focalpoint:Reset",
        "body": "components.focalpoint:Reset(${1:no_snap})",
        "description": "参数:(no_snap)<>[] 返回值:无返回值 贡献者:@"
    },
    "focalpoint.CameraUpdate:": {
        "prefix": "components.focalpoint:CameraUpdate",
        "body": "components.focalpoint:CameraUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "focalpoint.GetDebugString:": {
        "prefix": "components.focalpoint:GetDebugString",
        "body": "components.focalpoint:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "focalpoint.RemoveAllFocusSources:": {
        "prefix": "components.focalpoint:RemoveAllFocusSources",
        "body": "components.focalpoint:RemoveAllFocusSources(${1:no_snap})",
        "description": "参数:(no_snap)<>[] 返回值:无返回值 贡献者:@"
    },
    "focalpoint.StopFocusSource:": {
        "prefix": "components.focalpoint:StopFocusSource",
        "body": "components.focalpoint:StopFocusSource(${1:source},${2:id})",
        "description": "参数:(source)<>[],(id)<>[] 返回值:无返回值 贡献者:@"
    },
    "focalpoint.PushTempFocus:": {
        "prefix": "components.focalpoint:PushTempFocus",
        "body": "components.focalpoint:PushTempFocus(${1:target},${2:minrange},${3:maxrange},${4:priority})",
        "description": "参数:(target)<>[],(minrange)<>[],(maxrange)<>[],(priority)<>[] 返回值:无返回值 贡献者:@"
    },
    "follower.StartLeashing:": {
        "prefix": "components.follower:StartLeashing",
        "body": "components.follower:StartLeashing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "follower.OnSave:": {
        "prefix": "components.follower:OnSave",
        "body": "components.follower:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "follower.LoseLeaderOnAttacked:": {
        "prefix": "components.follower:LoseLeaderOnAttacked",
        "body": "components.follower:LoseLeaderOnAttacked()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "follower.StopFollowing:": {
        "prefix": "components.follower:StopFollowing",
        "body": "components.follower:StopFollowing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "follower.OnRemoveFromEntity:": {
        "prefix": "components.follower:OnRemoveFromEntity",
        "body": "components.follower:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "follower.ClearCachedPlayerLeader:": {
        "prefix": "components.follower:ClearCachedPlayerLeader",
        "body": "components.follower:ClearCachedPlayerLeader()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "follower.StopLeashing:": {
        "prefix": "components.follower:StopLeashing",
        "body": "components.follower:StopLeashing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "follower.GetLoyaltyPercent:": {
        "prefix": "components.follower:GetLoyaltyPercent",
        "body": "components.follower:GetLoyaltyPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "follower.OnLoad:": {
        "prefix": "components.follower:OnLoad",
        "body": "components.follower:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "follower.GetDebugString:": {
        "prefix": "components.follower:GetDebugString",
        "body": "components.follower:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "follower.IsLeaderSame:": {
        "prefix": "components.follower:IsLeaderSame",
        "body": "components.follower:IsLeaderSame(${1:otherfollower})",
        "description": "参数:(otherfollower)<>[] 返回值:无返回值 贡献者:@"
    },
    "follower.SetLeader:": {
        "prefix": "components.follower:SetLeader",
        "body": "components.follower:SetLeader(${1:new_leader})",
        "description": "参数:(new_leader)<>[] 返回值:无返回值 贡献者:@"
    },
    "follower.IsNearLeader:": {
        "prefix": "components.follower:IsNearLeader",
        "body": "components.follower:IsNearLeader(${1:dist})",
        "description": "参数:(dist)<>[] 返回值:无返回值 贡献者:@"
    },
    "follower.CachePlayerLeader:": {
        "prefix": "components.follower:CachePlayerLeader",
        "body": "components.follower:CachePlayerLeader(${1:userid},${2:timeleft})",
        "description": "参数:(userid)<>[],(timeleft)<>[] 返回值:无返回值 贡献者:@"
    },
    "follower.GetLeader:": {
        "prefix": "components.follower:GetLeader",
        "body": "components.follower:GetLeader()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "follower.LongUpdate:": {
        "prefix": "components.follower:LongUpdate",
        "body": "components.follower:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "follower.AddLoyaltyTime:": {
        "prefix": "components.follower:AddLoyaltyTime",
        "body": "components.follower:AddLoyaltyTime(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "follower.KeepLeaderOnAttacked:": {
        "prefix": "components.follower:KeepLeaderOnAttacked",
        "body": "components.follower:KeepLeaderOnAttacked()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "follower.CancelLoyaltyTask:": {
        "prefix": "components.follower:CancelLoyaltyTask",
        "body": "components.follower:CancelLoyaltyTask()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "followerherder.CanHerd:": {
        "prefix": "components.followerherder:CanHerd",
        "body": "components.followerherder:CanHerd(${1:leader})",
        "description": "参数:(leader)<>[] 返回值:无返回值 贡献者:@"
    },
    "followerherder.Herd:": {
        "prefix": "components.followerherder:Herd",
        "body": "components.followerherder:Herd(${1:leader})",
        "description": "参数:(leader)<>[] 返回值:无返回值 贡献者:@"
    },
    "followerherder.SetCanHerdFn:": {
        "prefix": "components.followerherder:SetCanHerdFn",
        "body": "components.followerherder:SetCanHerdFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "followerherder.SetOnHerdFn:": {
        "prefix": "components.followerherder:SetOnHerdFn",
        "body": "components.followerherder:SetOnHerdFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "followerherder.SetUseAmount:": {
        "prefix": "components.followerherder:SetUseAmount",
        "body": "components.followerherder:SetUseAmount(${1:use_amount})",
        "description": "参数:(use_amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodaffinity.RemovePrefabAffinity:": {
        "prefix": "components.foodaffinity:RemovePrefabAffinity",
        "body": "components.foodaffinity:RemovePrefabAffinity(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodaffinity.SortAffinitiesByBonus:": {
        "prefix": "components.foodaffinity:SortAffinitiesByBonus",
        "body": "components.foodaffinity:SortAffinitiesByBonus(${1:affinities})",
        "description": "参数:(affinities)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodaffinity.AddTagAffinity:": {
        "prefix": "components.foodaffinity:AddTagAffinity",
        "body": "components.foodaffinity:AddTagAffinity(${1:tag},${2:bonus})",
        "description": "参数:(tag)<>[],(bonus)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodaffinity.AddPrefabAffinity:": {
        "prefix": "components.foodaffinity:AddPrefabAffinity",
        "body": "components.foodaffinity:AddPrefabAffinity(${1:prefab},${2:bonus})",
        "description": "参数:(prefab)<>[],(bonus)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodaffinity.RemoveTagAffinity:": {
        "prefix": "components.foodaffinity:RemoveTagAffinity",
        "body": "components.foodaffinity:RemoveTagAffinity(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodaffinity.AddFoodtypeAffinity:": {
        "prefix": "components.foodaffinity:AddFoodtypeAffinity",
        "body": "components.foodaffinity:AddFoodtypeAffinity(${1:foodtype},${2:bonus})",
        "description": "参数:(foodtype)<>[],(bonus)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodaffinity.HasPrefabAffinity:": {
        "prefix": "components.foodaffinity:HasPrefabAffinity",
        "body": "components.foodaffinity:HasPrefabAffinity(${1:food})",
        "description": "参数:(food)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodaffinity.GetFoodBasePrefab:": {
        "prefix": "components.foodaffinity:GetFoodBasePrefab",
        "body": "components.foodaffinity:GetFoodBasePrefab(${1:food})",
        "description": "参数:(food)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodaffinity.GetAffinity:": {
        "prefix": "components.foodaffinity:GetAffinity",
        "body": "components.foodaffinity:GetAffinity(${1:food})",
        "description": "参数:(food)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodaffinity.HasAffinity:": {
        "prefix": "components.foodaffinity:HasAffinity",
        "body": "components.foodaffinity:HasAffinity(${1:food})",
        "description": "参数:(food)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodaffinity.RemoveFoodtypeAffinity:": {
        "prefix": "components.foodaffinity:RemoveFoodtypeAffinity",
        "body": "components.foodaffinity:RemoveFoodtypeAffinity(${1:foodtype})",
        "description": "参数:(foodtype)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodmemory.OnLoad:": {
        "prefix": "components.foodmemory:OnLoad",
        "body": "components.foodmemory:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodmemory.RememberFood:": {
        "prefix": "components.foodmemory:RememberFood",
        "body": "components.foodmemory:RememberFood(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodmemory.OnSave:": {
        "prefix": "components.foodmemory:OnSave",
        "body": "components.foodmemory:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "foodmemory.SetMultipliers:": {
        "prefix": "components.foodmemory:SetMultipliers",
        "body": "components.foodmemory:SetMultipliers(${1:mults})",
        "description": "参数:(mults)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodmemory.GetFoodMultiplier:": {
        "prefix": "components.foodmemory:GetFoodMultiplier",
        "body": "components.foodmemory:GetFoodMultiplier(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodmemory.SetDuration:": {
        "prefix": "components.foodmemory:SetDuration",
        "body": "components.foodmemory:SetDuration(${1:duration})",
        "description": "参数:(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "foodmemory.OnRemoveFromEntity:": {
        "prefix": "components.foodmemory:OnRemoveFromEntity",
        "body": "components.foodmemory:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "foodmemory.GetMemoryCount:": {
        "prefix": "components.foodmemory:GetMemoryCount",
        "body": "components.foodmemory:GetMemoryCount(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.IncrementPowerLevel:": {
        "prefix": "components.forestdaywalkerspawner:IncrementPowerLevel",
        "body": "components.forestdaywalkerspawner:IncrementPowerLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.OnLoad:": {
        "prefix": "components.forestdaywalkerspawner:OnLoad",
        "body": "components.forestdaywalkerspawner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.WatchDaywalker:": {
        "prefix": "components.forestdaywalkerspawner:WatchDaywalker",
        "body": "components.forestdaywalkerspawner:WatchDaywalker(${1:daywalker})",
        "description": "参数:(daywalker)<>[] 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.OnSave:": {
        "prefix": "components.forestdaywalkerspawner:OnSave",
        "body": "components.forestdaywalkerspawner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.ShouldShakeJunk:": {
        "prefix": "components.forestdaywalkerspawner:ShouldShakeJunk",
        "body": "components.forestdaywalkerspawner:ShouldShakeJunk()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.OnPostInit:": {
        "prefix": "components.forestdaywalkerspawner:OnPostInit",
        "body": "components.forestdaywalkerspawner:OnPostInit()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.LoadPostPass:": {
        "prefix": "components.forestdaywalkerspawner:LoadPostPass",
        "body": "components.forestdaywalkerspawner:LoadPostPass(${1:ents},${2:data})",
        "description": "参数:(ents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.CanSpawnFromJunk:": {
        "prefix": "components.forestdaywalkerspawner:CanSpawnFromJunk",
        "body": "components.forestdaywalkerspawner:CanSpawnFromJunk()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.GetPowerLevel:": {
        "prefix": "components.forestdaywalkerspawner:GetPowerLevel",
        "body": "components.forestdaywalkerspawner:GetPowerLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.HasDaywalker:": {
        "prefix": "components.forestdaywalkerspawner:HasDaywalker",
        "body": "components.forestdaywalkerspawner:HasDaywalker()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.TryToSetDayWalkerJunkPile:": {
        "prefix": "components.forestdaywalkerspawner:TryToSetDayWalkerJunkPile",
        "body": "components.forestdaywalkerspawner:TryToSetDayWalkerJunkPile()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "forestdaywalkerspawner.OnDayChange:": {
        "prefix": "components.forestdaywalkerspawner:OnDayChange",
        "body": "components.forestdaywalkerspawner:OnDayChange()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "forgerepair.SetRepairMaterial:": {
        "prefix": "components.forgerepair:SetRepairMaterial",
        "body": "components.forgerepair:SetRepairMaterial(${1:material})",
        "description": "参数:(material)<>[] 返回值:无返回值 贡献者:@"
    },
    "forgerepair.SetOnRepaired:": {
        "prefix": "components.forgerepair:SetOnRepaired",
        "body": "components.forgerepair:SetOnRepaired(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "forgerepair.OnRepair:": {
        "prefix": "components.forgerepair:OnRepair",
        "body": "components.forgerepair:OnRepair(${1:target},${2:doer})",
        "description": "参数:(target)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "forgerepairable.SetOnRepaired:": {
        "prefix": "components.forgerepairable:SetOnRepaired",
        "body": "components.forgerepairable:SetOnRepaired(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "forgerepairable.SetRepairMaterial:": {
        "prefix": "components.forgerepairable:SetRepairMaterial",
        "body": "components.forgerepairable:SetRepairMaterial(${1:material})",
        "description": "参数:(material)<>[] 返回值:无返回值 贡献者:@"
    },
    "forgerepairable.Repair:": {
        "prefix": "components.forgerepairable:Repair",
        "body": "components.forgerepairable:Repair(${1:doer},${2:repair_item})",
        "description": "参数:(doer)<>[],(repair_item)<>[] 返回值:无返回值 贡献者:@"
    },
    "forgerepairable.OnRemoveFromEntity:": {
        "prefix": "components.forgerepairable:OnRemoveFromEntity",
        "body": "components.forgerepairable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "forgerepairable.SetRepairable:": {
        "prefix": "components.forgerepairable:SetRepairable",
        "body": "components.forgerepairable:SetRepairable(${1:repairable})",
        "description": "参数:(repairable)<>[] 返回值:无返回值 贡献者:@"
    },
    "formationfollower.OnUpdate:": {
        "prefix": "components.formationfollower:OnUpdate",
        "body": "components.formationfollower:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "formationfollower.LeaveFormation:": {
        "prefix": "components.formationfollower:LeaveFormation",
        "body": "components.formationfollower:LeaveFormation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationfollower.StopUpdating:": {
        "prefix": "components.formationfollower:StopUpdating",
        "body": "components.formationfollower:StopUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationfollower.OnEntitySleep:": {
        "prefix": "components.formationfollower:OnEntitySleep",
        "body": "components.formationfollower:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationfollower.GetDebugString:": {
        "prefix": "components.formationfollower:GetDebugString",
        "body": "components.formationfollower:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationfollower.StartUpdating:": {
        "prefix": "components.formationfollower:StartUpdating",
        "body": "components.formationfollower:StartUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationfollower.OnEntityWake:": {
        "prefix": "components.formationfollower:OnEntityWake",
        "body": "components.formationfollower:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationfollower.SearchForFormation:": {
        "prefix": "components.formationfollower:SearchForFormation",
        "body": "components.formationfollower:SearchForFormation(${1:override_find_entities})",
        "description": "参数:(override_find_entities)<>[] 返回值:无返回值 贡献者:@"
    },
    "formationleader.SetUp:": {
        "prefix": "components.formationleader:SetUp",
        "body": "components.formationleader:SetUp(${1:target},${2:first_member})",
        "description": "参数:(target)<>[],(first_member)<>[] 返回值:无返回值 贡献者:@"
    },
    "formationleader.IsFormationEmpty:": {
        "prefix": "components.formationleader:IsFormationEmpty",
        "body": "components.formationleader:IsFormationEmpty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationleader.GetFormationSize:": {
        "prefix": "components.formationleader:GetFormationSize",
        "body": "components.formationleader:GetFormationSize()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationleader.ValidateFormation:": {
        "prefix": "components.formationleader:ValidateFormation",
        "body": "components.formationleader:ValidateFormation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationleader.ValidMember:": {
        "prefix": "components.formationleader:ValidMember",
        "body": "components.formationleader:ValidMember(${1:member})",
        "description": "参数:(member)<>[] 返回值:无返回值 贡献者:@"
    },
    "formationleader.OnUpdate:": {
        "prefix": "components.formationleader:OnUpdate",
        "body": "components.formationleader:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "formationleader.GetTheta:": {
        "prefix": "components.formationleader:GetTheta",
        "body": "components.formationleader:GetTheta(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "formationleader.GetFormationPositions:": {
        "prefix": "components.formationleader:GetFormationPositions",
        "body": "components.formationleader:GetFormationPositions()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationleader.OrganizeFormations:": {
        "prefix": "components.formationleader:OrganizeFormations",
        "body": "components.formationleader:OrganizeFormations()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationleader.NewFormationMember:": {
        "prefix": "components.formationleader:NewFormationMember",
        "body": "components.formationleader:NewFormationMember(${1:member})",
        "description": "参数:(member)<>[] 返回值:无返回值 贡献者:@"
    },
    "formationleader.FormationSizeControl:": {
        "prefix": "components.formationleader:FormationSizeControl",
        "body": "components.formationleader:FormationSizeControl()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationleader.OnLostFormationMember:": {
        "prefix": "components.formationleader:OnLostFormationMember",
        "body": "components.formationleader:OnLostFormationMember(${1:member})",
        "description": "参数:(member)<>[] 返回值:无返回值 贡献者:@"
    },
    "formationleader.IsFormationFull:": {
        "prefix": "components.formationleader:IsFormationFull",
        "body": "components.formationleader:IsFormationFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "formationleader.DisbandFormation:": {
        "prefix": "components.formationleader:DisbandFormation",
        "body": "components.formationleader:DisbandFormation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "freezable.AddShatterFX:": {
        "prefix": "components.freezable:AddShatterFX",
        "body": "components.freezable:AddShatterFX(${1:prefab},${2:offset},${3:followsymbol})",
        "description": "参数:(prefab)<>[],(offset)<>[],(followsymbol)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.SetExtraResist:": {
        "prefix": "components.freezable:SetExtraResist",
        "body": "components.freezable:SetExtraResist(${1:resist})",
        "description": "参数:(resist)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.SetShatterFXLevel:": {
        "prefix": "components.freezable:SetShatterFXLevel",
        "body": "components.freezable:SetShatterFXLevel(${1:level},${2:percent})",
        "description": "参数:(level)<>[],(percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.OnRemoveFromEntity:": {
        "prefix": "components.freezable:OnRemoveFromEntity",
        "body": "components.freezable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "freezable.SetResistance:": {
        "prefix": "components.freezable:SetResistance",
        "body": "components.freezable:SetResistance(${1:resist})",
        "description": "参数:(resist)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.Thaw:": {
        "prefix": "components.freezable:Thaw",
        "body": "components.freezable:Thaw(${1:thawtime})",
        "description": "参数:(thawtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.GetTimeToWearOff:": {
        "prefix": "components.freezable:GetTimeToWearOff",
        "body": "components.freezable:GetTimeToWearOff()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "freezable.OnLoad:": {
        "prefix": "components.freezable:OnLoad",
        "body": "components.freezable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.OnSave:": {
        "prefix": "components.freezable:OnSave",
        "body": "components.freezable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "freezable.IsFrozen:": {
        "prefix": "components.freezable:IsFrozen",
        "body": "components.freezable:IsFrozen()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "freezable.SetRedirectFn:": {
        "prefix": "components.freezable:SetRedirectFn",
        "body": "components.freezable:SetRedirectFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.GetDebugString:": {
        "prefix": "components.freezable:GetDebugString",
        "body": "components.freezable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "freezable.ResolveResistance:": {
        "prefix": "components.freezable:ResolveResistance",
        "body": "components.freezable:ResolveResistance()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "freezable.StartWearingOff:": {
        "prefix": "components.freezable:StartWearingOff",
        "body": "components.freezable:StartWearingOff(${1:wearofftime})",
        "description": "参数:(wearofftime)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.SetDefaultWearOffTime:": {
        "prefix": "components.freezable:SetDefaultWearOffTime",
        "body": "components.freezable:SetDefaultWearOffTime(${1:wearofftime})",
        "description": "参数:(wearofftime)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.Freeze:": {
        "prefix": "components.freezable:Freeze",
        "body": "components.freezable:Freeze(${1:freezetime})",
        "description": "参数:(freezetime)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.Reset:": {
        "prefix": "components.freezable:Reset",
        "body": "components.freezable:Reset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "freezable.Unfreeze:": {
        "prefix": "components.freezable:Unfreeze",
        "body": "components.freezable:Unfreeze()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "freezable.ResolveWearOffTime:": {
        "prefix": "components.freezable:ResolveWearOffTime",
        "body": "components.freezable:ResolveWearOffTime(${1:t})",
        "description": "参数:(t)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.UpdateTint:": {
        "prefix": "components.freezable:UpdateTint",
        "body": "components.freezable:UpdateTint()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "freezable.AddColdness:": {
        "prefix": "components.freezable:AddColdness",
        "body": "components.freezable:AddColdness(${1:coldness},${2:freezetime},${3:nofreeze})",
        "description": "参数:(coldness)<>[],(freezetime)<>[],(nofreeze)<>[] 返回值:无返回值 贡献者:@"
    },
    "freezable.IsThawing:": {
        "prefix": "components.freezable:IsThawing",
        "body": "components.freezable:IsThawing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "freezable.SpawnShatterFX:": {
        "prefix": "components.freezable:SpawnShatterFX",
        "body": "components.freezable:SpawnShatterFX()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "friendlevels.SetLevelRewards:": {
        "prefix": "components.friendlevels:SetLevelRewards",
        "body": "components.friendlevels:SetLevelRewards(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "friendlevels.GetMaxLevel:": {
        "prefix": "components.friendlevels:GetMaxLevel",
        "body": "components.friendlevels:GetMaxLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "friendlevels.DoRewards:": {
        "prefix": "components.friendlevels:DoRewards",
        "body": "components.friendlevels:DoRewards(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "friendlevels.SetFriendlyTasks:": {
        "prefix": "components.friendlevels:SetFriendlyTasks",
        "body": "components.friendlevels:SetFriendlyTasks(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "friendlevels.GetDebugString:": {
        "prefix": "components.friendlevels:GetDebugString",
        "body": "components.friendlevels:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "friendlevels.LoadPostPass:": {
        "prefix": "components.friendlevels:LoadPostPass",
        "body": "components.friendlevels:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "friendlevels.CompleteTask:": {
        "prefix": "components.friendlevels:CompleteTask",
        "body": "components.friendlevels:CompleteTask(${1:task},${2:doer})",
        "description": "参数:(task)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "friendlevels.OnLoad:": {
        "prefix": "components.friendlevels:OnLoad",
        "body": "components.friendlevels:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "friendlevels.OnSave:": {
        "prefix": "components.friendlevels:OnSave",
        "body": "components.friendlevels:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "friendlevels.GetLevel:": {
        "prefix": "components.friendlevels:GetLevel",
        "body": "components.friendlevels:GetLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "friendlevels.SetDefaultRewards:": {
        "prefix": "components.friendlevels:SetDefaultRewards",
        "body": "components.friendlevels:SetDefaultRewards(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "friendlevels.Enable:": {
        "prefix": "components.friendlevels:Enable",
        "body": "components.friendlevels:Enable(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "frostybreather.EmitOnce:": {
        "prefix": "components.frostybreather:EmitOnce",
        "body": "components.frostybreather:EmitOnce()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "frostybreather.OnTemperatureChanged:": {
        "prefix": "components.frostybreather:OnTemperatureChanged",
        "body": "components.frostybreather:OnTemperatureChanged(${1:temperature})",
        "description": "参数:(temperature)<>[] 返回值:无返回值 贡献者:@"
    },
    "frostybreather.Disable:": {
        "prefix": "components.frostybreather:Disable",
        "body": "components.frostybreather:Disable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "frostybreather.ForceBreathOff:": {
        "prefix": "components.frostybreather:ForceBreathOff",
        "body": "components.frostybreather:ForceBreathOff()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "frostybreather.ForceBreathOn:": {
        "prefix": "components.frostybreather:ForceBreathOn",
        "body": "components.frostybreather:ForceBreathOn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "frostybreather.OnRemoveFromEntity:": {
        "prefix": "components.frostybreather:OnRemoveFromEntity",
        "body": "components.frostybreather:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "frostybreather.StopBreath:": {
        "prefix": "components.frostybreather:StopBreath",
        "body": "components.frostybreather:StopBreath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "frostybreather.SetOffsetFn:": {
        "prefix": "components.frostybreather:SetOffsetFn",
        "body": "components.frostybreather:SetOffsetFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "frostybreather.GetOffset:": {
        "prefix": "components.frostybreather:GetOffset",
        "body": "components.frostybreather:GetOffset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "frostybreather.SetOffset:": {
        "prefix": "components.frostybreather:SetOffset",
        "body": "components.frostybreather:SetOffset(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "frostybreather.StartBreath:": {
        "prefix": "components.frostybreather:StartBreath",
        "body": "components.frostybreather:StartBreath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "frostybreather.Enable:": {
        "prefix": "components.frostybreather:Enable",
        "body": "components.frostybreather:Enable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fuel.SetOnTakenFn:": {
        "prefix": "components.fuel:SetOnTakenFn",
        "body": "components.fuel:SetOnTakenFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fuel.OnRemoveFromEntity:": {
        "prefix": "components.fuel:OnRemoveFromEntity",
        "body": "components.fuel:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fuel.Taken:": {
        "prefix": "components.fuel:Taken",
        "body": "components.fuel:Taken(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.DoUpdate:": {
        "prefix": "components.fueled:DoUpdate",
        "body": "components.fueled:DoUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.OnSave:": {
        "prefix": "components.fueled:OnSave",
        "body": "components.fueled:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueled.StartConsuming:": {
        "prefix": "components.fueled:StartConsuming",
        "body": "components.fueled:StartConsuming()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueled.StopConsuming:": {
        "prefix": "components.fueled:StopConsuming",
        "body": "components.fueled:StopConsuming()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueled.OnRemoveFromEntity:": {
        "prefix": "components.fueled:OnRemoveFromEntity",
        "body": "components.fueled:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueled.DoDelta:": {
        "prefix": "components.fueled:DoDelta",
        "body": "components.fueled:DoDelta(${1:amount},${2:doer})",
        "description": "参数:(amount)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.MakeEmpty:": {
        "prefix": "components.fueled:MakeEmpty",
        "body": "components.fueled:MakeEmpty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueled.SetUpdateFn:": {
        "prefix": "components.fueled:SetUpdateFn",
        "body": "components.fueled:SetUpdateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.InitializeFuelLevel:": {
        "prefix": "components.fueled:InitializeFuelLevel",
        "body": "components.fueled:InitializeFuelLevel(${1:fuel})",
        "description": "参数:(fuel)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.SetMultiplierFn:": {
        "prefix": "components.fueled:SetMultiplierFn",
        "body": "components.fueled:SetMultiplierFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.OnWallUpdate:": {
        "prefix": "components.fueled:OnWallUpdate",
        "body": "components.fueled:OnWallUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.SetFirstPeriod:": {
        "prefix": "components.fueled:SetFirstPeriod",
        "body": "components.fueled:SetFirstPeriod(${1:firstperiod},${2:firstperiodfull})",
        "description": "参数:(firstperiod)<>[],(firstperiodfull)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.SetPercent:": {
        "prefix": "components.fueled:SetPercent",
        "body": "components.fueled:SetPercent(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.SetCanTakeFuelItemFn:": {
        "prefix": "components.fueled:SetCanTakeFuelItemFn",
        "body": "components.fueled:SetCanTakeFuelItemFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.GetSectionPercent:": {
        "prefix": "components.fueled:GetSectionPercent",
        "body": "components.fueled:GetSectionPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueled.IsEmpty:": {
        "prefix": "components.fueled:IsEmpty",
        "body": "components.fueled:IsEmpty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueled.AddThreshold:": {
        "prefix": "components.fueled:AddThreshold",
        "body": "components.fueled:AddThreshold(${1:percent},${2:fn})",
        "description": "参数:(percent)<>[],(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.OnLoad:": {
        "prefix": "components.fueled:OnLoad",
        "body": "components.fueled:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.GetDebugString:": {
        "prefix": "components.fueled:GetDebugString",
        "body": "components.fueled:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueled.SetTakeFuelFn:": {
        "prefix": "components.fueled:SetTakeFuelFn",
        "body": "components.fueled:SetTakeFuelFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.SetTakeFuelItemFn:": {
        "prefix": "components.fueled:SetTakeFuelItemFn",
        "body": "components.fueled:SetTakeFuelItemFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.GetCurrentSection:": {
        "prefix": "components.fueled:GetCurrentSection",
        "body": "components.fueled:GetCurrentSection()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueled.SetDepletedFn:": {
        "prefix": "components.fueled:SetDepletedFn",
        "body": "components.fueled:SetDepletedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.CanAcceptFuelItem:": {
        "prefix": "components.fueled:CanAcceptFuelItem",
        "body": "components.fueled:CanAcceptFuelItem(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.SetSectionCallback:": {
        "prefix": "components.fueled:SetSectionCallback",
        "body": "components.fueled:SetSectionCallback(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.TakeFuelItem:": {
        "prefix": "components.fueled:TakeFuelItem",
        "body": "components.fueled:TakeFuelItem(${1:item},${2:doer})",
        "description": "参数:(item)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.GetPercent:": {
        "prefix": "components.fueled:GetPercent",
        "body": "components.fueled:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueled.ChangeSection:": {
        "prefix": "components.fueled:ChangeSection",
        "body": "components.fueled:ChangeSection(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.SetSections:": {
        "prefix": "components.fueled:SetSections",
        "body": "components.fueled:SetSections(${1:num})",
        "description": "参数:(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueled.IsFull:": {
        "prefix": "components.fueled:IsFull",
        "body": "components.fueled:IsFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueler.SetOnTakenFn:": {
        "prefix": "components.fueler:SetOnTakenFn",
        "body": "components.fueler:SetOnTakenFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fueler.OnRemoveFromEntity:": {
        "prefix": "components.fueler:OnRemoveFromEntity",
        "body": "components.fueler:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "fueler.Taken:": {
        "prefix": "components.fueler:Taken",
        "body": "components.fueler:Taken(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "fuelmaster.SetBonusMult:": {
        "prefix": "components.fuelmaster:SetBonusMult",
        "body": "components.fuelmaster:SetBonusMult(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "fuelmaster.SetBonusFn:": {
        "prefix": "components.fuelmaster:SetBonusFn",
        "body": "components.fuelmaster:SetBonusFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "fuelmaster.GetBonusMult:": {
        "prefix": "components.fuelmaster:GetBonusMult",
        "body": "components.fuelmaster:GetBonusMult(${1:item},${2:target})",
        "description": "参数:(item)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "furnituredecor.PutOnFurniture:": {
        "prefix": "components.furnituredecor:PutOnFurniture",
        "body": "components.furnituredecor:PutOnFurniture(${1:furniture})",
        "description": "参数:(furniture)<>[] 返回值:无返回值 贡献者:@"
    },
    "furnituredecor.OnRemoveFromEntity:": {
        "prefix": "components.furnituredecor:OnRemoveFromEntity",
        "body": "components.furnituredecor:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "furnituredecor.SetEnabled:": {
        "prefix": "components.furnituredecor:SetEnabled",
        "body": "components.furnituredecor:SetEnabled(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "furnituredecortaker.GetDebugString:": {
        "prefix": "components.furnituredecortaker:GetDebugString",
        "body": "components.furnituredecortaker:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "furnituredecortaker.LoadPostPass:": {
        "prefix": "components.furnituredecortaker:LoadPostPass",
        "body": "components.furnituredecortaker:LoadPostPass(${1:ents},${2:data})",
        "description": "参数:(ents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "furnituredecortaker.OnSave:": {
        "prefix": "components.furnituredecortaker:OnSave",
        "body": "components.furnituredecortaker:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "furnituredecortaker.SetEnabled:": {
        "prefix": "components.furnituredecortaker:SetEnabled",
        "body": "components.furnituredecortaker:SetEnabled(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "furnituredecortaker.AbleToAcceptDecor:": {
        "prefix": "components.furnituredecortaker:AbleToAcceptDecor",
        "body": "components.furnituredecortaker:AbleToAcceptDecor(${1:item},${2:giver})",
        "description": "参数:(item)<>[],(giver)<>[] 返回值:无返回值 贡献者:@"
    },
    "furnituredecortaker.TakeItem:": {
        "prefix": "components.furnituredecortaker:TakeItem",
        "body": "components.furnituredecortaker:TakeItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "furnituredecortaker.OnRemoveFromEntity:": {
        "prefix": "components.furnituredecortaker:OnRemoveFromEntity",
        "body": "components.furnituredecortaker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "furnituredecortaker.AcceptDecor:": {
        "prefix": "components.furnituredecortaker:AcceptDecor",
        "body": "components.furnituredecortaker:AcceptDecor(${1:item},${2:giver})",
        "description": "参数:(item)<>[],(giver)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.OnSave:": {
        "prefix": "components.ghostlybond:OnSave",
        "body": "components.ghostlybond:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.LongUpdate:": {
        "prefix": "components.ghostlybond:LongUpdate",
        "body": "components.ghostlybond:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.PauseBonding:": {
        "prefix": "components.ghostlybond:PauseBonding",
        "body": "components.ghostlybond:PauseBonding()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.LoadPostPass:": {
        "prefix": "components.ghostlybond:LoadPostPass",
        "body": "components.ghostlybond:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.Recall:": {
        "prefix": "components.ghostlybond:Recall",
        "body": "components.ghostlybond:Recall(${1:was_killed})",
        "description": "参数:(was_killed)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.RecallComplete:": {
        "prefix": "components.ghostlybond:RecallComplete",
        "body": "components.ghostlybond:RecallComplete()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.SpawnGhost:": {
        "prefix": "components.ghostlybond:SpawnGhost",
        "body": "components.ghostlybond:SpawnGhost()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.OnRemoveEntity:": {
        "prefix": "components.ghostlybond:OnRemoveEntity",
        "body": "components.ghostlybond:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.ResumeBonding:": {
        "prefix": "components.ghostlybond:ResumeBonding",
        "body": "components.ghostlybond:ResumeBonding()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.SetBondLevel:": {
        "prefix": "components.ghostlybond:SetBondLevel",
        "body": "components.ghostlybond:SetBondLevel(${1:level},${2:time},${3:isloading})",
        "description": "参数:(level)<>[],(time)<>[],(isloading)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.ChangeBehaviour:": {
        "prefix": "components.ghostlybond:ChangeBehaviour",
        "body": "components.ghostlybond:ChangeBehaviour()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.GetDebugString:": {
        "prefix": "components.ghostlybond:GetDebugString",
        "body": "components.ghostlybond:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.SummonComplete:": {
        "prefix": "components.ghostlybond:SummonComplete",
        "body": "components.ghostlybond:SummonComplete()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.OnUpdate:": {
        "prefix": "components.ghostlybond:OnUpdate",
        "body": "components.ghostlybond:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.Summon:": {
        "prefix": "components.ghostlybond:Summon",
        "body": "components.ghostlybond:Summon(${1:summoningitem})",
        "description": "参数:(summoningitem)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.Init:": {
        "prefix": "components.ghostlybond:Init",
        "body": "components.ghostlybond:Init(${1:ghost_prefab},${2:bond_levelup_time})",
        "description": "参数:(ghost_prefab)<>[],(bond_levelup_time)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.SetBondTimeMultiplier:": {
        "prefix": "components.ghostlybond:SetBondTimeMultiplier",
        "body": "components.ghostlybond:SetBondTimeMultiplier(${1:src},${2:mult},${3:key})",
        "description": "参数:(src)<>[],(mult)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlybond.OnLoad:": {
        "prefix": "components.ghostlybond:OnLoad",
        "body": "components.ghostlybond:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlyelixir.OnRemoveFromEntity:": {
        "prefix": "components.ghostlyelixir:OnRemoveFromEntity",
        "body": "components.ghostlyelixir:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ghostlyelixir.Apply:": {
        "prefix": "components.ghostlyelixir:Apply",
        "body": "components.ghostlyelixir:Apply(${1:doer},${2:target})",
        "description": "参数:(doer)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlyelixirable.GetApplyToTarget:": {
        "prefix": "components.ghostlyelixirable:GetApplyToTarget",
        "body": "components.ghostlyelixirable:GetApplyToTarget(${1:doer},${2:elixir})",
        "description": "参数:(doer)<>[],(elixir)<>[] 返回值:无返回值 贡献者:@"
    },
    "ghostlyelixirable.OnRemoveFromEntity:": {
        "prefix": "components.ghostlyelixirable:OnRemoveFromEntity",
        "body": "components.ghostlyelixirable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "giftreceiver.RefreshGiftCount:": {
        "prefix": "components.giftreceiver:RefreshGiftCount",
        "body": "components.giftreceiver:RefreshGiftCount()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "giftreceiver.SetGiftMachine:": {
        "prefix": "components.giftreceiver:SetGiftMachine",
        "body": "components.giftreceiver:SetGiftMachine(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "giftreceiver.OpenNextGift:": {
        "prefix": "components.giftreceiver:OpenNextGift",
        "body": "components.giftreceiver:OpenNextGift()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "giftreceiver.OnStartOpenGift:": {
        "prefix": "components.giftreceiver:OnStartOpenGift",
        "body": "components.giftreceiver:OnStartOpenGift()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "giftreceiver.OnStopOpenGift:": {
        "prefix": "components.giftreceiver:OnStopOpenGift",
        "body": "components.giftreceiver:OnStopOpenGift(${1:usewardrobe})",
        "description": "参数:(usewardrobe)<>[] 返回值:无返回值 贡献者:@"
    },
    "giftreceiver.OnRemoveFromEntity:": {
        "prefix": "components.giftreceiver:OnRemoveFromEntity",
        "body": "components.giftreceiver:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "giftreceiver.HasGift:": {
        "prefix": "components.giftreceiver:HasGift",
        "body": "components.giftreceiver:HasGift()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "gingerbreadhunter.OnIsDay:": {
        "prefix": "components.gingerbreadhunter:OnIsDay",
        "body": "components.gingerbreadhunter:OnIsDay()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "gingerbreadhunter.LoadPostPass:": {
        "prefix": "components.gingerbreadhunter:LoadPostPass",
        "body": "components.gingerbreadhunter:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "gingerbreadhunter.OnSave:": {
        "prefix": "components.gingerbreadhunter:OnSave",
        "body": "components.gingerbreadhunter:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "gingerbreadhunter.OnPlayerJoined:": {
        "prefix": "components.gingerbreadhunter:OnPlayerJoined",
        "body": "components.gingerbreadhunter:OnPlayerJoined(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "gingerbreadhunter.Load:": {
        "prefix": "components.gingerbreadhunter:Load",
        "body": "components.gingerbreadhunter:Load(${1:data},${2:ents})",
        "description": "参数:(data)<>[],(ents)<>[] 返回值:无返回值 贡献者:@"
    },
    "gingerbreadhunter.SpawnCrumbTrail:": {
        "prefix": "components.gingerbreadhunter:SpawnCrumbTrail",
        "body": "components.gingerbreadhunter:SpawnCrumbTrail(${1:killtime})",
        "description": "参数:(killtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "gingerbreadhunter.GenerateCrumbPoints:": {
        "prefix": "components.gingerbreadhunter:GenerateCrumbPoints",
        "body": "components.gingerbreadhunter:GenerateCrumbPoints(${1:origin_pt},${2:amount})",
        "description": "参数:(origin_pt)<>[],(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "gingerbreadhunter.OnPlayerLeft:": {
        "prefix": "components.gingerbreadhunter:OnPlayerLeft",
        "body": "components.gingerbreadhunter:OnPlayerLeft(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "grabbable.SetCanGrabFn:": {
        "prefix": "components.grabbable:SetCanGrabFn",
        "body": "components.grabbable:SetCanGrabFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "grabbable.OnRemoveFromEntity:": {
        "prefix": "components.grabbable:OnRemoveFromEntity",
        "body": "components.grabbable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grabbable.CanGrab:": {
        "prefix": "components.grabbable:CanGrab",
        "body": "components.grabbable:CanGrab(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.SetDecayRate:": {
        "prefix": "components.grogginess:SetDecayRate",
        "body": "components.grogginess:SetDecayRate(${1:rate})",
        "description": "参数:(rate)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.SetComeToTest:": {
        "prefix": "components.grogginess:SetComeToTest",
        "body": "components.grogginess:SetComeToTest(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.AddResistanceSource:": {
        "prefix": "components.grogginess:AddResistanceSource",
        "body": "components.grogginess:AddResistanceSource(${1:source},${2:resistance})",
        "description": "参数:(source)<>[],(resistance)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.SetSpeedModMultiplier:": {
        "prefix": "components.grogginess:SetSpeedModMultiplier",
        "body": "components.grogginess:SetSpeedModMultiplier(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.OnRemoveFromEntity:": {
        "prefix": "components.grogginess:OnRemoveFromEntity",
        "body": "components.grogginess:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grogginess.SetResistance:": {
        "prefix": "components.grogginess:SetResistance",
        "body": "components.grogginess:SetResistance(${1:resist})",
        "description": "参数:(resist)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.AddGrogginess:": {
        "prefix": "components.grogginess:AddGrogginess",
        "body": "components.grogginess:AddGrogginess(${1:grogginess},${2:knockoutduration})",
        "description": "参数:(grogginess)<>[],(knockoutduration)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.HasGrogginess:": {
        "prefix": "components.grogginess:HasGrogginess",
        "body": "components.grogginess:HasGrogginess()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grogginess.TransferComponent:": {
        "prefix": "components.grogginess:TransferComponent",
        "body": "components.grogginess:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.KnockOut:": {
        "prefix": "components.grogginess:KnockOut",
        "body": "components.grogginess:KnockOut()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grogginess.CapToResistance:": {
        "prefix": "components.grogginess:CapToResistance",
        "body": "components.grogginess:CapToResistance()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grogginess.SetPercent:": {
        "prefix": "components.grogginess:SetPercent",
        "body": "components.grogginess:SetPercent(${1:percent})",
        "description": "参数:(percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.RemoveResistanceSource:": {
        "prefix": "components.grogginess:RemoveResistanceSource",
        "body": "components.grogginess:RemoveResistanceSource(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.ComeTo:": {
        "prefix": "components.grogginess:ComeTo",
        "body": "components.grogginess:ComeTo()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grogginess.ExtendKnockout:": {
        "prefix": "components.grogginess:ExtendKnockout",
        "body": "components.grogginess:ExtendKnockout(${1:knockoutduration})",
        "description": "参数:(knockoutduration)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.GetResistance:": {
        "prefix": "components.grogginess:GetResistance",
        "body": "components.grogginess:GetResistance()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grogginess.GetDebugString:": {
        "prefix": "components.grogginess:GetDebugString",
        "body": "components.grogginess:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grogginess.SetDefaultTests:": {
        "prefix": "components.grogginess:SetDefaultTests",
        "body": "components.grogginess:SetDefaultTests()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grogginess.IsKnockedOut:": {
        "prefix": "components.grogginess:IsKnockedOut",
        "body": "components.grogginess:IsKnockedOut()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grogginess.ResetGrogginess:": {
        "prefix": "components.grogginess:ResetGrogginess",
        "body": "components.grogginess:ResetGrogginess()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grogginess.SetEnableSpeedMod:": {
        "prefix": "components.grogginess:SetEnableSpeedMod",
        "body": "components.grogginess:SetEnableSpeedMod(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.SubtractGrogginess:": {
        "prefix": "components.grogginess:SubtractGrogginess",
        "body": "components.grogginess:SubtractGrogginess(${1:grogginess})",
        "description": "参数:(grogginess)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.SetWearOffDuration:": {
        "prefix": "components.grogginess:SetWearOffDuration",
        "body": "components.grogginess:SetWearOffDuration(${1:duration})",
        "description": "参数:(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.OnUpdate:": {
        "prefix": "components.grogginess:OnUpdate",
        "body": "components.grogginess:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.MakeGrogginessAtLeast:": {
        "prefix": "components.grogginess:MakeGrogginessAtLeast",
        "body": "components.grogginess:MakeGrogginessAtLeast(${1:min})",
        "description": "参数:(min)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.MaximizeGrogginess:": {
        "prefix": "components.grogginess:MaximizeGrogginess",
        "body": "components.grogginess:MaximizeGrogginess()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grogginess.SetKnockOutTest:": {
        "prefix": "components.grogginess:SetKnockOutTest",
        "body": "components.grogginess:SetKnockOutTest(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "grogginess.IsGroggy:": {
        "prefix": "components.grogginess:IsGroggy",
        "body": "components.grogginess:IsGroggy()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "groomer.OnSave:": {
        "prefix": "components.groomer:OnSave",
        "body": "components.groomer:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "groomer.ActivateChanging:": {
        "prefix": "components.groomer:ActivateChanging",
        "body": "components.groomer:ActivateChanging(${1:doer},${2:skins})",
        "description": "参数:(doer)<>[],(skins)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.GetSkinCategory:": {
        "prefix": "components.groomer:GetSkinCategory",
        "body": "components.groomer:GetSkinCategory(${1:skin})",
        "description": "参数:(skin)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.SetCanBeShared:": {
        "prefix": "components.groomer:SetCanBeShared",
        "body": "components.groomer:SetCanBeShared(${1:canbeshared})",
        "description": "参数:(canbeshared)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.BeginChanging:": {
        "prefix": "components.groomer:BeginChanging",
        "body": "components.groomer:BeginChanging(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.SetCanUseAction:": {
        "prefix": "components.groomer:SetCanUseAction",
        "body": "components.groomer:SetCanUseAction(${1:canuseaction})",
        "description": "参数:(canuseaction)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.SetChangeInDelay:": {
        "prefix": "components.groomer:SetChangeInDelay",
        "body": "components.groomer:SetChangeInDelay(${1:delay})",
        "description": "参数:(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.OnLoad:": {
        "prefix": "components.groomer:OnLoad",
        "body": "components.groomer:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.SetCanBeDressed:": {
        "prefix": "components.groomer:SetCanBeDressed",
        "body": "components.groomer:SetCanBeDressed(${1:canbedressed})",
        "description": "参数:(canbedressed)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.OnRemoveFromEntity:": {
        "prefix": "components.groomer:OnRemoveFromEntity",
        "body": "components.groomer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "groomer.EndChanging:": {
        "prefix": "components.groomer:EndChanging",
        "body": "components.groomer:EndChanging(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.ApplySkins:": {
        "prefix": "components.groomer:ApplySkins",
        "body": "components.groomer:ApplySkins(${1:doer},${2:diff})",
        "description": "参数:(doer)<>[],(diff)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.Enable:": {
        "prefix": "components.groomer:Enable",
        "body": "components.groomer:Enable(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.ApplyTargetSkins:": {
        "prefix": "components.groomer:ApplyTargetSkins",
        "body": "components.groomer:ApplyTargetSkins(${1:target},${2:doer},${3:skins})",
        "description": "参数:(target)<>[],(doer)<>[],(skins)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.OnUpdate:": {
        "prefix": "components.groomer:OnUpdate",
        "body": "components.groomer:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.CanBeginChanging:": {
        "prefix": "components.groomer:CanBeginChanging",
        "body": "components.groomer:CanBeginChanging(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.SetRange:": {
        "prefix": "components.groomer:SetRange",
        "body": "components.groomer:SetRange(${1:range})",
        "description": "参数:(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.SetOccupant:": {
        "prefix": "components.groomer:SetOccupant",
        "body": "components.groomer:SetOccupant(${1:occupant})",
        "description": "参数:(occupant)<>[] 返回值:无返回值 贡献者:@"
    },
    "groomer.EndAllChanging:": {
        "prefix": "components.groomer:EndAllChanging",
        "body": "components.groomer:EndAllChanging()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "groundpounder.GroundPound:": {
        "prefix": "components.groundpounder:GroundPound",
        "body": "components.groundpounder:GroundPound(${1:pt},${2:ents_hit})",
        "description": "参数:(pt)<>[],(ents_hit)<>[] 返回值:无返回值 贡献者:@"
    },
    "groundpounder.GroundPound_Offscreen:": {
        "prefix": "components.groundpounder:GroundPound_Offscreen",
        "body": "components.groundpounder:GroundPound_Offscreen(${1:position})",
        "description": "参数:(position)<>[] 返回值:无返回值 贡献者:@"
    },
    "groundpounder.GetPoints:": {
        "prefix": "components.groundpounder:GetPoints",
        "body": "components.groundpounder:GetPoints(${1:pt})",
        "description": "参数:(pt)<>[] 返回值:无返回值 贡献者:@"
    },
    "groundpounder.GetDebugString:": {
        "prefix": "components.groundpounder:GetDebugString",
        "body": "components.groundpounder:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "groundpounder.DestroyPoints:": {
        "prefix": "components.groundpounder:DestroyPoints",
        "body": "components.groundpounder:DestroyPoints(${1:points},${2:breakobjects},${3:dodamage},${4:pushplatforms},${5:pushinventoryitems},${6:spawnfx})",
        "description": "参数:(points)<>[],(breakobjects)<>[],(dodamage)<>[],(pushplatforms)<>[],(pushinventoryitems)<>[],(spawnfx)<>[] 返回值:无返回值 贡献者:@"
    },
    "groundpounder.UseRingMode:": {
        "prefix": "components.groundpounder:UseRingMode",
        "body": "components.groundpounder:UseRingMode()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "groundpounder.DestroyRing:": {
        "prefix": "components.groundpounder:DestroyRing",
        "body": "components.groundpounder:DestroyRing(${1:pt},${2:radius},${3:points},${4:breakobjects},${5:dodamage},${6:pushplatforms},${7:pushinventoryitems},${8:spawnfx},${9:ents_hit},${10:platforms_hit})",
        "description": "参数:(pt)<>[],(radius)<>[],(points)<>[],(breakobjects)<>[],(dodamage)<>[],(pushplatforms)<>[],(pushinventoryitems)<>[],(spawnfx)<>[],(ents_hit)<>[],(platforms_hit)<>[] 返回值:无返回值 贡献者:@"
    },
    "groundshadowhandler.OnUpdate:": {
        "prefix": "components.groundshadowhandler:OnUpdate",
        "body": "components.groundshadowhandler:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "groundshadowhandler.SetSize:": {
        "prefix": "components.groundshadowhandler:SetSize",
        "body": "components.groundshadowhandler:SetSize(${1:width},${2:height})",
        "description": "参数:(width)<>[],(height)<>[] 返回值:无返回值 贡献者:@"
    },
    "groundshadowhandler.OnRemoveEntity:": {
        "prefix": "components.groundshadowhandler:OnRemoveEntity",
        "body": "components.groundshadowhandler:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grouptargeter.OnPickTarget:": {
        "prefix": "components.grouptargeter:OnPickTarget",
        "body": "components.grouptargeter:OnPickTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "grouptargeter.OnRemoveFromEntity:": {
        "prefix": "components.grouptargeter:OnRemoveFromEntity",
        "body": "components.grouptargeter:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grouptargeter.GetTargets:": {
        "prefix": "components.grouptargeter:GetTargets",
        "body": "components.grouptargeter:GetTargets()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grouptargeter.SelectTarget:": {
        "prefix": "components.grouptargeter:SelectTarget",
        "body": "components.grouptargeter:SelectTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grouptargeter.TryGetNewTarget:": {
        "prefix": "components.grouptargeter:TryGetNewTarget",
        "body": "components.grouptargeter:TryGetNewTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grouptargeter.StartTracking:": {
        "prefix": "components.grouptargeter:StartTracking",
        "body": "components.grouptargeter:StartTracking(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "grouptargeter.RemoveTarget:": {
        "prefix": "components.grouptargeter:RemoveTarget",
        "body": "components.grouptargeter:RemoveTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "grouptargeter.IsTargeting:": {
        "prefix": "components.grouptargeter:IsTargeting",
        "body": "components.grouptargeter:IsTargeting(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "grouptargeter.StopTracking:": {
        "prefix": "components.grouptargeter:StopTracking",
        "body": "components.grouptargeter:StopTracking(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "grouptargeter.AddTarget:": {
        "prefix": "components.grouptargeter:AddTarget",
        "body": "components.grouptargeter:AddTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "grouptargeter.GetTotalWeight:": {
        "prefix": "components.grouptargeter:GetTotalWeight",
        "body": "components.grouptargeter:GetTotalWeight()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "growable.GetNextStage:": {
        "prefix": "components.growable:GetNextStage",
        "body": "components.growable:GetNextStage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "growable.OnEntitySleep:": {
        "prefix": "components.growable:OnEntitySleep",
        "body": "components.growable:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "growable.LongUpdate:": {
        "prefix": "components.growable:LongUpdate",
        "body": "components.growable:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "growable.ExtendGrowTime:": {
        "prefix": "components.growable:ExtendGrowTime",
        "body": "components.growable:ExtendGrowTime(${1:extra_time})",
        "description": "参数:(extra_time)<>[] 返回值:无返回值 贡献者:@"
    },
    "growable.StopGrowing:": {
        "prefix": "components.growable:StopGrowing",
        "body": "components.growable:StopGrowing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "growable.StartGrowing:": {
        "prefix": "components.growable:StartGrowing",
        "body": "components.growable:StartGrowing(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "growable.DoGrowth:": {
        "prefix": "components.growable:DoGrowth",
        "body": "components.growable:DoGrowth()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "growable.GetStage:": {
        "prefix": "components.growable:GetStage",
        "body": "components.growable:GetStage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "growable.IsGrowing:": {
        "prefix": "components.growable:IsGrowing",
        "body": "components.growable:IsGrowing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "growable.GetCurrentStageData:": {
        "prefix": "components.growable:GetCurrentStageData",
        "body": "components.growable:GetCurrentStageData()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "growable.OnLoad:": {
        "prefix": "components.growable:OnLoad",
        "body": "components.growable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "growable.GetDebugString:": {
        "prefix": "components.growable:GetDebugString",
        "body": "components.growable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "growable.DoMagicGrowth:": {
        "prefix": "components.growable:DoMagicGrowth",
        "body": "components.growable:DoMagicGrowth(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "growable.OnEntityWake:": {
        "prefix": "components.growable:OnEntityWake",
        "body": "components.growable:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "growable.SetStage:": {
        "prefix": "components.growable:SetStage",
        "body": "components.growable:SetStage(${1:stage})",
        "description": "参数:(stage)<>[] 返回值:无返回值 贡献者:@"
    },
    "growable.Resume:": {
        "prefix": "components.growable:Resume",
        "body": "components.growable:Resume(${1:reason})",
        "description": "参数:(reason)<>[] 返回值:无返回值 贡献者:@"
    },
    "growable.Pause:": {
        "prefix": "components.growable:Pause",
        "body": "components.growable:Pause(${1:reason})",
        "description": "参数:(reason)<>[] 返回值:无返回值 贡献者:@"
    },
    "grower.IsEmpty:": {
        "prefix": "components.grower:IsEmpty",
        "body": "components.grower:IsEmpty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grower.OnSave:": {
        "prefix": "components.grower:OnSave",
        "body": "components.grower:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grower.OnLoad:": {
        "prefix": "components.grower:OnLoad",
        "body": "components.grower:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "grower.GetDebugString:": {
        "prefix": "components.grower:GetDebugString",
        "body": "components.grower:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grower.OnRemoveFromEntity:": {
        "prefix": "components.grower:OnRemoveFromEntity",
        "body": "components.grower:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grower.RemoveCrop:": {
        "prefix": "components.grower:RemoveCrop",
        "body": "components.grower:RemoveCrop(${1:crop})",
        "description": "参数:(crop)<>[] 返回值:无返回值 贡献者:@"
    },
    "grower.IsFertile:": {
        "prefix": "components.grower:IsFertile",
        "body": "components.grower:IsFertile()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grower.GetFertilePercent:": {
        "prefix": "components.grower:GetFertilePercent",
        "body": "components.grower:GetFertilePercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grower.IsFullFertile:": {
        "prefix": "components.grower:IsFullFertile",
        "body": "components.grower:IsFullFertile()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grower.Reset:": {
        "prefix": "components.grower:Reset",
        "body": "components.grower:Reset(${1:reason})",
        "description": "参数:(reason)<>[] 返回值:无返回值 贡献者:@"
    },
    "grower.PlantItem:": {
        "prefix": "components.grower:PlantItem",
        "body": "components.grower:PlantItem(${1:item},${2:doer})",
        "description": "参数:(item)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "grower.Fertilize:": {
        "prefix": "components.grower:Fertilize",
        "body": "components.grower:Fertilize(${1:obj},${2:doer})",
        "description": "参数:(obj)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "grue.SetSounds:": {
        "prefix": "components.grue:SetSounds",
        "body": "components.grue:SetSounds(${1:warn},${2:attack})",
        "description": "参数:(warn)<>[],(attack)<>[] 返回值:无返回值 贡献者:@"
    },
    "grue.OnRemoveEntity:": {
        "prefix": "components.grue:OnRemoveEntity",
        "body": "components.grue:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grue.Attack:": {
        "prefix": "components.grue:Attack",
        "body": "components.grue:Attack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grue.OnRemoveFromEntity:": {
        "prefix": "components.grue:OnRemoveFromEntity",
        "body": "components.grue:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grue.SetResistance:": {
        "prefix": "components.grue:SetResistance",
        "body": "components.grue:SetResistance(${1:resistance})",
        "description": "参数:(resistance)<>[] 返回值:无返回值 贡献者:@"
    },
    "grue.Start:": {
        "prefix": "components.grue:Start",
        "body": "components.grue:Start()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "grue.OnUpdate:": {
        "prefix": "components.grue:OnUpdate",
        "body": "components.grue:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "grue.SetSleeping:": {
        "prefix": "components.grue:SetSleeping",
        "body": "components.grue:SetSleeping(${1:asleep})",
        "description": "参数:(asleep)<>[] 返回值:无返回值 贡献者:@"
    },
    "grue.RemoveImmunity:": {
        "prefix": "components.grue:RemoveImmunity",
        "body": "components.grue:RemoveImmunity(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "grue.AddImmunity:": {
        "prefix": "components.grue:AddImmunity",
        "body": "components.grue:AddImmunity(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "grue.Stop:": {
        "prefix": "components.grue:Stop",
        "body": "components.grue:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "guardian.DismissGuardian:": {
        "prefix": "components.guardian:DismissGuardian",
        "body": "components.guardian:DismissGuardian()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "guardian.DoDelta:": {
        "prefix": "components.guardian:DoDelta",
        "body": "components.guardian:DoDelta(${1:d})",
        "description": "参数:(d)<>[] 返回值:无返回值 贡献者:@"
    },
    "guardian.SummonsAtMax:": {
        "prefix": "components.guardian:SummonsAtMax",
        "body": "components.guardian:SummonsAtMax()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "guardian.LoadPostPass:": {
        "prefix": "components.guardian:LoadPostPass",
        "body": "components.guardian:LoadPostPass(${1:ents},${2:data})",
        "description": "参数:(ents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "guardian.StartDecay:": {
        "prefix": "components.guardian:StartDecay",
        "body": "components.guardian:StartDecay()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "guardian.OnRemoveFromEntity:": {
        "prefix": "components.guardian:OnRemoveFromEntity",
        "body": "components.guardian:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "guardian.OnLoad:": {
        "prefix": "components.guardian:OnLoad",
        "body": "components.guardian:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "guardian.SetGuardian:": {
        "prefix": "components.guardian:SetGuardian",
        "body": "components.guardian:SetGuardian(${1:guardian})",
        "description": "参数:(guardian)<>[] 返回值:无返回值 贡献者:@"
    },
    "guardian.HasGuardian:": {
        "prefix": "components.guardian:HasGuardian",
        "body": "components.guardian:HasGuardian()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "guardian.Decay:": {
        "prefix": "components.guardian:Decay",
        "body": "components.guardian:Decay(${1:d})",
        "description": "参数:(d)<>[] 返回值:无返回值 贡献者:@"
    },
    "guardian.Call:": {
        "prefix": "components.guardian:Call",
        "body": "components.guardian:Call(${1:d})",
        "description": "参数:(d)<>[] 返回值:无返回值 贡献者:@"
    },
    "guardian.SummonGuardian:": {
        "prefix": "components.guardian:SummonGuardian",
        "body": "components.guardian:SummonGuardian(${1:override})",
        "description": "参数:(override)<>[] 返回值:无返回值 贡献者:@"
    },
    "guardian.OnSave:": {
        "prefix": "components.guardian:OnSave",
        "body": "components.guardian:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "guardian.OnGuardianDeath:": {
        "prefix": "components.guardian:OnGuardianDeath",
        "body": "components.guardian:OnGuardianDeath(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "guardian.SummonsAtMin:": {
        "prefix": "components.guardian:SummonsAtMin",
        "body": "components.guardian:SummonsAtMin()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "gym.checktraineesleep:": {
        "prefix": "components.gym:checktraineesleep",
        "body": "components.gym:checktraineesleep(${1:phase})",
        "description": "参数:(phase)<>[] 返回值:无返回值 贡献者:@"
    },
    "gym.OnSave:": {
        "prefix": "components.gym:OnSave",
        "body": "components.gym:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "gym.Train:": {
        "prefix": "components.gym:Train",
        "body": "components.gym:Train()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "gym.GetDebugString:": {
        "prefix": "components.gym:GetDebugString",
        "body": "components.gym:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "gym.SetTrainFn:": {
        "prefix": "components.gym:SetTrainFn",
        "body": "components.gym:SetTrainFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "gym.OnTimerDone:": {
        "prefix": "components.gym:OnTimerDone",
        "body": "components.gym:OnTimerDone(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "gym.RemoveTrainee:": {
        "prefix": "components.gym:RemoveTrainee",
        "body": "components.gym:RemoveTrainee()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "gym.SetTrainee:": {
        "prefix": "components.gym:SetTrainee",
        "body": "components.gym:SetTrainee(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "gym.LoadPostPass:": {
        "prefix": "components.gym:LoadPostPass",
        "body": "components.gym:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "gym.SetOnRemoveTraineeFn:": {
        "prefix": "components.gym:SetOnRemoveTraineeFn",
        "body": "components.gym:SetOnRemoveTraineeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "gym.StartTraining:": {
        "prefix": "components.gym:StartTraining",
        "body": "components.gym:StartTraining(${1:inst},${2:time})",
        "description": "参数:(inst)<>[],(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "gym.StopTraining:": {
        "prefix": "components.gym:StopTraining",
        "body": "components.gym:StopTraining()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "gym.PushMontage:": {
        "prefix": "components.gym:PushMontage",
        "body": "components.gym:PushMontage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "gym.CheckPerish:": {
        "prefix": "components.gym:CheckPerish",
        "body": "components.gym:CheckPerish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "halloweenmoonmutable.SetOnMutateFn:": {
        "prefix": "components.halloweenmoonmutable:SetOnMutateFn",
        "body": "components.halloweenmoonmutable:SetOnMutateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "halloweenmoonmutable.SetPrefabMutated:": {
        "prefix": "components.halloweenmoonmutable:SetPrefabMutated",
        "body": "components.halloweenmoonmutable:SetPrefabMutated(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "halloweenmoonmutable.SetConversionOverrideFn:": {
        "prefix": "components.halloweenmoonmutable:SetConversionOverrideFn",
        "body": "components.halloweenmoonmutable:SetConversionOverrideFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "halloweenmoonmutable.OnRemoveFromEntity:": {
        "prefix": "components.halloweenmoonmutable:OnRemoveFromEntity",
        "body": "components.halloweenmoonmutable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "halloweenmoonmutable.Mutate:": {
        "prefix": "components.halloweenmoonmutable:Mutate",
        "body": "components.halloweenmoonmutable:Mutate(${1:overrideprefab})",
        "description": "参数:(overrideprefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "halloweenpotionmoon.Use:": {
        "prefix": "components.halloweenpotionmoon:Use",
        "body": "components.halloweenpotionmoon:Use(${1:doer},${2:target})",
        "description": "参数:(doer)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "halloweenpotionmoon.SetOnUseFn:": {
        "prefix": "components.halloweenpotionmoon:SetOnUseFn",
        "body": "components.halloweenpotionmoon:SetOnUseFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.Disable:": {
        "prefix": "components.harvestable:Disable",
        "body": "components.harvestable:Disable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "harvestable.OnRemoveFromEntity:": {
        "prefix": "components.harvestable:OnRemoveFromEntity",
        "body": "components.harvestable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "harvestable.SetDoMagicGrowthFn:": {
        "prefix": "components.harvestable:SetDoMagicGrowthFn",
        "body": "components.harvestable:SetDoMagicGrowthFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.StartGrowing:": {
        "prefix": "components.harvestable:StartGrowing",
        "body": "components.harvestable:StartGrowing(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.SetProduct:": {
        "prefix": "components.harvestable:SetProduct",
        "body": "components.harvestable:SetProduct(${1:product},${2:max})",
        "description": "参数:(product)<>[],(max)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.Enable:": {
        "prefix": "components.harvestable:Enable",
        "body": "components.harvestable:Enable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "harvestable.SetUp:": {
        "prefix": "components.harvestable:SetUp",
        "body": "components.harvestable:SetUp(${1:product},${2:max},${3:time},${4:onharvest},${5:ongrow})",
        "description": "参数:(product)<>[],(max)<>[],(time)<>[],(onharvest)<>[],(ongrow)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.OnLoad:": {
        "prefix": "components.harvestable:OnLoad",
        "body": "components.harvestable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.SetCanHarvestFn:": {
        "prefix": "components.harvestable:SetCanHarvestFn",
        "body": "components.harvestable:SetCanHarvestFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.GetDebugString:": {
        "prefix": "components.harvestable:GetDebugString",
        "body": "components.harvestable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "harvestable.SetOnGrowFn:": {
        "prefix": "components.harvestable:SetOnGrowFn",
        "body": "components.harvestable:SetOnGrowFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.StopGrowing:": {
        "prefix": "components.harvestable:StopGrowing",
        "body": "components.harvestable:StopGrowing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "harvestable.PauseGrowing:": {
        "prefix": "components.harvestable:PauseGrowing",
        "body": "components.harvestable:PauseGrowing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "harvestable.Grow:": {
        "prefix": "components.harvestable:Grow",
        "body": "components.harvestable:Grow()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "harvestable.Harvest:": {
        "prefix": "components.harvestable:Harvest",
        "body": "components.harvestable:Harvest(${1:picker})",
        "description": "参数:(picker)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.DoMagicGrowth:": {
        "prefix": "components.harvestable:DoMagicGrowth",
        "body": "components.harvestable:DoMagicGrowth(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.OnSave:": {
        "prefix": "components.harvestable:OnSave",
        "body": "components.harvestable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "harvestable.IsMagicGrowable:": {
        "prefix": "components.harvestable:IsMagicGrowable",
        "body": "components.harvestable:IsMagicGrowable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "harvestable.SetOnHarvestFn:": {
        "prefix": "components.harvestable:SetOnHarvestFn",
        "body": "components.harvestable:SetOnHarvestFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.SetGrowTime:": {
        "prefix": "components.harvestable:SetGrowTime",
        "body": "components.harvestable:SetGrowTime(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "harvestable.CanBeHarvested:": {
        "prefix": "components.harvestable:CanBeHarvested",
        "body": "components.harvestable:CanBeHarvested()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hatchable.OnSave:": {
        "prefix": "components.hatchable:OnSave",
        "body": "components.hatchable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hatchable.SetOnState:": {
        "prefix": "components.hatchable:SetOnState",
        "body": "components.hatchable:SetOnState(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "hatchable.SetHatchTime:": {
        "prefix": "components.hatchable:SetHatchTime",
        "body": "components.hatchable:SetHatchTime(${1:t})",
        "description": "参数:(t)<>[] 返回值:无返回值 贡献者:@"
    },
    "hatchable.OnLoad:": {
        "prefix": "components.hatchable:OnLoad",
        "body": "components.hatchable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "hatchable.GetDebugString:": {
        "prefix": "components.hatchable:GetDebugString",
        "body": "components.hatchable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hatchable.SetHeaterPrefs:": {
        "prefix": "components.hatchable:SetHeaterPrefs",
        "body": "components.hatchable:SetHeaterPrefs(${1:day},${2:dusk},${3:night})",
        "description": "参数:(day)<>[],(dusk)<>[],(night)<>[] 返回值:无返回值 贡献者:@"
    },
    "hatchable.GetChillerPref:": {
        "prefix": "components.hatchable:GetChillerPref",
        "body": "components.hatchable:GetChillerPref(${1:phase})",
        "description": "参数:(phase)<>[] 返回值:无返回值 贡献者:@"
    },
    "hatchable.OnState:": {
        "prefix": "components.hatchable:OnState",
        "body": "components.hatchable:OnState(${1:state},${2:forcestateupdate})",
        "description": "参数:(state)<>[],(forcestateupdate)<>[] 返回值:无返回值 贡献者:@"
    },
    "hatchable.SetCrackTime:": {
        "prefix": "components.hatchable:SetCrackTime",
        "body": "components.hatchable:SetCrackTime(${1:t})",
        "description": "参数:(t)<>[] 返回值:无返回值 贡献者:@"
    },
    "hatchable.SetChillerPrefs:": {
        "prefix": "components.hatchable:SetChillerPrefs",
        "body": "components.hatchable:SetChillerPrefs(${1:day},${2:dusk},${3:night})",
        "description": "参数:(day)<>[],(dusk)<>[],(night)<>[] 返回值:无返回值 贡献者:@"
    },
    "hatchable.StopUpdating:": {
        "prefix": "components.hatchable:StopUpdating",
        "body": "components.hatchable:StopUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hatchable.OnUpdate:": {
        "prefix": "components.hatchable:OnUpdate",
        "body": "components.hatchable:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "hatchable.Delay:": {
        "prefix": "components.hatchable:Delay",
        "body": "components.hatchable:Delay(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "hatchable.StartUpdating:": {
        "prefix": "components.hatchable:StartUpdating",
        "body": "components.hatchable:StartUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hatchable.SetHatchFailTime:": {
        "prefix": "components.hatchable:SetHatchFailTime",
        "body": "components.hatchable:SetHatchFailTime(${1:t})",
        "description": "参数:(t)<>[] 返回值:无返回值 贡献者:@"
    },
    "hatchable.GetHeaterPref:": {
        "prefix": "components.hatchable:GetHeaterPref",
        "body": "components.hatchable:GetHeaterPref(${1:phase})",
        "description": "参数:(phase)<>[] 返回值:无返回值 贡献者:@"
    },
    "hauntable.SetOnUnHauntFn:": {
        "prefix": "components.hauntable:SetOnUnHauntFn",
        "body": "components.hauntable:SetOnUnHauntFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "hauntable.DoHaunt:": {
        "prefix": "components.hauntable:DoHaunt",
        "body": "components.hauntable:DoHaunt(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "hauntable.SetOnHauntFn:": {
        "prefix": "components.hauntable:SetOnHauntFn",
        "body": "components.hauntable:SetOnHauntFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "hauntable.Panic:": {
        "prefix": "components.hauntable:Panic",
        "body": "components.hauntable:Panic(${1:panictime})",
        "description": "参数:(panictime)<>[] 返回值:无返回值 贡献者:@"
    },
    "hauntable.OnRemoveFromEntity:": {
        "prefix": "components.hauntable:OnRemoveFromEntity",
        "body": "components.hauntable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hauntable.StopFX:": {
        "prefix": "components.hauntable:StopFX",
        "body": "components.hauntable:StopFX()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hauntable.StopShaderFX:": {
        "prefix": "components.hauntable:StopShaderFX",
        "body": "components.hauntable:StopShaderFX()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hauntable.OnUpdate:": {
        "prefix": "components.hauntable:OnUpdate",
        "body": "components.hauntable:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "hauntable.SetHauntValue:": {
        "prefix": "components.hauntable:SetHauntValue",
        "body": "components.hauntable:SetHauntValue(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "hauntable.StartShaderFx:": {
        "prefix": "components.hauntable:StartShaderFx",
        "body": "components.hauntable:StartShaderFx()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hauntable.AdvanceFlickerState:": {
        "prefix": "components.hauntable:AdvanceFlickerState",
        "body": "components.hauntable:AdvanceFlickerState()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hauntable.StartFX:": {
        "prefix": "components.hauntable:StartFX",
        "body": "components.hauntable:StartFX(${1:noflicker})",
        "description": "参数:(noflicker)<>[] 返回值:无返回值 贡献者:@"
    },
    "healer.SetOnHealFn:": {
        "prefix": "components.healer:SetOnHealFn",
        "body": "components.healer:SetOnHealFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "healer.SetHealthAmount:": {
        "prefix": "components.healer:SetHealthAmount",
        "body": "components.healer:SetHealthAmount(${1:health})",
        "description": "参数:(health)<>[] 返回值:无返回值 贡献者:@"
    },
    "healer.Heal:": {
        "prefix": "components.healer:Heal",
        "body": "components.healer:Heal(${1:target},${2:doer})",
        "description": "参数:(target)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "healer.SetCanHealFn:": {
        "prefix": "components.healer:SetCanHealFn",
        "body": "components.healer:SetCanHealFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.OnSave:": {
        "prefix": "components.health:OnSave",
        "body": "components.health:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.OnRemoveFromEntity:": {
        "prefix": "components.health:OnRemoveFromEntity",
        "body": "components.health:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.AddRegenSource:": {
        "prefix": "components.health:AddRegenSource",
        "body": "components.health:AddRegenSource(${1:source},${2:amount},${3:period},${4:key})",
        "description": "参数:(source)<>[],(amount)<>[],(period)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.SetPenalty:": {
        "prefix": "components.health:SetPenalty",
        "body": "components.health:SetPenalty(${1:penalty})",
        "description": "参数:(penalty)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.SetVal:": {
        "prefix": "components.health:SetVal",
        "body": "components.health:SetVal(${1:val},${2:cause},${3:afflicter})",
        "description": "参数:(val)<>[],(cause)<>[],(afflicter)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.SetAbsorptionAmountFromPlayer:": {
        "prefix": "components.health:SetAbsorptionAmountFromPlayer",
        "body": "components.health:SetAbsorptionAmountFromPlayer(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.GetPercentWithPenalty:": {
        "prefix": "components.health:GetPercentWithPenalty",
        "body": "components.health:GetPercentWithPenalty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.RemoveRegenSource:": {
        "prefix": "components.health:RemoveRegenSource",
        "body": "components.health:RemoveRegenSource(${1:source},${2:key})",
        "description": "参数:(source)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.SetMinHealth:": {
        "prefix": "components.health:SetMinHealth",
        "body": "components.health:SetMinHealth(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.GetMaxWithPenalty:": {
        "prefix": "components.health:GetMaxWithPenalty",
        "body": "components.health:GetMaxWithPenalty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.StartRegen:": {
        "prefix": "components.health:StartRegen",
        "body": "components.health:StartRegen(${1:amount},${2:period},${3:interruptcurrentregen})",
        "description": "参数:(amount)<>[],(period)<>[],(interruptcurrentregen)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.DoFireDamage:": {
        "prefix": "components.health:DoFireDamage",
        "body": "components.health:DoFireDamage(${1:amount},${2:doer},${3:instant})",
        "description": "参数:(amount)<>[],(doer)<>[],(instant)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.DeltaPenalty:": {
        "prefix": "components.health:DeltaPenalty",
        "body": "components.health:DeltaPenalty(${1:delta})",
        "description": "参数:(delta)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.DoDelta:": {
        "prefix": "components.health:DoDelta",
        "body": "components.health:DoDelta(${1:amount},${2:overtime},${3:cause},${4:ignore_invincible},${5:afflicter},${6:ignore_absorb})",
        "description": "参数:(amount)<>[],(overtime)<>[],(cause)<>[],(ignore_invincible)<>[],(afflicter)<>[],(ignore_absorb)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.RecalculatePenalty:": {
        "prefix": "components.health:RecalculatePenalty",
        "body": "components.health:RecalculatePenalty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.GetFireDamageScale:": {
        "prefix": "components.health:GetFireDamageScale",
        "body": "components.health:GetFireDamageScale()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.GetPenaltyPercent:": {
        "prefix": "components.health:GetPenaltyPercent",
        "body": "components.health:GetPenaltyPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.IsDead:": {
        "prefix": "components.health:IsDead",
        "body": "components.health:IsDead()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.IsInvincible:": {
        "prefix": "components.health:IsInvincible",
        "body": "components.health:IsInvincible()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.SetAbsorptionAmount:": {
        "prefix": "components.health:SetAbsorptionAmount",
        "body": "components.health:SetAbsorptionAmount(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.OnLoad:": {
        "prefix": "components.health:OnLoad",
        "body": "components.health:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.GetDebugString:": {
        "prefix": "components.health:GetDebugString",
        "body": "components.health:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.Kill:": {
        "prefix": "components.health:Kill",
        "body": "components.health:Kill()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.TransferComponent:": {
        "prefix": "components.health:TransferComponent",
        "body": "components.health:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.SetPercent:": {
        "prefix": "components.health:SetPercent",
        "body": "components.health:SetPercent(${1:percent},${2:overtime},${3:cause})",
        "description": "参数:(percent)<>[],(overtime)<>[],(cause)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.IsHurt:": {
        "prefix": "components.health:IsHurt",
        "body": "components.health:IsHurt()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.SetMaxDamageTakenPerHit:": {
        "prefix": "components.health:SetMaxDamageTakenPerHit",
        "body": "components.health:SetMaxDamageTakenPerHit(${1:maxdamagetakenperhit})",
        "description": "参数:(maxdamagetakenperhit)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.StopRegen:": {
        "prefix": "components.health:StopRegen",
        "body": "components.health:StopRegen()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.OnUpdate:": {
        "prefix": "components.health:OnUpdate",
        "body": "components.health:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.GetPercent:": {
        "prefix": "components.health:GetPercent",
        "body": "components.health:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "health.SetMaxHealth:": {
        "prefix": "components.health:SetMaxHealth",
        "body": "components.health:SetMaxHealth(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.ForceUpdateHUD:": {
        "prefix": "components.health:ForceUpdateHUD",
        "body": "components.health:ForceUpdateHUD(${1:overtime})",
        "description": "参数:(overtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "health.SetCurrentHealth:": {
        "prefix": "components.health:SetCurrentHealth",
        "body": "components.health:SetCurrentHealth(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "healthbar.SetValue:": {
        "prefix": "components.healthbar:SetValue",
        "body": "components.healthbar:SetValue(${1:percent})",
        "description": "参数:(percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "healthbar.Enable:": {
        "prefix": "components.healthbar:Enable",
        "body": "components.healthbar:Enable(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "healthsyncer.GetPercent:": {
        "prefix": "components.healthsyncer:GetPercent",
        "body": "components.healthsyncer:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "healthsyncer.GetOverTime:": {
        "prefix": "components.healthsyncer:GetOverTime",
        "body": "components.healthsyncer:GetOverTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "healthsyncer.OnUpdate:": {
        "prefix": "components.healthsyncer:OnUpdate",
        "body": "components.healthsyncer:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "healthtrigger.OnRemoveFromEntity:": {
        "prefix": "components.healthtrigger:OnRemoveFromEntity",
        "body": "components.healthtrigger:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "healthtrigger.AddTrigger:": {
        "prefix": "components.healthtrigger:AddTrigger",
        "body": "components.healthtrigger:AddTrigger(${1:amount},${2:fn})",
        "description": "参数:(amount)<>[],(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "heater.SetHeatRadiusCutoff:": {
        "prefix": "components.heater:SetHeatRadiusCutoff",
        "body": "components.heater:SetHeatRadiusCutoff(${1:radius_cutoff})",
        "description": "参数:(radius_cutoff)<>[] 返回值:无返回值 贡献者:@"
    },
    "heater.SetThermics:": {
        "prefix": "components.heater:SetThermics",
        "body": "components.heater:SetThermics(${1:exo},${2:endo})",
        "description": "参数:(exo)<>[],(endo)<>[] 返回值:无返回值 贡献者:@"
    },
    "heater.GetEquippedHeat:": {
        "prefix": "components.heater:GetEquippedHeat",
        "body": "components.heater:GetEquippedHeat(${1:observer})",
        "description": "参数:(observer)<>[] 返回值:无返回值 贡献者:@"
    },
    "heater.OnRemoveFromEntity:": {
        "prefix": "components.heater:OnRemoveFromEntity",
        "body": "components.heater:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heater.GetDebugString:": {
        "prefix": "components.heater:GetDebugString",
        "body": "components.heater:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heater.IsEndothermic:": {
        "prefix": "components.heater:IsEndothermic",
        "body": "components.heater:IsEndothermic()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heater.ShouldFalloff:": {
        "prefix": "components.heater:ShouldFalloff",
        "body": "components.heater:ShouldFalloff()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heater.GetCarriedHeat:": {
        "prefix": "components.heater:GetCarriedHeat",
        "body": "components.heater:GetCarriedHeat(${1:observer})",
        "description": "参数:(observer)<>[] 返回值:无返回值 贡献者:@"
    },
    "heater.SetShouldFalloff:": {
        "prefix": "components.heater:SetShouldFalloff",
        "body": "components.heater:SetShouldFalloff(${1:should_falloff})",
        "description": "参数:(should_falloff)<>[] 返回值:无返回值 贡献者:@"
    },
    "heater.GetHeat:": {
        "prefix": "components.heater:GetHeat",
        "body": "components.heater:GetHeat(${1:observer})",
        "description": "参数:(observer)<>[] 返回值:无返回值 贡献者:@"
    },
    "heater.GetHeatRadiusCutoff:": {
        "prefix": "components.heater:GetHeatRadiusCutoff",
        "body": "components.heater:GetHeatRadiusCutoff()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heater.IsExothermic:": {
        "prefix": "components.heater:IsExothermic",
        "body": "components.heater:IsExothermic()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.SetOnPhysicsStateChangedFn:": {
        "prefix": "components.heavyobstaclephysics:SetOnPhysicsStateChangedFn",
        "body": "components.heavyobstaclephysics:SetOnPhysicsStateChangedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.IsItem:": {
        "prefix": "components.heavyobstaclephysics:IsItem",
        "body": "components.heavyobstaclephysics:IsItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.SetOnStartFallingFn:": {
        "prefix": "components.heavyobstaclephysics:SetOnStartFallingFn",
        "body": "components.heavyobstaclephysics:SetOnStartFallingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.IsFalling:": {
        "prefix": "components.heavyobstaclephysics:IsFalling",
        "body": "components.heavyobstaclephysics:IsFalling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.IsObstacle:": {
        "prefix": "components.heavyobstaclephysics:IsObstacle",
        "body": "components.heavyobstaclephysics:IsObstacle()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.OnRemoveFromEntity:": {
        "prefix": "components.heavyobstaclephysics:OnRemoveFromEntity",
        "body": "components.heavyobstaclephysics:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.AddFallingStates:": {
        "prefix": "components.heavyobstaclephysics:AddFallingStates",
        "body": "components.heavyobstaclephysics:AddFallingStates()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.SetOnStopFallingFn:": {
        "prefix": "components.heavyobstaclephysics:SetOnStopFallingFn",
        "body": "components.heavyobstaclephysics:SetOnStopFallingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.SetOnChangeToObstacleFn:": {
        "prefix": "components.heavyobstaclephysics:SetOnChangeToObstacleFn",
        "body": "components.heavyobstaclephysics:SetOnChangeToObstacleFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.GetPhysicsState:": {
        "prefix": "components.heavyobstaclephysics:GetPhysicsState",
        "body": "components.heavyobstaclephysics:GetPhysicsState()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.SetOnChangeToItemFn:": {
        "prefix": "components.heavyobstaclephysics:SetOnChangeToItemFn",
        "body": "components.heavyobstaclephysics:SetOnChangeToItemFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.MakeSmallObstacle:": {
        "prefix": "components.heavyobstaclephysics:MakeSmallObstacle",
        "body": "components.heavyobstaclephysics:MakeSmallObstacle()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "heavyobstaclephysics.SetRadius:": {
        "prefix": "components.heavyobstaclephysics:SetRadius",
        "body": "components.heavyobstaclephysics:SetRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "heavyobstacleusetarget.UseHeavyObstacle:": {
        "prefix": "components.heavyobstacleusetarget:UseHeavyObstacle",
        "body": "components.heavyobstacleusetarget:UseHeavyObstacle(${1:doer},${2:heavy_obstacle})",
        "description": "参数:(doer)<>[],(heavy_obstacle)<>[] 返回值:无返回值 贡献者:@"
    },
    "herd.OnSave:": {
        "prefix": "components.herd:OnSave",
        "body": "components.herd:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herd.GatherNearbyMembers:": {
        "prefix": "components.herd:GatherNearbyMembers",
        "body": "components.herd:GatherNearbyMembers()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herd.SetOnEmptyFn:": {
        "prefix": "components.herd:SetOnEmptyFn",
        "body": "components.herd:SetOnEmptyFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "herd.SetRemoveMemberFn:": {
        "prefix": "components.herd:SetRemoveMemberFn",
        "body": "components.herd:SetRemoveMemberFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "herd.OnRemoveFromEntity:": {
        "prefix": "components.herd:OnRemoveFromEntity",
        "body": "components.herd:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herd.SetGatherRange:": {
        "prefix": "components.herd:SetGatherRange",
        "body": "components.herd:SetGatherRange(${1:range})",
        "description": "参数:(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "herd.IsFull:": {
        "prefix": "components.herd:IsFull",
        "body": "components.herd:IsFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herd.SetMaxSize:": {
        "prefix": "components.herd:SetMaxSize",
        "body": "components.herd:SetMaxSize(${1:size})",
        "description": "参数:(size)<>[] 返回值:无返回值 贡献者:@"
    },
    "herd.RemoveMember:": {
        "prefix": "components.herd:RemoveMember",
        "body": "components.herd:RemoveMember(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "herd.SetUpdateRange:": {
        "prefix": "components.herd:SetUpdateRange",
        "body": "components.herd:SetUpdateRange(${1:range})",
        "description": "参数:(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "herd.SetAddMemberFn:": {
        "prefix": "components.herd:SetAddMemberFn",
        "body": "components.herd:SetAddMemberFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "herd.OnRemoveEntity:": {
        "prefix": "components.herd:OnRemoveEntity",
        "body": "components.herd:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herd.GetDebugString:": {
        "prefix": "components.herd:GetDebugString",
        "body": "components.herd:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herd.SetOnFullFn:": {
        "prefix": "components.herd:SetOnFullFn",
        "body": "components.herd:SetOnFullFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "herd.OnUpdate:": {
        "prefix": "components.herd:OnUpdate",
        "body": "components.herd:OnUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herd.LoadPostPass:": {
        "prefix": "components.herd:LoadPostPass",
        "body": "components.herd:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "herd.MergeNearbyHerds:": {
        "prefix": "components.herd:MergeNearbyHerds",
        "body": "components.herd:MergeNearbyHerds()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herd.AddMember:": {
        "prefix": "components.herd:AddMember",
        "body": "components.herd:AddMember(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "herd.SetMemberTag:": {
        "prefix": "components.herd:SetMemberTag",
        "body": "components.herd:SetMemberTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "herdmember.SetHerd:": {
        "prefix": "components.herdmember:SetHerd",
        "body": "components.herdmember:SetHerd(${1:herd})",
        "description": "参数:(herd)<>[] 返回值:无返回值 贡献者:@"
    },
    "herdmember.GetDebugString:": {
        "prefix": "components.herdmember:GetDebugString",
        "body": "components.herdmember:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herdmember.SetHerdPrefab:": {
        "prefix": "components.herdmember:SetHerdPrefab",
        "body": "components.herdmember:SetHerdPrefab(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "herdmember.CreateHerd:": {
        "prefix": "components.herdmember:CreateHerd",
        "body": "components.herdmember:CreateHerd()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herdmember.GetHerd:": {
        "prefix": "components.herdmember:GetHerd",
        "body": "components.herdmember:GetHerd()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herdmember.Leave:": {
        "prefix": "components.herdmember:Leave",
        "body": "components.herdmember:Leave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herdmember.OnRemoveFromEntity:": {
        "prefix": "components.herdmember:OnRemoveFromEntity",
        "body": "components.herdmember:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "herdmember.Enable:": {
        "prefix": "components.herdmember:Enable",
        "body": "components.herdmember:Enable(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseeker.SetGame:": {
        "prefix": "components.hideandseeker:SetGame",
        "body": "components.hideandseeker:SetGame(${1:hideandseekgame})",
        "description": "参数:(hideandseekgame)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseeker.OnRemoveFromEntity:": {
        "prefix": "components.hideandseeker:OnRemoveFromEntity",
        "body": "components.hideandseeker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseeker.GetDebugString:": {
        "prefix": "components.hideandseeker:GetDebugString",
        "body": "components.hideandseeker:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.RegisterHidingSpot:": {
        "prefix": "components.hideandseekgame:RegisterHidingSpot",
        "body": "components.hideandseekgame:RegisterHidingSpot(${1:hiding_spot})",
        "description": "参数:(hiding_spot)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.OnRemoveEntity:": {
        "prefix": "components.hideandseekgame:OnRemoveEntity",
        "body": "components.hideandseekgame:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.GetDebugString:": {
        "prefix": "components.hideandseekgame:GetDebugString",
        "body": "components.hideandseekgame:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame._HideAndSeekOver:": {
        "prefix": "components.hideandseekgame:_HideAndSeekOver",
        "body": "components.hideandseekgame:_HideAndSeekOver()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.GetNumSeekers:": {
        "prefix": "components.hideandseekgame:GetNumSeekers",
        "body": "components.hideandseekgame:GetNumSeekers()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.AddSeeker:": {
        "prefix": "components.hideandseekgame:AddSeeker",
        "body": "components.hideandseekgame:AddSeeker(${1:seeker},${2:started_game})",
        "description": "参数:(seeker)<>[],(started_game)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.UnregisterHidingSpot:": {
        "prefix": "components.hideandseekgame:UnregisterHidingSpot",
        "body": "components.hideandseekgame:UnregisterHidingSpot(${1:hiding_spot})",
        "description": "参数:(hiding_spot)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.LoadPostPass:": {
        "prefix": "components.hideandseekgame:LoadPostPass",
        "body": "components.hideandseekgame:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.GetNumHiding:": {
        "prefix": "components.hideandseekgame:GetNumHiding",
        "body": "components.hideandseekgame:GetNumHiding()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.OnSave:": {
        "prefix": "components.hideandseekgame:OnSave",
        "body": "components.hideandseekgame:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.GetNumFound:": {
        "prefix": "components.hideandseekgame:GetNumFound",
        "body": "components.hideandseekgame:GetNumFound()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.IsActive:": {
        "prefix": "components.hideandseekgame:IsActive",
        "body": "components.hideandseekgame:IsActive()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekgame.Abort:": {
        "prefix": "components.hideandseekgame:Abort",
        "body": "components.hideandseekgame:Abort()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekhider.GoHide:": {
        "prefix": "components.hideandseekhider:GoHide",
        "body": "components.hideandseekhider:GoHide(${1:hiding_spot},${2:timeout_time},${3:isloading})",
        "description": "参数:(hiding_spot)<>[],(timeout_time)<>[],(isloading)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekhider.OnSave:": {
        "prefix": "components.hideandseekhider:OnSave",
        "body": "components.hideandseekhider:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekhider.CanPlayHideAndSeek:": {
        "prefix": "components.hideandseekhider:CanPlayHideAndSeek",
        "body": "components.hideandseekhider:CanPlayHideAndSeek()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekhider.IsPlaying:": {
        "prefix": "components.hideandseekhider:IsPlaying",
        "body": "components.hideandseekhider:IsPlaying()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekhider.IsHidden:": {
        "prefix": "components.hideandseekhider:IsHidden",
        "body": "components.hideandseekhider:IsHidden()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekhider.GetDebugString:": {
        "prefix": "components.hideandseekhider:GetDebugString",
        "body": "components.hideandseekhider:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekhider.LoadPostPass:": {
        "prefix": "components.hideandseekhider:LoadPostPass",
        "body": "components.hideandseekhider:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekhider.Found:": {
        "prefix": "components.hideandseekhider:Found",
        "body": "components.hideandseekhider:Found(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekhider.Abort:": {
        "prefix": "components.hideandseekhider:Abort",
        "body": "components.hideandseekhider:Abort()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekhidingspot.OnSave:": {
        "prefix": "components.hideandseekhidingspot:OnSave",
        "body": "components.hideandseekhidingspot:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekhidingspot._ReleaesHider:": {
        "prefix": "components.hideandseekhidingspot:_ReleaesHider",
        "body": "components.hideandseekhidingspot:_ReleaesHider(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekhidingspot.GetDebugString:": {
        "prefix": "components.hideandseekhidingspot:GetDebugString",
        "body": "components.hideandseekhidingspot:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekhidingspot.SearchHidingSpot:": {
        "prefix": "components.hideandseekhidingspot:SearchHidingSpot",
        "body": "components.hideandseekhidingspot:SearchHidingSpot(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekhidingspot.OnRemoveFromEntity:": {
        "prefix": "components.hideandseekhidingspot:OnRemoveFromEntity",
        "body": "components.hideandseekhidingspot:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekhidingspot.SetHider:": {
        "prefix": "components.hideandseekhidingspot:SetHider",
        "body": "components.hideandseekhidingspot:SetHider(${1:hider})",
        "description": "参数:(hider)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekhidingspot.OnLoad:": {
        "prefix": "components.hideandseekhidingspot:OnLoad",
        "body": "components.hideandseekhidingspot:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekhidingspot.HideInSpot:": {
        "prefix": "components.hideandseekhidingspot:HideInSpot",
        "body": "components.hideandseekhidingspot:HideInSpot(${1:hider})",
        "description": "参数:(hider)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideandseekhidingspot.OnRemoveEntity:": {
        "prefix": "components.hideandseekhidingspot:OnRemoveEntity",
        "body": "components.hideandseekhidingspot:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideandseekhidingspot.Abort:": {
        "prefix": "components.hideandseekhidingspot:Abort",
        "body": "components.hideandseekhidingspot:Abort()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideout.OnSave:": {
        "prefix": "components.hideout:OnSave",
        "body": "components.hideout:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideout.StartUpdate:": {
        "prefix": "components.hideout:StartUpdate",
        "body": "components.hideout:StartUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideout.DoReleaseChild:": {
        "prefix": "components.hideout:DoReleaseChild",
        "body": "components.hideout:DoReleaseChild(${1:target},${2:child},${3:radius})",
        "description": "参数:(target)<>[],(child)<>[],(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.ReleaseAllChildren:": {
        "prefix": "components.hideout:ReleaseAllChildren",
        "body": "components.hideout:ReleaseAllChildren(${1:target},${2:prefab})",
        "description": "参数:(target)<>[],(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.ReleaseChild:": {
        "prefix": "components.hideout:ReleaseChild",
        "body": "components.hideout:ReleaseChild(${1:target},${2:prefab},${3:radius})",
        "description": "参数:(target)<>[],(prefab)<>[],(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.LoadPostPass:": {
        "prefix": "components.hideout:LoadPostPass",
        "body": "components.hideout:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.StopSpawning:": {
        "prefix": "components.hideout:StopSpawning",
        "body": "components.hideout:StopSpawning()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideout.SetOccupiedFn:": {
        "prefix": "components.hideout:SetOccupiedFn",
        "body": "components.hideout:SetOccupiedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.OnLoad:": {
        "prefix": "components.hideout:OnLoad",
        "body": "components.hideout:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.SetVacateFn:": {
        "prefix": "components.hideout:SetVacateFn",
        "body": "components.hideout:SetVacateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.SetGoHomeFn:": {
        "prefix": "components.hideout:SetGoHomeFn",
        "body": "components.hideout:SetGoHomeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.SetSpawnedFn:": {
        "prefix": "components.hideout:SetSpawnedFn",
        "body": "components.hideout:SetSpawnedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.GetDebugString:": {
        "prefix": "components.hideout:GetDebugString",
        "body": "components.hideout:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideout.StartSpawning:": {
        "prefix": "components.hideout:StartSpawning",
        "body": "components.hideout:StartSpawning()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideout.OnUpdate:": {
        "prefix": "components.hideout:OnUpdate",
        "body": "components.hideout:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.SetSpawnPeriod:": {
        "prefix": "components.hideout:SetSpawnPeriod",
        "body": "components.hideout:SetSpawnPeriod(${1:period},${2:variance})",
        "description": "参数:(period)<>[],(variance)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.LongUpdate:": {
        "prefix": "components.hideout:LongUpdate",
        "body": "components.hideout:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "hideout.CanRelease:": {
        "prefix": "components.hideout:CanRelease",
        "body": "components.hideout:CanRelease()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hideout.GoHome:": {
        "prefix": "components.hideout:GoHome",
        "body": "components.hideout:GoHome(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "highlight.SetAddColour:": {
        "prefix": "components.highlight:SetAddColour",
        "body": "components.highlight:SetAddColour(${1:col})",
        "description": "参数:(col)<>[] 返回值:无返回值 贡献者:@"
    },
    "highlight.OnRemoveFromEntity:": {
        "prefix": "components.highlight:OnRemoveFromEntity",
        "body": "components.highlight:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "highlight.OnUpdate:": {
        "prefix": "components.highlight:OnUpdate",
        "body": "components.highlight:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "highlight.UnHighlight:": {
        "prefix": "components.highlight:UnHighlight",
        "body": "components.highlight:UnHighlight()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "highlight.Highlight:": {
        "prefix": "components.highlight:Highlight",
        "body": "components.highlight:Highlight(${1:r},${2:g},${3:b})",
        "description": "参数:(r)<>[],(g)<>[],(b)<>[] 返回值:无返回值 贡献者:@"
    },
    "highlight.Flash:": {
        "prefix": "components.highlight:Flash",
        "body": "components.highlight:Flash(${1:toadd},${2:timein},${3:timeout})",
        "description": "参数:(toadd)<>[],(timein)<>[],(timeout)<>[] 返回值:无返回值 贡献者:@"
    },
    "highlight.ApplyColour:": {
        "prefix": "components.highlight:ApplyColour",
        "body": "components.highlight:ApplyColour()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "highlightchild.SetOwner:": {
        "prefix": "components.highlightchild:SetOwner",
        "body": "components.highlightchild:SetOwner(${1:owner})",
        "description": "参数:(owner)<>[] 返回值:无返回值 贡献者:@"
    },
    "highlightchild.OnChangeOwner:": {
        "prefix": "components.highlightchild:OnChangeOwner",
        "body": "components.highlightchild:OnChangeOwner(${1:owner})",
        "description": "参数:(owner)<>[] 返回值:无返回值 贡献者:@"
    },
    "highlightchild.OnRemoveEntity:": {
        "prefix": "components.highlightchild:OnRemoveEntity",
        "body": "components.highlightchild:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hitchable.SetHitched:": {
        "prefix": "components.hitchable:SetHitched",
        "body": "components.hitchable:SetHitched(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "hitchable.OnSave:": {
        "prefix": "components.hitchable:OnSave",
        "body": "components.hitchable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hitchable.OnLoad:": {
        "prefix": "components.hitchable:OnLoad",
        "body": "components.hitchable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "hitchable.Unhitch:": {
        "prefix": "components.hitchable:Unhitch",
        "body": "components.hitchable:Unhitch()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hitchable.GetHitch:": {
        "prefix": "components.hitchable:GetHitch",
        "body": "components.hitchable:GetHitch()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hitcher.SetHitched:": {
        "prefix": "components.hitcher:SetHitched",
        "body": "components.hitcher:SetHitched(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "hitcher.OnSave:": {
        "prefix": "components.hitcher:OnSave",
        "body": "components.hitcher:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hitcher.OnLoad:": {
        "prefix": "components.hitcher:OnLoad",
        "body": "components.hitcher:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "hitcher.Unhitch:": {
        "prefix": "components.hitcher:Unhitch",
        "body": "components.hitcher:Unhitch()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hitcher.GetHitched:": {
        "prefix": "components.hitcher:GetHitched",
        "body": "components.hitcher:GetHitched()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hitcher.Lock:": {
        "prefix": "components.hitcher:Lock",
        "body": "components.hitcher:Lock(${1:setting})",
        "description": "参数:(setting)<>[] 返回值:无返回值 贡献者:@"
    },
    "homeseeker.SetHome:": {
        "prefix": "components.homeseeker:SetHome",
        "body": "components.homeseeker:SetHome(${1:home})",
        "description": "参数:(home)<>[] 返回值:无返回值 贡献者:@"
    },
    "homeseeker.HasHome:": {
        "prefix": "components.homeseeker:HasHome",
        "body": "components.homeseeker:HasHome()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "homeseeker.GetHomeDirectTravelTime:": {
        "prefix": "components.homeseeker:GetHomeDirectTravelTime",
        "body": "components.homeseeker:GetHomeDirectTravelTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "homeseeker.GetDebugString:": {
        "prefix": "components.homeseeker:GetDebugString",
        "body": "components.homeseeker:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "homeseeker.GetHome:": {
        "prefix": "components.homeseeker:GetHome",
        "body": "components.homeseeker:GetHome()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "homeseeker.GetHomePos:": {
        "prefix": "components.homeseeker:GetHomePos",
        "body": "components.homeseeker:GetHomePos()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "homeseeker.GoHome:": {
        "prefix": "components.homeseeker:GoHome",
        "body": "components.homeseeker:GoHome(${1:shouldrun})",
        "description": "参数:(shouldrun)<>[] 返回值:无返回值 贡献者:@"
    },
    "houndedtarget.IsHoundThief:": {
        "prefix": "components.houndedtarget:IsHoundThief",
        "body": "components.houndedtarget:IsHoundThief()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "houndedtarget.GetTargetWeight:": {
        "prefix": "components.houndedtarget:GetTargetWeight",
        "body": "components.houndedtarget:GetTargetWeight()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hudindicatable.OnRemoveFromEntity:": {
        "prefix": "components.hudindicatable:OnRemoveFromEntity",
        "body": "components.hudindicatable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hudindicatable.SetShouldTrackFunction:": {
        "prefix": "components.hudindicatable:SetShouldTrackFunction",
        "body": "components.hudindicatable:SetShouldTrackFunction(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "hudindicatable.RegisterWithWorldComponent:": {
        "prefix": "components.hudindicatable:RegisterWithWorldComponent",
        "body": "components.hudindicatable:RegisterWithWorldComponent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hudindicatable.UnRegisterWithWorldComponent:": {
        "prefix": "components.hudindicatable:UnRegisterWithWorldComponent",
        "body": "components.hudindicatable:UnRegisterWithWorldComponent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hudindicatable.ShouldTrack:": {
        "prefix": "components.hudindicatable:ShouldTrack",
        "body": "components.hudindicatable:ShouldTrack(${1:viewer})",
        "description": "参数:(viewer)<>[] 返回值:无返回值 贡献者:@"
    },
    "hudindicatorwatcher.ShouldRemoveIndicator:": {
        "prefix": "components.hudindicatorwatcher:ShouldRemoveIndicator",
        "body": "components.hudindicatorwatcher:ShouldRemoveIndicator(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "hudindicatorwatcher.ShouldShowIndicator:": {
        "prefix": "components.hudindicatorwatcher:ShouldShowIndicator",
        "body": "components.hudindicatorwatcher:ShouldShowIndicator(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "hudindicatorwatcher.OnRemoveFromEntity:": {
        "prefix": "components.hudindicatorwatcher:OnRemoveFromEntity",
        "body": "components.hudindicatorwatcher:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hudindicatorwatcher.OnUpdate:": {
        "prefix": "components.hudindicatorwatcher:OnUpdate",
        "body": "components.hudindicatorwatcher:OnUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hull.GetRadius:": {
        "prefix": "components.hull:GetRadius",
        "body": "components.hull:GetRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "hull.FinishRemovingEntity:": {
        "prefix": "components.hull:FinishRemovingEntity",
        "body": "components.hull:FinishRemovingEntity(${1:entity})",
        "description": "参数:(entity)<>[] 返回值:无返回值 贡献者:@"
    },
    "hull.SetPlank:": {
        "prefix": "components.hull:SetPlank",
        "body": "components.hull:SetPlank(${1:obj})",
        "description": "参数:(obj)<>[] 返回值:无返回值 贡献者:@"
    },
    "hull.SetRadius:": {
        "prefix": "components.hull:SetRadius",
        "body": "components.hull:SetRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "hull.OnDeployed:": {
        "prefix": "components.hull:OnDeployed",
        "body": "components.hull:OnDeployed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hull.LoadPostPass:": {
        "prefix": "components.hull:LoadPostPass",
        "body": "components.hull:LoadPostPass(${1:ents},${2:data})",
        "description": "参数:(ents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "hull.AttachEntityToBoat:": {
        "prefix": "components.hull:AttachEntityToBoat",
        "body": "components.hull:AttachEntityToBoat(${1:obj},${2:offset_x},${3:offset_z},${4:parent_to_boat})",
        "description": "参数:(obj)<>[],(offset_x)<>[],(offset_z)<>[],(parent_to_boat)<>[] 返回值:无返回值 贡献者:@"
    },
    "hull.SetBoatLip:": {
        "prefix": "components.hull:SetBoatLip",
        "body": "components.hull:SetBoatLip(${1:obj},${2:scale})",
        "description": "参数:(obj)<>[],(scale)<>[] 返回值:无返回值 贡献者:@"
    },
    "hull.OnSave:": {
        "prefix": "components.hull:OnSave",
        "body": "components.hull:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hullhealth.GetLeakPosition:": {
        "prefix": "components.hullhealth:GetLeakPosition",
        "body": "components.hullhealth:GetLeakPosition(${1:idx})",
        "description": "参数:(idx)<>[] 返回值:无返回值 贡献者:@"
    },
    "hullhealth.OnCollide:": {
        "prefix": "components.hullhealth:OnCollide",
        "body": "components.hullhealth:OnCollide(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "hullhealth.SpawnDegadeDebris:": {
        "prefix": "components.hullhealth:SpawnDegadeDebris",
        "body": "components.hullhealth:SpawnDegadeDebris()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hullhealth.RefreshLeakIndicator:": {
        "prefix": "components.hullhealth:RefreshLeakIndicator",
        "body": "components.hullhealth:RefreshLeakIndicator(${1:leak_idx})",
        "description": "参数:(leak_idx)<>[] 返回值:无返回值 贡献者:@"
    },
    "hullhealth.GetLeakAngle:": {
        "prefix": "components.hullhealth:GetLeakAngle",
        "body": "components.hullhealth:GetLeakAngle(${1:idx})",
        "description": "参数:(idx)<>[] 返回值:无返回值 贡献者:@"
    },
    "hullhealth.SetSelfDegrading:": {
        "prefix": "components.hullhealth:SetSelfDegrading",
        "body": "components.hullhealth:SetSelfDegrading(${1:stat})",
        "description": "参数:(stat)<>[] 返回值:无返回值 贡献者:@"
    },
    "hullhealth.UpdateHealth:": {
        "prefix": "components.hullhealth:UpdateHealth",
        "body": "components.hullhealth:UpdateHealth()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hullhealth.OnUpdate:": {
        "prefix": "components.hullhealth:OnUpdate",
        "body": "components.hullhealth:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "hullhealth.LoadPostPass:": {
        "prefix": "components.hullhealth:LoadPostPass",
        "body": "components.hullhealth:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "hullhealth.OnSave:": {
        "prefix": "components.hullhealth:OnSave",
        "body": "components.hullhealth:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hunger.Pause:": {
        "prefix": "components.hunger:Pause",
        "body": "components.hunger:Pause()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hunger.OnSave:": {
        "prefix": "components.hunger:OnSave",
        "body": "components.hunger:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hunger.LongUpdate:": {
        "prefix": "components.hunger:LongUpdate",
        "body": "components.hunger:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "hunger.SetKillRate:": {
        "prefix": "components.hunger:SetKillRate",
        "body": "components.hunger:SetKillRate(${1:rate})",
        "description": "参数:(rate)<>[] 返回值:无返回值 贡献者:@"
    },
    "hunger.SetPercent:": {
        "prefix": "components.hunger:SetPercent",
        "body": "components.hunger:SetPercent(${1:p},${2:overtime})",
        "description": "参数:(p)<>[],(overtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "hunger.IsStarving:": {
        "prefix": "components.hunger:IsStarving",
        "body": "components.hunger:IsStarving()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hunger.Resume:": {
        "prefix": "components.hunger:Resume",
        "body": "components.hunger:Resume()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hunger.DoDec:": {
        "prefix": "components.hunger:DoDec",
        "body": "components.hunger:DoDec(${1:dt},${2:ignore_damage})",
        "description": "参数:(dt)<>[],(ignore_damage)<>[] 返回值:无返回值 贡献者:@"
    },
    "hunger.IsPaused:": {
        "prefix": "components.hunger:IsPaused",
        "body": "components.hunger:IsPaused()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hunger.OnLoad:": {
        "prefix": "components.hunger:OnLoad",
        "body": "components.hunger:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "hunger.GetDebugString:": {
        "prefix": "components.hunger:GetDebugString",
        "body": "components.hunger:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hunger.SetMax:": {
        "prefix": "components.hunger:SetMax",
        "body": "components.hunger:SetMax(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "hunger.SetRate:": {
        "prefix": "components.hunger:SetRate",
        "body": "components.hunger:SetRate(${1:rate})",
        "description": "参数:(rate)<>[] 返回值:无返回值 贡献者:@"
    },
    "hunger.GetPercent:": {
        "prefix": "components.hunger:GetPercent",
        "body": "components.hunger:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "hunger.DoDelta:": {
        "prefix": "components.hunger:DoDelta",
        "body": "components.hunger:DoDelta(${1:delta},${2:overtime},${3:ignore_invincible})",
        "description": "参数:(delta)<>[],(overtime)<>[],(ignore_invincible)<>[] 返回值:无返回值 贡献者:@"
    },
    "hunger.SetOverrideStarveFn:": {
        "prefix": "components.hunger:SetOverrideStarveFn",
        "body": "components.hunger:SetOverrideStarveFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "hunger.TransferComponent:": {
        "prefix": "components.hunger:TransferComponent",
        "body": "components.hunger:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "incinerator.Incinerate:": {
        "prefix": "components.incinerator:Incinerate",
        "body": "components.incinerator:Incinerate(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "incinerator.SetOnIncinerateFn:": {
        "prefix": "components.incinerator:SetOnIncinerateFn",
        "body": "components.incinerator:SetOnIncinerateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "incinerator.ShouldIncinerateItem:": {
        "prefix": "components.incinerator:ShouldIncinerateItem",
        "body": "components.incinerator:ShouldIncinerateItem(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "incinerator.SetShouldIncinerateItemFn:": {
        "prefix": "components.incinerator:SetShouldIncinerateItemFn",
        "body": "components.incinerator:SetShouldIncinerateItemFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "incrementalproducer.GetDebugString:": {
        "prefix": "components.incrementalproducer:GetDebugString",
        "body": "components.incrementalproducer:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "incrementalproducer.CanProduce:": {
        "prefix": "components.incrementalproducer:CanProduce",
        "body": "components.incrementalproducer:CanProduce()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "incrementalproducer.DoProduce:": {
        "prefix": "components.incrementalproducer:DoProduce",
        "body": "components.incrementalproducer:DoProduce()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "incrementalproducer.TryProduce:": {
        "prefix": "components.incrementalproducer:TryProduce",
        "body": "components.incrementalproducer:TryProduce()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inkable.TransferComponent:": {
        "prefix": "components.inkable:TransferComponent",
        "body": "components.inkable:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "inkable.OnUpdate:": {
        "prefix": "components.inkable:OnUpdate",
        "body": "components.inkable:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "inkable.Ink:": {
        "prefix": "components.inkable:Ink",
        "body": "components.inkable:Ink()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectable.SetNameOverride:": {
        "prefix": "components.inspectable:SetNameOverride",
        "body": "components.inspectable:SetNameOverride(${1:nameoverride})",
        "description": "参数:(nameoverride)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectable.RecordViews:": {
        "prefix": "components.inspectable:RecordViews",
        "body": "components.inspectable:RecordViews(${1:state})",
        "description": "参数:(state)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectable.GetStatus:": {
        "prefix": "components.inspectable:GetStatus",
        "body": "components.inspectable:GetStatus(${1:viewer})",
        "description": "参数:(viewer)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectable.OnRemoveFromEntity:": {
        "prefix": "components.inspectable:OnRemoveFromEntity",
        "body": "components.inspectable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectable.GetDescription:": {
        "prefix": "components.inspectable:GetDescription",
        "body": "components.inspectable:GetDescription(${1:viewer})",
        "description": "参数:(viewer)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.CreateNewAndOrShowCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:CreateNewAndOrShowCurrentGame",
        "body": "components.inspectaclesparticipant:CreateNewAndOrShowCurrentGame()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.OnRemoveFromEntity:": {
        "prefix": "components.inspectaclesparticipant:OnRemoveFromEntity",
        "body": "components.inspectaclesparticipant:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.IsParticipantClose:": {
        "prefix": "components.inspectaclesparticipant:IsParticipantClose",
        "body": "components.inspectaclesparticipant:IsParticipantClose(${1:range})",
        "description": "参数:(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.UpdateBox:": {
        "prefix": "components.inspectaclesparticipant:UpdateBox",
        "body": "components.inspectaclesparticipant:UpdateBox()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.SetCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:SetCurrentGame",
        "body": "components.inspectaclesparticipant:SetCurrentGame(${1:gameid},${2:posx},${3:posz})",
        "description": "参数:(gameid)<>[],(posx)<>[],(posz)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.ShowCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:ShowCurrentGame",
        "body": "components.inspectaclesparticipant:ShowCurrentGame()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.FindGameLocation:": {
        "prefix": "components.inspectaclesparticipant:FindGameLocation",
        "body": "components.inspectaclesparticipant:FindGameLocation(${1:gameid})",
        "description": "参数:(gameid)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.HideCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:HideCurrentGame",
        "body": "components.inspectaclesparticipant:HideCurrentGame()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.GetSERVERDetails:": {
        "prefix": "components.inspectaclesparticipant:GetSERVERDetails",
        "body": "components.inspectaclesparticipant:GetSERVERDetails()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.OnCooldownFinished:": {
        "prefix": "components.inspectaclesparticipant:OnCooldownFinished",
        "body": "components.inspectaclesparticipant:OnCooldownFinished()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.IsFreeGame:": {
        "prefix": "components.inspectaclesparticipant:IsFreeGame",
        "body": "components.inspectaclesparticipant:IsFreeGame(${1:game})",
        "description": "参数:(game)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.ApplyCooldown:": {
        "prefix": "components.inspectaclesparticipant:ApplyCooldown",
        "body": "components.inspectaclesparticipant:ApplyCooldown(${1:overridetime})",
        "description": "参数:(overridetime)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.FinishCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:FinishCurrentGame",
        "body": "components.inspectaclesparticipant:FinishCurrentGame()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.CreateBox:": {
        "prefix": "components.inspectaclesparticipant:CreateBox",
        "body": "components.inspectaclesparticipant:CreateBox()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.CheckGameSolution:": {
        "prefix": "components.inspectaclesparticipant:CheckGameSolution",
        "body": "components.inspectaclesparticipant:CheckGameSolution(${1:solution})",
        "description": "参数:(solution)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.CanCreateGameInWorld:": {
        "prefix": "components.inspectaclesparticipant:CanCreateGameInWorld",
        "body": "components.inspectaclesparticipant:CanCreateGameInWorld()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.OnClosePopup:": {
        "prefix": "components.inspectaclesparticipant:OnClosePopup",
        "body": "components.inspectaclesparticipant:OnClosePopup(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.CalculateGamePuzzle:": {
        "prefix": "components.inspectaclesparticipant:CalculateGamePuzzle",
        "body": "components.inspectaclesparticipant:CalculateGamePuzzle(${1:gameid},${2:posx},${3:posz})",
        "description": "参数:(gameid)<>[],(posx)<>[],(posz)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.ShouldStopGameInteractions:": {
        "prefix": "components.inspectaclesparticipant:ShouldStopGameInteractions",
        "body": "components.inspectaclesparticipant:ShouldStopGameInteractions()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.NetworkCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:NetworkCurrentGame",
        "body": "components.inspectaclesparticipant:NetworkCurrentGame()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.IsUpgradedBox:": {
        "prefix": "components.inspectaclesparticipant:IsUpgradedBox",
        "body": "components.inspectaclesparticipant:IsUpgradedBox()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.OnLoad:": {
        "prefix": "components.inspectaclesparticipant:OnLoad",
        "body": "components.inspectaclesparticipant:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.GetDebugString:": {
        "prefix": "components.inspectaclesparticipant:GetDebugString",
        "body": "components.inspectaclesparticipant:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.OnSignalPulse:": {
        "prefix": "components.inspectaclesparticipant:OnSignalPulse",
        "body": "components.inspectaclesparticipant:OnSignalPulse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.OnSave:": {
        "prefix": "components.inspectaclesparticipant:OnSave",
        "body": "components.inspectaclesparticipant:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.GetCLIENTDetails:": {
        "prefix": "components.inspectaclesparticipant:GetCLIENTDetails",
        "body": "components.inspectaclesparticipant:GetCLIENTDetails()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.LongUpdate:": {
        "prefix": "components.inspectaclesparticipant:LongUpdate",
        "body": "components.inspectaclesparticipant:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.IsInCooldown:": {
        "prefix": "components.inspectaclesparticipant:IsInCooldown",
        "body": "components.inspectaclesparticipant:IsInCooldown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.UpdateInspectacles:": {
        "prefix": "components.inspectaclesparticipant:UpdateInspectacles",
        "body": "components.inspectaclesparticipant:UpdateInspectacles()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.GrantRewards:": {
        "prefix": "components.inspectaclesparticipant:GrantRewards",
        "body": "components.inspectaclesparticipant:GrantRewards()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.GetPuzzleData:": {
        "prefix": "components.inspectaclesparticipant:GetPuzzleData",
        "body": "components.inspectaclesparticipant:GetPuzzleData(${1:puzzle})",
        "description": "参数:(puzzle)<>[] 返回值:无返回值 贡献者:@"
    },
    "inspectaclesparticipant.OnInspectaclesGameChanged:": {
        "prefix": "components.inspectaclesparticipant:OnInspectaclesGameChanged",
        "body": "components.inspectaclesparticipant:OnInspectaclesGameChanged(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "instrument.SetOnHeardFn:": {
        "prefix": "components.instrument:SetOnHeardFn",
        "body": "components.instrument:SetOnHeardFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "instrument.Play:": {
        "prefix": "components.instrument:Play",
        "body": "components.instrument:Play(${1:musician})",
        "description": "参数:(musician)<>[] 返回值:无返回值 贡献者:@"
    },
    "instrument.SetOnPlayedFn:": {
        "prefix": "components.instrument:SetOnPlayedFn",
        "body": "components.instrument:SetOnPlayedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "insulator.SetInsulation:": {
        "prefix": "components.insulator:SetInsulation",
        "body": "components.insulator:SetInsulation(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "insulator.GetInsulation:": {
        "prefix": "components.insulator:GetInsulation",
        "body": "components.insulator:GetInsulation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "insulator.SetSummer:": {
        "prefix": "components.insulator:SetSummer",
        "body": "components.insulator:SetSummer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "insulator.GetType:": {
        "prefix": "components.insulator:GetType",
        "body": "components.insulator:GetType()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "insulator.IsType:": {
        "prefix": "components.insulator:IsType",
        "body": "components.insulator:IsType(${1:type})",
        "description": "参数:(type)<>[] 返回值:无返回值 贡献者:@"
    },
    "insulator.SetWinter:": {
        "prefix": "components.insulator:SetWinter",
        "body": "components.insulator:SetWinter()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.GetItemSlot:": {
        "prefix": "components.inventory:GetItemSlot",
        "body": "components.inventory:GetItemSlot(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.PutAllOfActiveItemInSlot:": {
        "prefix": "components.inventory:PutAllOfActiveItemInSlot",
        "body": "components.inventory:PutAllOfActiveItemInSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.OnSave:": {
        "prefix": "components.inventory:OnSave",
        "body": "components.inventory:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.SetActiveItem:": {
        "prefix": "components.inventory:SetActiveItem",
        "body": "components.inventory:SetActiveItem(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.RemoveItem:": {
        "prefix": "components.inventory:RemoveItem",
        "body": "components.inventory:RemoveItem(${1:item},${2:wholestack},${3:checkallcontainers},${4:keepoverstacked})",
        "description": "参数:(item)<>[],(wholestack)<>[],(checkallcontainers)<>[],(keepoverstacked)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.ControllerUseItemOnItemFromInvTile:": {
        "prefix": "components.inventory:ControllerUseItemOnItemFromInvTile",
        "body": "components.inventory:ControllerUseItemOnItemFromInvTile(${1:item},${2:active_item},${3:actioncode},${4:mod_name})",
        "description": "参数:(item)<>[],(active_item)<>[],(actioncode)<>[],(mod_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.Open:": {
        "prefix": "components.inventory:Open",
        "body": "components.inventory:Open()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.ForEachWetableItem:": {
        "prefix": "components.inventory:ForEachWetableItem",
        "body": "components.inventory:ForEachWetableItem(${1:fn},${2:...})",
        "description": "参数:(fn)<>[],(...)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GetActiveItem:": {
        "prefix": "components.inventory:GetActiveItem",
        "body": "components.inventory:GetActiveItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.ConsumeByName:": {
        "prefix": "components.inventory:ConsumeByName",
        "body": "components.inventory:ConsumeByName(${1:item},${2:amount})",
        "description": "参数:(item)<>[],(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.UseItemFromInvTile:": {
        "prefix": "components.inventory:UseItemFromInvTile",
        "body": "components.inventory:UseItemFromInvTile(${1:item},${2:actioncode},${3:mod_name})",
        "description": "参数:(item)<>[],(actioncode)<>[],(mod_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GetItemInSlot:": {
        "prefix": "components.inventory:GetItemInSlot",
        "body": "components.inventory:GetItemInSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.ForEachEquipment:": {
        "prefix": "components.inventory:ForEachEquipment",
        "body": "components.inventory:ForEachEquipment(${1:fn},${2:...})",
        "description": "参数:(fn)<>[],(...)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.ForEachItem:": {
        "prefix": "components.inventory:ForEachItem",
        "body": "components.inventory:ForEachItem(${1:fn},${2:...})",
        "description": "参数:(fn)<>[],(...)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.CastSpellBookFromInv:": {
        "prefix": "components.inventory:CastSpellBookFromInv",
        "body": "components.inventory:CastSpellBookFromInv(${1:item},${2:spell_id})",
        "description": "参数:(item)<>[],(spell_id)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.CombineActiveStackWithSlot:": {
        "prefix": "components.inventory:CombineActiveStackWithSlot",
        "body": "components.inventory:CombineActiveStackWithSlot(${1:slot},${2:stack_mod})",
        "description": "参数:(slot)<>[],(stack_mod)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.EquipActionItem:": {
        "prefix": "components.inventory:EquipActionItem",
        "body": "components.inventory:EquipActionItem(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.IsOpenedBy:": {
        "prefix": "components.inventory:IsOpenedBy",
        "body": "components.inventory:IsOpenedBy(${1:guy})",
        "description": "参数:(guy)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.FindItems:": {
        "prefix": "components.inventory:FindItems",
        "body": "components.inventory:FindItems(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.AddOneOfActiveItemToSlot:": {
        "prefix": "components.inventory:AddOneOfActiveItemToSlot",
        "body": "components.inventory:AddOneOfActiveItemToSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.IsFull:": {
        "prefix": "components.inventory:IsFull",
        "body": "components.inventory:IsFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.Hide:": {
        "prefix": "components.inventory:Hide",
        "body": "components.inventory:Hide()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.GetOverflowContainer:": {
        "prefix": "components.inventory:GetOverflowContainer",
        "body": "components.inventory:GetOverflowContainer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.IsWearingArmor:": {
        "prefix": "components.inventory:IsWearingArmor",
        "body": "components.inventory:IsWearingArmor()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.TransferInventory:": {
        "prefix": "components.inventory:TransferInventory",
        "body": "components.inventory:TransferInventory(${1:receiver})",
        "description": "参数:(receiver)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.CanAcceptCount:": {
        "prefix": "components.inventory:CanAcceptCount",
        "body": "components.inventory:CanAcceptCount(${1:item},${2:maxcount})",
        "description": "参数:(item)<>[],(maxcount)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.EquipHasTag:": {
        "prefix": "components.inventory:EquipHasTag",
        "body": "components.inventory:EquipHasTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.DropEquipped:": {
        "prefix": "components.inventory:DropEquipped",
        "body": "components.inventory:DropEquipped(${1:keepBackpack})",
        "description": "参数:(keepBackpack)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.EquipHasSpDefenseForType:": {
        "prefix": "components.inventory:EquipHasSpDefenseForType",
        "body": "components.inventory:EquipHasSpDefenseForType(${1:sptype})",
        "description": "参数:(sptype)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GetDebugString:": {
        "prefix": "components.inventory:GetDebugString",
        "body": "components.inventory:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.InspectItemFromInvTile:": {
        "prefix": "components.inventory:InspectItemFromInvTile",
        "body": "components.inventory:InspectItemFromInvTile(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.Equip:": {
        "prefix": "components.inventory:Equip",
        "body": "components.inventory:Equip(${1:item},${2:old_to_active},${3:no_animation},${4:force_ui_anim})",
        "description": "参数:(item)<>[],(old_to_active)<>[],(no_animation)<>[],(force_ui_anim)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.DropEverything:": {
        "prefix": "components.inventory:DropEverything",
        "body": "components.inventory:DropEverything(${1:ondeath},${2:keepequip})",
        "description": "参数:(ondeath)<>[],(keepequip)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.Unequip:": {
        "prefix": "components.inventory:Unequip",
        "body": "components.inventory:Unequip(${1:equipslot},${2:slip})",
        "description": "参数:(equipslot)<>[],(slip)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.HasAnyEquipment:": {
        "prefix": "components.inventory:HasAnyEquipment",
        "body": "components.inventory:HasAnyEquipment()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.GetFirstItemInAnySlot:": {
        "prefix": "components.inventory:GetFirstItemInAnySlot",
        "body": "components.inventory:GetFirstItemInAnySlot()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.ArmorHasTag:": {
        "prefix": "components.inventory:ArmorHasTag",
        "body": "components.inventory:ArmorHasTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.TakeActiveItemFromHalfOfSlot:": {
        "prefix": "components.inventory:TakeActiveItemFromHalfOfSlot",
        "body": "components.inventory:TakeActiveItemFromHalfOfSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.RemoveItemBySlot:": {
        "prefix": "components.inventory:RemoveItemBySlot",
        "body": "components.inventory:RemoveItemBySlot(${1:slot},${2:keepoverstacked})",
        "description": "参数:(slot)<>[],(keepoverstacked)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GiveActiveItem:": {
        "prefix": "components.inventory:GiveActiveItem",
        "body": "components.inventory:GiveActiveItem(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.Has:": {
        "prefix": "components.inventory:Has",
        "body": "components.inventory:Has(${1:item},${2:amount},${3:checkallcontainers})",
        "description": "参数:(item)<>[],(amount)<>[],(checkallcontainers)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.DropEverythingWithTag:": {
        "prefix": "components.inventory:DropEverythingWithTag",
        "body": "components.inventory:DropEverythingWithTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.Close:": {
        "prefix": "components.inventory:Close",
        "body": "components.inventory:Close(${1:keepactiveitem})",
        "description": "参数:(keepactiveitem)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GetEquippedItem:": {
        "prefix": "components.inventory:GetEquippedItem",
        "body": "components.inventory:GetEquippedItem(${1:eslot})",
        "description": "参数:(eslot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GetWaterproofness:": {
        "prefix": "components.inventory:GetWaterproofness",
        "body": "components.inventory:GetWaterproofness(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GiveItem:": {
        "prefix": "components.inventory:GiveItem",
        "body": "components.inventory:GiveItem(${1:inst},${2:slot},${3:src_pos})",
        "description": "参数:(inst)<>[],(slot)<>[],(src_pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.IsInsulated:": {
        "prefix": "components.inventory:IsInsulated",
        "body": "components.inventory:IsInsulated()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.AcceptsStacks:": {
        "prefix": "components.inventory:AcceptsStacks",
        "body": "components.inventory:AcceptsStacks()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.TransferComponent:": {
        "prefix": "components.inventory:TransferComponent",
        "body": "components.inventory:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.ApplyDamage:": {
        "prefix": "components.inventory:ApplyDamage",
        "body": "components.inventory:ApplyDamage(${1:damage},${2:attacker},${3:weapon},${4:spdamage})",
        "description": "参数:(damage)<>[],(attacker)<>[],(weapon)<>[],(spdamage)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.IsWaterproof:": {
        "prefix": "components.inventory:IsWaterproof",
        "body": "components.inventory:IsWaterproof()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.HasItemWithTag:": {
        "prefix": "components.inventory:HasItemWithTag",
        "body": "components.inventory:HasItemWithTag(${1:tag},${2:amount})",
        "description": "参数:(tag)<>[],(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GetEquippedMoistureRate:": {
        "prefix": "components.inventory:GetEquippedMoistureRate",
        "body": "components.inventory:GetEquippedMoistureRate(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.FindItem:": {
        "prefix": "components.inventory:FindItem",
        "body": "components.inventory:FindItem(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.MoveItemFromHalfOfSlot:": {
        "prefix": "components.inventory:MoveItemFromHalfOfSlot",
        "body": "components.inventory:MoveItemFromHalfOfSlot(${1:slot},${2:container})",
        "description": "参数:(slot)<>[],(container)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.DropActiveItem:": {
        "prefix": "components.inventory:DropActiveItem",
        "body": "components.inventory:DropActiveItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.MoveItemFromAllOfSlot:": {
        "prefix": "components.inventory:MoveItemFromAllOfSlot",
        "body": "components.inventory:MoveItemFromAllOfSlot(${1:slot},${2:container})",
        "description": "参数:(slot)<>[],(container)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.ControllerUseItemOnSceneFromInvTile:": {
        "prefix": "components.inventory:ControllerUseItemOnSceneFromInvTile",
        "body": "components.inventory:ControllerUseItemOnSceneFromInvTile(${1:item},${2:target},${3:actioncode},${4:mod_name})",
        "description": "参数:(item)<>[],(target)<>[],(actioncode)<>[],(mod_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.HasItemThatMatches:": {
        "prefix": "components.inventory:HasItemThatMatches",
        "body": "components.inventory:HasItemThatMatches(${1:fn},${2:amount})",
        "description": "参数:(fn)<>[],(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GetItemsWithTag:": {
        "prefix": "components.inventory:GetItemsWithTag",
        "body": "components.inventory:GetItemsWithTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.IsItemEquipped:": {
        "prefix": "components.inventory:IsItemEquipped",
        "body": "components.inventory:IsItemEquipped(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.TakeActiveItemFromEquipSlotID:": {
        "prefix": "components.inventory:TakeActiveItemFromEquipSlotID",
        "body": "components.inventory:TakeActiveItemFromEquipSlotID(${1:eslotid})",
        "description": "参数:(eslotid)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.SelectActiveItemFromSlot:": {
        "prefix": "components.inventory:SelectActiveItemFromSlot",
        "body": "components.inventory:SelectActiveItemFromSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.TakeActiveItemFromEquipSlot:": {
        "prefix": "components.inventory:TakeActiveItemFromEquipSlot",
        "body": "components.inventory:TakeActiveItemFromEquipSlot(${1:eslot})",
        "description": "参数:(eslot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.SwapEquipWithActiveItem:": {
        "prefix": "components.inventory:SwapEquipWithActiveItem",
        "body": "components.inventory:SwapEquipWithActiveItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.PutOneOfActiveItemInSlot:": {
        "prefix": "components.inventory:PutOneOfActiveItemInSlot",
        "body": "components.inventory:PutOneOfActiveItemInSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.CanAccessItem:": {
        "prefix": "components.inventory:CanAccessItem",
        "body": "components.inventory:CanAccessItem(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.IsHeavyLifting:": {
        "prefix": "components.inventory:IsHeavyLifting",
        "body": "components.inventory:IsHeavyLifting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.EquipActiveItem:": {
        "prefix": "components.inventory:EquipActiveItem",
        "body": "components.inventory:EquipActiveItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.DropItem:": {
        "prefix": "components.inventory:DropItem",
        "body": "components.inventory:DropItem(${1:item},${2:wholestack},${3:randomdir},${4:pos},${5:keepoverstacked})",
        "description": "参数:(item)<>[],(wholestack)<>[],(randomdir)<>[],(pos)<>[],(keepoverstacked)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GetOpenContainerProxyFor:": {
        "prefix": "components.inventory:GetOpenContainerProxyFor",
        "body": "components.inventory:GetOpenContainerProxyFor(${1:master})",
        "description": "参数:(master)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.ReturnActiveActionItem:": {
        "prefix": "components.inventory:ReturnActiveActionItem",
        "body": "components.inventory:ReturnActiveActionItem(${1:item},${2:instant})",
        "description": "参数:(item)<>[],(instant)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.AddAllOfActiveItemToSlot:": {
        "prefix": "components.inventory:AddAllOfActiveItemToSlot",
        "body": "components.inventory:AddAllOfActiveItemToSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.ControllerUseItemOnSelfFromInvTile:": {
        "prefix": "components.inventory:ControllerUseItemOnSelfFromInvTile",
        "body": "components.inventory:ControllerUseItemOnSelfFromInvTile(${1:item},${2:actioncode},${3:mod_name})",
        "description": "参数:(item)<>[],(actioncode)<>[],(mod_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.BurnNonpotatableInContainer:": {
        "prefix": "components.inventory:BurnNonpotatableInContainer",
        "body": "components.inventory:BurnNonpotatableInContainer(${1:container})",
        "description": "参数:(container)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.ReturnActiveItem:": {
        "prefix": "components.inventory:ReturnActiveItem",
        "body": "components.inventory:ReturnActiveItem(${1:slot},${2:stack_mod})",
        "description": "参数:(slot)<>[],(stack_mod)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.SwapActiveItemWithSlot:": {
        "prefix": "components.inventory:SwapActiveItemWithSlot",
        "body": "components.inventory:SwapActiveItemWithSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.TakeActiveItemFromAllOfSlot:": {
        "prefix": "components.inventory:TakeActiveItemFromAllOfSlot",
        "body": "components.inventory:TakeActiveItemFromAllOfSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.CloseAllChestContainers:": {
        "prefix": "components.inventory:CloseAllChestContainers",
        "body": "components.inventory:CloseAllChestContainers()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.Show:": {
        "prefix": "components.inventory:Show",
        "body": "components.inventory:Show()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.IgnoresCanGoInContainer:": {
        "prefix": "components.inventory:IgnoresCanGoInContainer",
        "body": "components.inventory:IgnoresCanGoInContainer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.SwapEquipment:": {
        "prefix": "components.inventory:SwapEquipment",
        "body": "components.inventory:SwapEquipment(${1:other},${2:equipslot_to_swap})",
        "description": "参数:(other)<>[],(equipslot_to_swap)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.OnLoad:": {
        "prefix": "components.inventory:OnLoad",
        "body": "components.inventory:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.DropItemFromInvTile:": {
        "prefix": "components.inventory:DropItemFromInvTile",
        "body": "components.inventory:DropItemFromInvTile(${1:item},${2:single})",
        "description": "参数:(item)<>[],(single)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GetItemByName:": {
        "prefix": "components.inventory:GetItemByName",
        "body": "components.inventory:GetItemByName(${1:item},${2:amount},${3:checkallcontainers})",
        "description": "参数:(item)<>[],(amount)<>[],(checkallcontainers)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GetNextAvailableSlot:": {
        "prefix": "components.inventory:GetNextAvailableSlot",
        "body": "components.inventory:GetNextAvailableSlot(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.NumStackedItems:": {
        "prefix": "components.inventory:NumStackedItems",
        "body": "components.inventory:NumStackedItems()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.IsHolding:": {
        "prefix": "components.inventory:IsHolding",
        "body": "components.inventory:IsHolding(${1:item},${2:checkcontainer})",
        "description": "参数:(item)<>[],(checkcontainer)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.GetNumSlots:": {
        "prefix": "components.inventory:GetNumSlots",
        "body": "components.inventory:GetNumSlots()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.SelectActiveItemFromEquipSlot:": {
        "prefix": "components.inventory:SelectActiveItemFromEquipSlot",
        "body": "components.inventory:SelectActiveItemFromEquipSlot(${1:slot})",
        "description": "参数:(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.EnableDropOnDeath:": {
        "prefix": "components.inventory:EnableDropOnDeath",
        "body": "components.inventory:EnableDropOnDeath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.CanTakeItemInSlot:": {
        "prefix": "components.inventory:CanTakeItemInSlot",
        "body": "components.inventory:CanTakeItemInSlot(${1:item},${2:slot})",
        "description": "参数:(item)<>[],(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventory.ReferenceAllItems:": {
        "prefix": "components.inventory:ReferenceAllItems",
        "body": "components.inventory:ReferenceAllItems()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.NumItems:": {
        "prefix": "components.inventory:NumItems",
        "body": "components.inventory:NumItems()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventory.DisableDropOnDeath:": {
        "prefix": "components.inventory:DisableDropOnDeath",
        "body": "components.inventory:DisableDropOnDeath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.IsWet:": {
        "prefix": "components.inventoryitem:IsWet",
        "body": "components.inventoryitem:IsWet()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.OnRemoveFromEntity:": {
        "prefix": "components.inventoryitem:OnRemoveFromEntity",
        "body": "components.inventoryitem:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.EnableMoisture:": {
        "prefix": "components.inventoryitem:EnableMoisture",
        "body": "components.inventoryitem:EnableMoisture(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.DoDropPhysics:": {
        "prefix": "components.inventoryitem:DoDropPhysics",
        "body": "components.inventoryitem:DoDropPhysics(${1:x},${2:y},${3:z},${4:randomdir},${5:speedmult})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(randomdir)<>[],(speedmult)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.GetMoisture:": {
        "prefix": "components.inventoryitem:GetMoisture",
        "body": "components.inventoryitem:GetMoisture()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.OnRemoved:": {
        "prefix": "components.inventoryitem:OnRemoved",
        "body": "components.inventoryitem:OnRemoved()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.RemoveFromOwner:": {
        "prefix": "components.inventoryitem:RemoveFromOwner",
        "body": "components.inventoryitem:RemoveFromOwner(${1:wholestack},${2:keepoverstacked})",
        "description": "参数:(wholestack)<>[],(keepoverstacked)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.HibernateLivingItem:": {
        "prefix": "components.inventoryitem:HibernateLivingItem",
        "body": "components.inventoryitem:HibernateLivingItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.InheritWorldWetnessAtTarget:": {
        "prefix": "components.inventoryitem:InheritWorldWetnessAtTarget",
        "body": "components.inventoryitem:InheritWorldWetnessAtTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.InheritMoisture:": {
        "prefix": "components.inventoryitem:InheritMoisture",
        "body": "components.inventoryitem:InheritMoisture(${1:moisture},${2:iswet})",
        "description": "参数:(moisture)<>[],(iswet)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.OnRemoveEntity:": {
        "prefix": "components.inventoryitem:OnRemoveEntity",
        "body": "components.inventoryitem:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.WakeLivingItem:": {
        "prefix": "components.inventoryitem:WakeLivingItem",
        "body": "components.inventoryitem:WakeLivingItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.IsHeld:": {
        "prefix": "components.inventoryitem:IsHeld",
        "body": "components.inventoryitem:IsHeld()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.MakeMoistureAtLeast:": {
        "prefix": "components.inventoryitem:MakeMoistureAtLeast",
        "body": "components.inventoryitem:MakeMoistureAtLeast(${1:min})",
        "description": "参数:(min)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.DryMoisture:": {
        "prefix": "components.inventoryitem:DryMoisture",
        "body": "components.inventoryitem:DryMoisture()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.SetOnPutInInventoryFn:": {
        "prefix": "components.inventoryitem:SetOnPutInInventoryFn",
        "body": "components.inventoryitem:SetOnPutInInventoryFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.IsSheltered:": {
        "prefix": "components.inventoryitem:IsSheltered",
        "body": "components.inventoryitem:IsSheltered()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.OnDropped:": {
        "prefix": "components.inventoryitem:OnDropped",
        "body": "components.inventoryitem:OnDropped(${1:randomdir},${2:speedmult})",
        "description": "参数:(randomdir)<>[],(speedmult)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.AddMoisture:": {
        "prefix": "components.inventoryitem:AddMoisture",
        "body": "components.inventoryitem:AddMoisture(${1:delta})",
        "description": "参数:(delta)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.SetOwner:": {
        "prefix": "components.inventoryitem:SetOwner",
        "body": "components.inventoryitem:SetOwner(${1:owner})",
        "description": "参数:(owner)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.SetSinks:": {
        "prefix": "components.inventoryitem:SetSinks",
        "body": "components.inventoryitem:SetSinks(${1:should_sink})",
        "description": "参数:(should_sink)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.ChangeImageName:": {
        "prefix": "components.inventoryitem:ChangeImageName",
        "body": "components.inventoryitem:ChangeImageName(${1:newname})",
        "description": "参数:(newname)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.InheritWorldWetnessAtXZ:": {
        "prefix": "components.inventoryitem:InheritWorldWetnessAtXZ",
        "body": "components.inventoryitem:InheritWorldWetnessAtXZ(${1:x},${2:z})",
        "description": "参数:(x)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.GetSlotNum:": {
        "prefix": "components.inventoryitem:GetSlotNum",
        "body": "components.inventoryitem:GetSlotNum()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.TryToSink:": {
        "prefix": "components.inventoryitem:TryToSink",
        "body": "components.inventoryitem:TryToSink()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.GetGrandOwner:": {
        "prefix": "components.inventoryitem:GetGrandOwner",
        "body": "components.inventoryitem:GetGrandOwner()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.ShouldSink:": {
        "prefix": "components.inventoryitem:ShouldSink",
        "body": "components.inventoryitem:ShouldSink()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.SetLanded:": {
        "prefix": "components.inventoryitem:SetLanded",
        "body": "components.inventoryitem:SetLanded(${1:is_landed},${2:should_poll_for_landing})",
        "description": "参数:(is_landed)<>[],(should_poll_for_landing)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.ClearOwner:": {
        "prefix": "components.inventoryitem:ClearOwner",
        "body": "components.inventoryitem:ClearOwner()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.IsHeldBy:": {
        "prefix": "components.inventoryitem:IsHeldBy",
        "body": "components.inventoryitem:IsHeldBy(${1:guy})",
        "description": "参数:(guy)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.OnPutInInventory:": {
        "prefix": "components.inventoryitem:OnPutInInventory",
        "body": "components.inventoryitem:OnPutInInventory(${1:owner})",
        "description": "参数:(owner)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.GetContainer:": {
        "prefix": "components.inventoryitem:GetContainer",
        "body": "components.inventoryitem:GetContainer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.SetOnActiveItemFn:": {
        "prefix": "components.inventoryitem:SetOnActiveItemFn",
        "body": "components.inventoryitem:SetOnActiveItemFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.OnUpdate:": {
        "prefix": "components.inventoryitem:OnUpdate",
        "body": "components.inventoryitem:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.SetOnDroppedFn:": {
        "prefix": "components.inventoryitem:SetOnDroppedFn",
        "body": "components.inventoryitem:SetOnDroppedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.SetOnPickupFn:": {
        "prefix": "components.inventoryitem:SetOnPickupFn",
        "body": "components.inventoryitem:SetOnPickupFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.DiluteMoisture:": {
        "prefix": "components.inventoryitem:DiluteMoisture",
        "body": "components.inventoryitem:DiluteMoisture(${1:item},${2:count})",
        "description": "参数:(item)<>[],(count)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitem.IsAcidSizzling:": {
        "prefix": "components.inventoryitem:IsAcidSizzling",
        "body": "components.inventoryitem:IsAcidSizzling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.IsHolding:": {
        "prefix": "components.inventoryitemholder:IsHolding",
        "body": "components.inventoryitemholder:IsHolding()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.OnSave:": {
        "prefix": "components.inventoryitemholder:OnSave",
        "body": "components.inventoryitemholder:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.SetOnItemTakenFn:": {
        "prefix": "components.inventoryitemholder:SetOnItemTakenFn",
        "body": "components.inventoryitemholder:SetOnItemTakenFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.TakeItem:": {
        "prefix": "components.inventoryitemholder:TakeItem",
        "body": "components.inventoryitemholder:TakeItem(${1:taker})",
        "description": "参数:(taker)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.CanTake:": {
        "prefix": "components.inventoryitemholder:CanTake",
        "body": "components.inventoryitemholder:CanTake(${1:taker})",
        "description": "参数:(taker)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.OnRemoveFromEntity:": {
        "prefix": "components.inventoryitemholder:OnRemoveFromEntity",
        "body": "components.inventoryitemholder:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.SetAllowedTags:": {
        "prefix": "components.inventoryitemholder:SetAllowedTags",
        "body": "components.inventoryitemholder:SetAllowedTags(${1:tags})",
        "description": "参数:(tags)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.GetDebugString:": {
        "prefix": "components.inventoryitemholder:GetDebugString",
        "body": "components.inventoryitemholder:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.OnLoad:": {
        "prefix": "components.inventoryitemholder:OnLoad",
        "body": "components.inventoryitemholder:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.GiveItem:": {
        "prefix": "components.inventoryitemholder:GiveItem",
        "body": "components.inventoryitemholder:GiveItem(${1:item},${2:giver})",
        "description": "参数:(item)<>[],(giver)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.SetOnItemGivenFn:": {
        "prefix": "components.inventoryitemholder:SetOnItemGivenFn",
        "body": "components.inventoryitemholder:SetOnItemGivenFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemholder.CanGive:": {
        "prefix": "components.inventoryitemholder:CanGive",
        "body": "components.inventoryitemholder:CanGive(${1:item},${2:giver})",
        "description": "参数:(item)<>[],(giver)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.AttachReplica:": {
        "prefix": "components.inventoryitemmoisture:AttachReplica",
        "body": "components.inventoryitemmoisture:AttachReplica(${1:replica})",
        "description": "参数:(replica)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.InheritMoisture:": {
        "prefix": "components.inventoryitemmoisture:InheritMoisture",
        "body": "components.inventoryitemmoisture:InheritMoisture(${1:moisture},${2:iswet})",
        "description": "参数:(moisture)<>[],(iswet)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.OnEntitySleep:": {
        "prefix": "components.inventoryitemmoisture:OnEntitySleep",
        "body": "components.inventoryitemmoisture:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.OnEntityWake:": {
        "prefix": "components.inventoryitemmoisture:OnEntityWake",
        "body": "components.inventoryitemmoisture:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.OnRemoveFromEntity:": {
        "prefix": "components.inventoryitemmoisture:OnRemoveFromEntity",
        "body": "components.inventoryitemmoisture:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.GetDebugString:": {
        "prefix": "components.inventoryitemmoisture:GetDebugString",
        "body": "components.inventoryitemmoisture:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.UpdateMoisture:": {
        "prefix": "components.inventoryitemmoisture:UpdateMoisture",
        "body": "components.inventoryitemmoisture:UpdateMoisture(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.MakeMoistureAtLeast:": {
        "prefix": "components.inventoryitemmoisture:MakeMoistureAtLeast",
        "body": "components.inventoryitemmoisture:MakeMoistureAtLeast(${1:min})",
        "description": "参数:(min)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.OnLoad:": {
        "prefix": "components.inventoryitemmoisture:OnLoad",
        "body": "components.inventoryitemmoisture:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.OnSave:": {
        "prefix": "components.inventoryitemmoisture:OnSave",
        "body": "components.inventoryitemmoisture:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.DoDelta:": {
        "prefix": "components.inventoryitemmoisture:DoDelta",
        "body": "components.inventoryitemmoisture:DoDelta(${1:delta})",
        "description": "参数:(delta)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.GetTargetMoisture:": {
        "prefix": "components.inventoryitemmoisture:GetTargetMoisture",
        "body": "components.inventoryitemmoisture:GetTargetMoisture()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.SetMoisture:": {
        "prefix": "components.inventoryitemmoisture:SetMoisture",
        "body": "components.inventoryitemmoisture:SetMoisture(${1:moisture})",
        "description": "参数:(moisture)<>[] 返回值:无返回值 贡献者:@"
    },
    "inventoryitemmoisture.DiluteMoisture:": {
        "prefix": "components.inventoryitemmoisture:DiluteMoisture",
        "body": "components.inventoryitemmoisture:DiluteMoisture(${1:item},${2:count})",
        "description": "参数:(item)<>[],(count)<>[] 返回值:无返回值 贡献者:@"
    },
    "itemaffinity.RemoveAffinity:": {
        "prefix": "components.itemaffinity:RemoveAffinity",
        "body": "components.itemaffinity:RemoveAffinity(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "itemaffinity.SortAffinities:": {
        "prefix": "components.itemaffinity:SortAffinities",
        "body": "components.itemaffinity:SortAffinities()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "itemaffinity.RefreshAffinity:": {
        "prefix": "components.itemaffinity:RefreshAffinity",
        "body": "components.itemaffinity:RefreshAffinity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "itemaffinity.AddAffinity:": {
        "prefix": "components.itemaffinity:AddAffinity",
        "body": "components.itemaffinity:AddAffinity(${1:prefab},${2:tag},${3:sanity_bonus},${4:priority})",
        "description": "参数:(prefab)<>[],(tag)<>[],(sanity_bonus)<>[],(priority)<>[] 返回值:无返回值 贡献者:@"
    },
    "itemweigher.SetOnDoWeighInFn:": {
        "prefix": "components.itemweigher:SetOnDoWeighInFn",
        "body": "components.itemweigher:SetOnDoWeighInFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "itemweigher.OnRemoveFromEntity:": {
        "prefix": "components.itemweigher:OnRemoveFromEntity",
        "body": "components.itemweigher:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "itemweigher.DoWeighIn:": {
        "prefix": "components.itemweigher:DoWeighIn",
        "body": "components.itemweigher:DoWeighIn(${1:target},${2:doer})",
        "description": "参数:(target)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "key.SetOnUsedFn:": {
        "prefix": "components.key:SetOnUsedFn",
        "body": "components.key:SetOnUsedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "key.OnRemoved:": {
        "prefix": "components.key:OnRemoved",
        "body": "components.key:OnRemoved(${1:lock},${2:doer})",
        "description": "参数:(lock)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "key.OnUsed:": {
        "prefix": "components.key:OnUsed",
        "body": "components.key:OnUsed(${1:lock},${2:doer})",
        "description": "参数:(lock)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "key.OnRemoveFromEntity:": {
        "prefix": "components.key:OnRemoveFromEntity",
        "body": "components.key:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "key.SetOnRemovedFn:": {
        "prefix": "components.key:SetOnRemovedFn",
        "body": "components.key:SetOnRemovedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "kitcoon.GetDebugString:": {
        "prefix": "components.kitcoon:GetDebugString",
        "body": "components.kitcoon:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "kitcoonden.RemoveAllKitcoons:": {
        "prefix": "components.kitcoonden:RemoveAllKitcoons",
        "body": "components.kitcoonden:RemoveAllKitcoons()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "kitcoonden.RemoveKitcoon:": {
        "prefix": "components.kitcoonden:RemoveKitcoon",
        "body": "components.kitcoonden:RemoveKitcoon(${1:kitcoon})",
        "description": "参数:(kitcoon)<>[] 返回值:无返回值 贡献者:@"
    },
    "kitcoonden.AddKitcoon:": {
        "prefix": "components.kitcoonden:AddKitcoon",
        "body": "components.kitcoonden:AddKitcoon(${1:kitcoon},${2:doer})",
        "description": "参数:(kitcoon)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "kitcoonden.OnRemoveFromEntity:": {
        "prefix": "components.kitcoonden:OnRemoveFromEntity",
        "body": "components.kitcoonden:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "kitcoonden.GetDebugString:": {
        "prefix": "components.kitcoonden:GetDebugString",
        "body": "components.kitcoonden:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "klaussackkey.OnRemoveFromEntity:": {
        "prefix": "components.klaussackkey:OnRemoveFromEntity",
        "body": "components.klaussackkey:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "klaussackkey.SetTrueKey:": {
        "prefix": "components.klaussackkey:SetTrueKey",
        "body": "components.klaussackkey:SetTrueKey(${1:truekey})",
        "description": "参数:(truekey)<>[] 返回值:无返回值 贡献者:@"
    },
    "klaussacklock.SetOnUseKey:": {
        "prefix": "components.klaussacklock:SetOnUseKey",
        "body": "components.klaussacklock:SetOnUseKey(${1:onusekeyfn})",
        "description": "参数:(onusekeyfn)<>[] 返回值:无返回值 贡献者:@"
    },
    "klaussacklock.OnRemoveFromEntity:": {
        "prefix": "components.klaussacklock:OnRemoveFromEntity",
        "body": "components.klaussacklock:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "klaussacklock.UseKey:": {
        "prefix": "components.klaussacklock:UseKey",
        "body": "components.klaussacklock:UseKey(${1:key},${2:doer})",
        "description": "参数:(key)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "klaussackloot.OnSave:": {
        "prefix": "components.klaussackloot:OnSave",
        "body": "components.klaussackloot:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "klaussackloot.GetLoot:": {
        "prefix": "components.klaussackloot:GetLoot",
        "body": "components.klaussackloot:GetLoot()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "klaussackloot.OnLoad:": {
        "prefix": "components.klaussackloot:OnLoad",
        "body": "components.klaussackloot:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "knownlocations.SerializeLocations:": {
        "prefix": "components.knownlocations:SerializeLocations",
        "body": "components.knownlocations:SerializeLocations()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "knownlocations.ForgetLocation:": {
        "prefix": "components.knownlocations:ForgetLocation",
        "body": "components.knownlocations:ForgetLocation(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "knownlocations.OnSave:": {
        "prefix": "components.knownlocations:OnSave",
        "body": "components.knownlocations:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "knownlocations.OnLoad:": {
        "prefix": "components.knownlocations:OnLoad",
        "body": "components.knownlocations:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "knownlocations.GetDebugString:": {
        "prefix": "components.knownlocations:GetDebugString",
        "body": "components.knownlocations:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "knownlocations.DeserializeLocations:": {
        "prefix": "components.knownlocations:DeserializeLocations",
        "body": "components.knownlocations:DeserializeLocations(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "knownlocations.GetLocation:": {
        "prefix": "components.knownlocations:GetLocation",
        "body": "components.knownlocations:GetLocation(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "knownlocations.RememberLocation:": {
        "prefix": "components.knownlocations:RememberLocation",
        "body": "components.knownlocations:RememberLocation(${1:name},${2:pos},${3:dont_overwrite})",
        "description": "参数:(name)<>[],(pos)<>[],(dont_overwrite)<>[] 返回值:无返回值 贡献者:@"
    },
    "lavaarenamobtracker.FindMobs:": {
        "prefix": "components.lavaarenamobtracker:FindMobs",
        "body": "components.lavaarenamobtracker:FindMobs(${1:x},${2:y},${3:z},${4:r},${5:musttags},${6:canttags},${7:mustoneoftags})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(r)<>[],(musttags)<>[],(canttags)<>[],(mustoneoftags)<>[] 返回值:无返回值 贡献者:@"
    },
    "lavaarenamobtracker.StartTracking:": {
        "prefix": "components.lavaarenamobtracker:StartTracking",
        "body": "components.lavaarenamobtracker:StartTracking(${1:ent})",
        "description": "参数:(ent)<>[] 返回值:无返回值 贡献者:@"
    },
    "lavaarenamobtracker.GetAllMobs:": {
        "prefix": "components.lavaarenamobtracker:GetAllMobs",
        "body": "components.lavaarenamobtracker:GetAllMobs()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lavaarenamobtracker.ForEachMob:": {
        "prefix": "components.lavaarenamobtracker:ForEachMob",
        "body": "components.lavaarenamobtracker:ForEachMob(${1:cb},${2:params})",
        "description": "参数:(cb)<>[],(params)<>[] 返回值:无返回值 贡献者:@"
    },
    "lavaarenamobtracker.GetNumMobs:": {
        "prefix": "components.lavaarenamobtracker:GetNumMobs",
        "body": "components.lavaarenamobtracker:GetNumMobs()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lavaarenamobtracker.StopTracking:": {
        "prefix": "components.lavaarenamobtracker:StopTracking",
        "body": "components.lavaarenamobtracker:StopTracking(${1:ent})",
        "description": "参数:(ent)<>[] 返回值:无返回值 贡献者:@"
    },
    "leader.IsFollower:": {
        "prefix": "components.leader:IsFollower",
        "body": "components.leader:IsFollower(${1:guy})",
        "description": "参数:(guy)<>[] 返回值:无返回值 贡献者:@"
    },
    "leader.LoadPostPass:": {
        "prefix": "components.leader:LoadPostPass",
        "body": "components.leader:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "leader.RemoveAllFollowers:": {
        "prefix": "components.leader:RemoveAllFollowers",
        "body": "components.leader:RemoveAllFollowers()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "leader.RemoveFollowersByTag:": {
        "prefix": "components.leader:RemoveFollowersByTag",
        "body": "components.leader:RemoveFollowersByTag(${1:tag},${2:validateremovefn})",
        "description": "参数:(tag)<>[],(validateremovefn)<>[] 返回值:无返回值 贡献者:@"
    },
    "leader.GetDebugString:": {
        "prefix": "components.leader:GetDebugString",
        "body": "components.leader:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "leader.OnSave:": {
        "prefix": "components.leader:OnSave",
        "body": "components.leader:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "leader.OnRemoveFromEntity:": {
        "prefix": "components.leader:OnRemoveFromEntity",
        "body": "components.leader:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "leader.RemoveFollower:": {
        "prefix": "components.leader:RemoveFollower",
        "body": "components.leader:RemoveFollower(${1:follower},${2:invalid})",
        "description": "参数:(follower)<>[],(invalid)<>[] 返回值:无返回值 贡献者:@"
    },
    "leader.OnAttacked:": {
        "prefix": "components.leader:OnAttacked",
        "body": "components.leader:OnAttacked(${1:attacker})",
        "description": "参数:(attacker)<>[] 返回值:无返回值 贡献者:@"
    },
    "leader.IsBeingFollowedBy:": {
        "prefix": "components.leader:IsBeingFollowedBy",
        "body": "components.leader:IsBeingFollowedBy(${1:prefabName})",
        "description": "参数:(prefabName)<>[] 返回值:无返回值 贡献者:@"
    },
    "leader.CountFollowers:": {
        "prefix": "components.leader:CountFollowers",
        "body": "components.leader:CountFollowers(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "leader.HaveFollowersCachePlayerLeader:": {
        "prefix": "components.leader:HaveFollowersCachePlayerLeader",
        "body": "components.leader:HaveFollowersCachePlayerLeader()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "leader.IsTargetedByFollowers:": {
        "prefix": "components.leader:IsTargetedByFollowers",
        "body": "components.leader:IsTargetedByFollowers(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "leader.RemoveAllFollowersOnDeath:": {
        "prefix": "components.leader:RemoveAllFollowersOnDeath",
        "body": "components.leader:RemoveAllFollowersOnDeath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "leader.OnNewTarget:": {
        "prefix": "components.leader:OnNewTarget",
        "body": "components.leader:OnNewTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "leader.AddFollower:": {
        "prefix": "components.leader:AddFollower",
        "body": "components.leader:AddFollower(${1:follower})",
        "description": "参数:(follower)<>[] 返回值:无返回值 贡献者:@"
    },
    "lighter.Light:": {
        "prefix": "components.lighter:Light",
        "body": "components.lighter:Light(${1:target},${2:doer})",
        "description": "参数:(target)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "lighter.OnRemoveFromEntity:": {
        "prefix": "components.lighter:OnRemoveFromEntity",
        "body": "components.lighter:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lighter.SetOnLightFn:": {
        "prefix": "components.lighter:SetOnLightFn",
        "body": "components.lighter:SetOnLightFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "lightningblocker.DoLightningStrike:": {
        "prefix": "components.lightningblocker:DoLightningStrike",
        "body": "components.lightningblocker:DoLightningStrike(${1:pos})",
        "description": "参数:(pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "lightningblocker.SetOnLightningStrike:": {
        "prefix": "components.lightningblocker:SetOnLightningStrike",
        "body": "components.lightningblocker:SetOnLightningStrike(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "lightningblocker.OnRemoveFromEntity:": {
        "prefix": "components.lightningblocker:OnRemoveFromEntity",
        "body": "components.lightningblocker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lightningblocker.SetBlockRange:": {
        "prefix": "components.lightningblocker:SetBlockRange",
        "body": "components.lightningblocker:SetBlockRange(${1:newrange})",
        "description": "参数:(newrange)<>[] 返回值:无返回值 贡献者:@"
    },
    "lighttweener.OnUpdate:": {
        "prefix": "components.lighttweener:OnUpdate",
        "body": "components.lighttweener:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "lock.Unlock:": {
        "prefix": "components.lock:Unlock",
        "body": "components.lock:Unlock(${1:key},${2:doer})",
        "description": "参数:(key)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "lock.SetOnLockedFn:": {
        "prefix": "components.lock:SetOnLockedFn",
        "body": "components.lock:SetOnLockedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "lock.OnLoad:": {
        "prefix": "components.lock:OnLoad",
        "body": "components.lock:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "lock.GetDebugString:": {
        "prefix": "components.lock:GetDebugString",
        "body": "components.lock:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lock.SetOnUnlockedFn:": {
        "prefix": "components.lock:SetOnUnlockedFn",
        "body": "components.lock:SetOnUnlockedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "lock.OnRemoveFromEntity:": {
        "prefix": "components.lock:OnRemoveFromEntity",
        "body": "components.lock:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lock.SetLocked:": {
        "prefix": "components.lock:SetLocked",
        "body": "components.lock:SetLocked(${1:locked})",
        "description": "参数:(locked)<>[] 返回值:无返回值 贡献者:@"
    },
    "lock.OnSave:": {
        "prefix": "components.lock:OnSave",
        "body": "components.lock:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lock.TestForUnlock:": {
        "prefix": "components.lock:TestForUnlock",
        "body": "components.lock:TestForUnlock(${1:key})",
        "description": "参数:(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "lock.LoadPostPass:": {
        "prefix": "components.lock:LoadPostPass",
        "body": "components.lock:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "lock.SetKey:": {
        "prefix": "components.lock:SetKey",
        "body": "components.lock:SetKey(${1:key})",
        "description": "参数:(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "lock.Lock:": {
        "prefix": "components.lock:Lock",
        "body": "components.lock:Lock(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "lock.IsStuck:": {
        "prefix": "components.lock:IsStuck",
        "body": "components.lock:IsStuck()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lock.CompatableKey:": {
        "prefix": "components.lock:CompatableKey",
        "body": "components.lock:CompatableKey(${1:keytype})",
        "description": "参数:(keytype)<>[] 返回值:无返回值 贡献者:@"
    },
    "lock.IsLocked:": {
        "prefix": "components.lock:IsLocked",
        "body": "components.lock:IsLocked()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.GetPredictExternalSpeedMultipler:": {
        "prefix": "components.locomotor:GetPredictExternalSpeedMultipler",
        "body": "components.locomotor:GetPredictExternalSpeedMultipler(${1:source},${2:key})",
        "description": "参数:(source)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.ScanForPlatformInDir:": {
        "prefix": "components.locomotor:ScanForPlatformInDir",
        "body": "components.locomotor:ScanForPlatformInDir(${1:my_platform},${2:map},${3:my_x},${4:my_z},${5:dir_x},${6:dir_z},${7:steps},${8:step_size})",
        "description": "参数:(my_platform)<>[],(map)<>[],(my_x)<>[],(my_z)<>[],(dir_x)<>[],(dir_z)<>[],(steps)<>[],(step_size)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetTriggersCreep:": {
        "prefix": "components.locomotor:SetTriggersCreep",
        "body": "components.locomotor:SetTriggersCreep(${1:triggers})",
        "description": "参数:(triggers)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.RemovePredictExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:RemovePredictExternalSpeedMultiplier",
        "body": "components.locomotor:RemovePredictExternalSpeedMultiplier(${1:source},${2:key})",
        "description": "参数:(source)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.TempGroundTile:": {
        "prefix": "components.locomotor:TempGroundTile",
        "body": "components.locomotor:TempGroundTile()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetMotorSpeed:": {
        "prefix": "components.locomotor:SetMotorSpeed",
        "body": "components.locomotor:SetMotorSpeed(${1:speed})",
        "description": "参数:(speed)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.IsTerrestrial:": {
        "prefix": "components.locomotor:IsTerrestrial",
        "body": "components.locomotor:IsTerrestrial()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetFasterOnCreep:": {
        "prefix": "components.locomotor:SetFasterOnCreep",
        "body": "components.locomotor:SetFasterOnCreep(${1:faster})",
        "description": "参数:(faster)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.Stop:": {
        "prefix": "components.locomotor:Stop",
        "body": "components.locomotor:Stop(${1:sgparams})",
        "description": "参数:(sgparams)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.CheckEdge:": {
        "prefix": "components.locomotor:CheckEdge",
        "body": "components.locomotor:CheckEdge(${1:my_platform},${2:map},${3:my_x},${4:my_z},${5:dir_x},${6:dir_z},${7:radius})",
        "description": "参数:(my_platform)<>[],(map)<>[],(my_x)<>[],(my_z)<>[],(dir_x)<>[],(dir_z)<>[],(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.EnableHopDelay:": {
        "prefix": "components.locomotor:EnableHopDelay",
        "body": "components.locomotor:EnableHopDelay(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.GetExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:GetExternalSpeedMultiplier",
        "body": "components.locomotor:GetExternalSpeedMultiplier(${1:source},${2:key})",
        "description": "参数:(source)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.KillPathSearch:": {
        "prefix": "components.locomotor:KillPathSearch",
        "body": "components.locomotor:KillPathSearch()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.OnEntitySleep:": {
        "prefix": "components.locomotor:OnEntitySleep",
        "body": "components.locomotor:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.UpdateGroundSpeedMultiplier:": {
        "prefix": "components.locomotor:UpdateGroundSpeedMultiplier",
        "body": "components.locomotor:UpdateGroundSpeedMultiplier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.StopMoving:": {
        "prefix": "components.locomotor:StopMoving",
        "body": "components.locomotor:StopMoving()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.StartStrafing:": {
        "prefix": "components.locomotor:StartStrafing",
        "body": "components.locomotor:StartStrafing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.WantsToRun:": {
        "prefix": "components.locomotor:WantsToRun",
        "body": "components.locomotor:WantsToRun()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.RestartPredictMoveTimer:": {
        "prefix": "components.locomotor:RestartPredictMoveTimer",
        "body": "components.locomotor:RestartPredictMoveTimer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.GetDebugString:": {
        "prefix": "components.locomotor:GetDebugString",
        "body": "components.locomotor:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.TestForBlocked:": {
        "prefix": "components.locomotor:TestForBlocked",
        "body": "components.locomotor:TestForBlocked(${1:my_x},${2:my_z},${3:dir_x},${4:dir_z},${5:radius},${6:test_length})",
        "description": "参数:(my_x)<>[],(my_z)<>[],(dir_x)<>[],(dir_z)<>[],(radius)<>[],(test_length)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.RemoveExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:RemoveExternalSpeedMultiplier",
        "body": "components.locomotor:RemoveExternalSpeedMultiplier(${1:source},${2:key})",
        "description": "参数:(source)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.RunInDirection:": {
        "prefix": "components.locomotor:RunInDirection",
        "body": "components.locomotor:RunInDirection(${1:direction},${2:throttle})",
        "description": "参数:(direction)<>[],(throttle)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetSlowMultiplier:": {
        "prefix": "components.locomotor:SetSlowMultiplier",
        "body": "components.locomotor:SetSlowMultiplier(${1:m})",
        "description": "参数:(m)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.StopUpdatingInternal:": {
        "prefix": "components.locomotor:StopUpdatingInternal",
        "body": "components.locomotor:StopUpdatingInternal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:SetExternalSpeedMultiplier",
        "body": "components.locomotor:SetExternalSpeedMultiplier(${1:source},${2:key},${3:m})",
        "description": "参数:(source)<>[],(key)<>[],(m)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.EnableGroundSpeedMultiplier:": {
        "prefix": "components.locomotor:EnableGroundSpeedMultiplier",
        "body": "components.locomotor:EnableGroundSpeedMultiplier(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.StartHopping:": {
        "prefix": "components.locomotor:StartHopping",
        "body": "components.locomotor:StartHopping(${1:x},${2:z},${3:target_platform})",
        "description": "参数:(x)<>[],(z)<>[],(target_platform)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.HasDestination:": {
        "prefix": "components.locomotor:HasDestination",
        "body": "components.locomotor:HasDestination()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetFasterOnGroundTile:": {
        "prefix": "components.locomotor:SetFasterOnGroundTile",
        "body": "components.locomotor:SetFasterOnGroundTile(${1:ground_tile},${2:is_faster})",
        "description": "参数:(ground_tile)<>[],(is_faster)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.OnRemoveFromEntity:": {
        "prefix": "components.locomotor:OnRemoveFromEntity",
        "body": "components.locomotor:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.WaitingForPathSearch:": {
        "prefix": "components.locomotor:WaitingForPathSearch",
        "body": "components.locomotor:WaitingForPathSearch()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetBufferedAction:": {
        "prefix": "components.locomotor:SetBufferedAction",
        "body": "components.locomotor:SetBufferedAction(${1:act})",
        "description": "参数:(act)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetReachDestinationCallback:": {
        "prefix": "components.locomotor:SetReachDestinationCallback",
        "body": "components.locomotor:SetReachDestinationCallback(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.FindPath:": {
        "prefix": "components.locomotor:FindPath",
        "body": "components.locomotor:FindPath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.GetTimeMoving:": {
        "prefix": "components.locomotor:GetTimeMoving",
        "body": "components.locomotor:GetTimeMoving()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.WalkInDirection:": {
        "prefix": "components.locomotor:WalkInDirection",
        "body": "components.locomotor:WalkInDirection(${1:direction},${2:should_run})",
        "description": "参数:(direction)<>[],(should_run)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.GetWalkSpeed:": {
        "prefix": "components.locomotor:GetWalkSpeed",
        "body": "components.locomotor:GetWalkSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.CanPathfindOnLand:": {
        "prefix": "components.locomotor:CanPathfindOnLand",
        "body": "components.locomotor:CanPathfindOnLand()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.IsAquatic:": {
        "prefix": "components.locomotor:IsAquatic",
        "body": "components.locomotor:IsAquatic()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.RecalculateExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:RecalculateExternalSpeedMultiplier",
        "body": "components.locomotor:RecalculateExternalSpeedMultiplier(${1:sources})",
        "description": "参数:(sources)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.OnUpdate:": {
        "prefix": "components.locomotor:OnUpdate",
        "body": "components.locomotor:OnUpdate(${1:dt},${2:arrive_check_only})",
        "description": "参数:(dt)<>[],(arrive_check_only)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.PushAction:": {
        "prefix": "components.locomotor:PushAction",
        "body": "components.locomotor:PushAction(${1:bufferedaction},${2:run},${3:try_instant})",
        "description": "参数:(bufferedaction)<>[],(run)<>[],(try_instant)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.GetHopDistance:": {
        "prefix": "components.locomotor:GetHopDistance",
        "body": "components.locomotor:GetHopDistance(${1:speed_mult})",
        "description": "参数:(speed_mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.IsAtEdge:": {
        "prefix": "components.locomotor:IsAtEdge",
        "body": "components.locomotor:IsAtEdge(${1:my_platform},${2:map},${3:my_x},${4:my_z},${5:dir_x},${6:dir_z})",
        "description": "参数:(my_platform)<>[],(map)<>[],(my_x)<>[],(my_z)<>[],(dir_x)<>[],(dir_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.CancelPredictMoveTimer:": {
        "prefix": "components.locomotor:CancelPredictMoveTimer",
        "body": "components.locomotor:CancelPredictMoveTimer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.PushTempGroundSpeedMultiplier:": {
        "prefix": "components.locomotor:PushTempGroundSpeedMultiplier",
        "body": "components.locomotor:PushTempGroundSpeedMultiplier(${1:mult},${2:tile})",
        "description": "参数:(mult)<>[],(tile)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.ScanForPlatform:": {
        "prefix": "components.locomotor:ScanForPlatform",
        "body": "components.locomotor:ScanForPlatform(${1:my_platform},${2:target_x},${3:target_z},${4:hop_distance})",
        "description": "参数:(my_platform)<>[],(target_x)<>[],(target_z)<>[],(hop_distance)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetPredictExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:SetPredictExternalSpeedMultiplier",
        "body": "components.locomotor:SetPredictExternalSpeedMultiplier(${1:source},${2:key},${3:m})",
        "description": "参数:(source)<>[],(key)<>[],(m)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.RunForward:": {
        "prefix": "components.locomotor:RunForward",
        "body": "components.locomotor:RunForward(${1:direct})",
        "description": "参数:(direct)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.WantsToMoveForward:": {
        "prefix": "components.locomotor:WantsToMoveForward",
        "body": "components.locomotor:WantsToMoveForward()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.ResetPath:": {
        "prefix": "components.locomotor:ResetPath",
        "body": "components.locomotor:ResetPath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetAllowPlatformHopping:": {
        "prefix": "components.locomotor:SetAllowPlatformHopping",
        "body": "components.locomotor:SetAllowPlatformHopping(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.CanPathfindOnWater:": {
        "prefix": "components.locomotor:CanPathfindOnWater",
        "body": "components.locomotor:CanPathfindOnWater()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetStrafing:": {
        "prefix": "components.locomotor:SetStrafing",
        "body": "components.locomotor:SetStrafing(${1:strafing})",
        "description": "参数:(strafing)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.GoToEntity:": {
        "prefix": "components.locomotor:GoToEntity",
        "body": "components.locomotor:GoToEntity(${1:target},${2:bufferedaction},${3:run})",
        "description": "参数:(target)<>[],(bufferedaction)<>[],(run)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.FinishHopping:": {
        "prefix": "components.locomotor:FinishHopping",
        "body": "components.locomotor:FinishHopping()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.StartUpdatingInternal:": {
        "prefix": "components.locomotor:StartUpdatingInternal",
        "body": "components.locomotor:StartUpdatingInternal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.PreviewAction:": {
        "prefix": "components.locomotor:PreviewAction",
        "body": "components.locomotor:PreviewAction(${1:bufferedaction},${2:run},${3:try_instant})",
        "description": "参数:(bufferedaction)<>[],(run)<>[],(try_instant)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.StartMoveTimerInternal:": {
        "prefix": "components.locomotor:StartMoveTimerInternal",
        "body": "components.locomotor:StartMoveTimerInternal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.Clear:": {
        "prefix": "components.locomotor:Clear",
        "body": "components.locomotor:Clear()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.OnEntityWake:": {
        "prefix": "components.locomotor:OnEntityWake",
        "body": "components.locomotor:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.UpdateHopping:": {
        "prefix": "components.locomotor:UpdateHopping",
        "body": "components.locomotor:UpdateHopping(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.WalkForward:": {
        "prefix": "components.locomotor:WalkForward",
        "body": "components.locomotor:WalkForward(${1:direct})",
        "description": "参数:(direct)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.OnStrafeFacingChanged:": {
        "prefix": "components.locomotor:OnStrafeFacingChanged",
        "body": "components.locomotor:OnStrafeFacingChanged(${1:dir})",
        "description": "参数:(dir)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetShouldRun:": {
        "prefix": "components.locomotor:SetShouldRun",
        "body": "components.locomotor:SetShouldRun(${1:should_run})",
        "description": "参数:(should_run)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.SetMoveDir:": {
        "prefix": "components.locomotor:SetMoveDir",
        "body": "components.locomotor:SetMoveDir(${1:dir})",
        "description": "参数:(dir)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.StopMoveTimerInternal:": {
        "prefix": "components.locomotor:StopMoveTimerInternal",
        "body": "components.locomotor:StopMoveTimerInternal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.GoToPoint:": {
        "prefix": "components.locomotor:GoToPoint",
        "body": "components.locomotor:GoToPoint(${1:pt},${2:bufferedaction},${3:run},${4:overridedest})",
        "description": "参数:(pt)<>[],(bufferedaction)<>[],(run)<>[],(overridedest)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.StopStrafing:": {
        "prefix": "components.locomotor:StopStrafing",
        "body": "components.locomotor:StopStrafing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.TempGroundSpeedMultiplier:": {
        "prefix": "components.locomotor:TempGroundSpeedMultiplier",
        "body": "components.locomotor:TempGroundSpeedMultiplier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "locomotor.FaceMovePoint:": {
        "prefix": "components.locomotor:FaceMovePoint",
        "body": "components.locomotor:FaceMovePoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "locomotor.GetRunSpeed:": {
        "prefix": "components.locomotor:GetRunSpeed",
        "body": "components.locomotor:GetRunSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lootdropper.AddIfNotChanceLoot:": {
        "prefix": "components.lootdropper:AddIfNotChanceLoot",
        "body": "components.lootdropper:AddIfNotChanceLoot(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.SetLootSetupFn:": {
        "prefix": "components.lootdropper:SetLootSetupFn",
        "body": "components.lootdropper:SetLootSetupFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.SpawnLootPrefab:": {
        "prefix": "components.lootdropper:SpawnLootPrefab",
        "body": "components.lootdropper:SpawnLootPrefab(${1:lootprefab},${2:pt},${3:linked_skinname},${4:skin_id},${5:userid})",
        "description": "参数:(lootprefab)<>[],(pt)<>[],(linked_skinname)<>[],(skin_id)<>[],(userid)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.DropLoot:": {
        "prefix": "components.lootdropper:DropLoot",
        "body": "components.lootdropper:DropLoot(${1:pt})",
        "description": "参数:(pt)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.AddChanceLoot:": {
        "prefix": "components.lootdropper:AddChanceLoot",
        "body": "components.lootdropper:AddChanceLoot(${1:prefab},${2:chance})",
        "description": "参数:(prefab)<>[],(chance)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.SetFlingTarget:": {
        "prefix": "components.lootdropper:SetFlingTarget",
        "body": "components.lootdropper:SetFlingTarget(${1:pos},${2:variance})",
        "description": "参数:(pos)<>[],(variance)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.SetLoot:": {
        "prefix": "components.lootdropper:SetLoot",
        "body": "components.lootdropper:SetLoot(${1:loots})",
        "description": "参数:(loots)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.GenerateLoot:": {
        "prefix": "components.lootdropper:GenerateLoot",
        "body": "components.lootdropper:GenerateLoot()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lootdropper.FlingItem:": {
        "prefix": "components.lootdropper:FlingItem",
        "body": "components.lootdropper:FlingItem(${1:loot},${2:pt})",
        "description": "参数:(loot)<>[],(pt)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.GetFullRecipeLoot:": {
        "prefix": "components.lootdropper:GetFullRecipeLoot",
        "body": "components.lootdropper:GetFullRecipeLoot(${1:recipe})",
        "description": "参数:(recipe)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.AddRandomHauntedLoot:": {
        "prefix": "components.lootdropper:AddRandomHauntedLoot",
        "body": "components.lootdropper:AddRandomHauntedLoot(${1:prefab},${2:weight})",
        "description": "参数:(prefab)<>[],(weight)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.GetRecipeLoot:": {
        "prefix": "components.lootdropper:GetRecipeLoot",
        "body": "components.lootdropper:GetRecipeLoot(${1:recipe})",
        "description": "参数:(recipe)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.AddRandomLoot:": {
        "prefix": "components.lootdropper:AddRandomLoot",
        "body": "components.lootdropper:AddRandomLoot(${1:prefab},${2:weight})",
        "description": "参数:(prefab)<>[],(weight)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.GetAllPossibleLoot:": {
        "prefix": "components.lootdropper:GetAllPossibleLoot",
        "body": "components.lootdropper:GetAllPossibleLoot(${1:setuploot})",
        "description": "参数:(setuploot)<>[] 返回值:无返回值 贡献者:@"
    },
    "lootdropper.ClearRandomLoot:": {
        "prefix": "components.lootdropper:ClearRandomLoot",
        "body": "components.lootdropper:ClearRandomLoot()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lootdropper.PickRandomLoot:": {
        "prefix": "components.lootdropper:PickRandomLoot",
        "body": "components.lootdropper:PickRandomLoot()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lordfruitflytrigger.StopUpdating:": {
        "prefix": "components.lordfruitflytrigger:StopUpdating",
        "body": "components.lordfruitflytrigger:StopUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lordfruitflytrigger.StartUpdating:": {
        "prefix": "components.lordfruitflytrigger:StartUpdating",
        "body": "components.lordfruitflytrigger:StartUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lordfruitflytrigger.OnRemoveFromEntity:": {
        "prefix": "components.lordfruitflytrigger:OnRemoveFromEntity",
        "body": "components.lordfruitflytrigger:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lordfruitflytrigger.OnUpdate:": {
        "prefix": "components.lordfruitflytrigger:OnUpdate",
        "body": "components.lordfruitflytrigger:OnUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarplant_tentacle_weapon.SetOwner:": {
        "prefix": "components.lunarplant_tentacle_weapon:SetOwner",
        "body": "components.lunarplant_tentacle_weapon:SetOwner(${1:owner})",
        "description": "参数:(owner)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarplant_tentacle_weapon.OnRemoveFromEntity:": {
        "prefix": "components.lunarplant_tentacle_weapon:OnRemoveFromEntity",
        "body": "components.lunarplant_tentacle_weapon:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarplant_tentacle_weapon.OnAttack:": {
        "prefix": "components.lunarplant_tentacle_weapon:OnAttack",
        "body": "components.lunarplant_tentacle_weapon:OnAttack(${1:owner},${2:attack_data})",
        "description": "参数:(owner)<>[],(attack_data)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.SetMutationDefeated:": {
        "prefix": "components.lunarriftmutationsmanager:SetMutationDefeated",
        "body": "components.lunarriftmutationsmanager:SetMutationDefeated(${1:ent})",
        "description": "参数:(ent)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.HasDefeatedAllMutations:": {
        "prefix": "components.lunarriftmutationsmanager:HasDefeatedAllMutations",
        "body": "components.lunarriftmutationsmanager:HasDefeatedAllMutations()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.RefreshDefeatedMutationsTable:": {
        "prefix": "components.lunarriftmutationsmanager:RefreshDefeatedMutationsTable",
        "body": "components.lunarriftmutationsmanager:RefreshDefeatedMutationsTable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager._CanCorpseMutate:": {
        "prefix": "components.lunarriftmutationsmanager:_CanCorpseMutate",
        "body": "components.lunarriftmutationsmanager:_CanCorpseMutate(${1:ent})",
        "description": "参数:(ent)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.GetNumDefeatedMutations:": {
        "prefix": "components.lunarriftmutationsmanager:GetNumDefeatedMutations",
        "body": "components.lunarriftmutationsmanager:GetNumDefeatedMutations()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.GetDebugString:": {
        "prefix": "components.lunarriftmutationsmanager:GetDebugString",
        "body": "components.lunarriftmutationsmanager:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.OnLoad:": {
        "prefix": "components.lunarriftmutationsmanager:OnLoad",
        "body": "components.lunarriftmutationsmanager:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.OnSave:": {
        "prefix": "components.lunarriftmutationsmanager:OnSave",
        "body": "components.lunarriftmutationsmanager:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.ShouldGiveReward:": {
        "prefix": "components.lunarriftmutationsmanager:ShouldGiveReward",
        "body": "components.lunarriftmutationsmanager:ShouldGiveReward()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.OnRewardGiven:": {
        "prefix": "components.lunarriftmutationsmanager:OnRewardGiven",
        "body": "components.lunarriftmutationsmanager:OnRewardGiven()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.TriggerWagstaffAppearance:": {
        "prefix": "components.lunarriftmutationsmanager:TriggerWagstaffAppearance",
        "body": "components.lunarriftmutationsmanager:TriggerWagstaffAppearance(${1:ent})",
        "description": "参数:(ent)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.IsTaskCompleted:": {
        "prefix": "components.lunarriftmutationsmanager:IsTaskCompleted",
        "body": "components.lunarriftmutationsmanager:IsTaskCompleted()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.IsWagstaffSpawned:": {
        "prefix": "components.lunarriftmutationsmanager:IsWagstaffSpawned",
        "body": "components.lunarriftmutationsmanager:IsWagstaffSpawned()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.HasDefeatedThisMutation:": {
        "prefix": "components.lunarriftmutationsmanager:HasDefeatedThisMutation",
        "body": "components.lunarriftmutationsmanager:HasDefeatedThisMutation(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarriftmutationsmanager.TryMutate:": {
        "prefix": "components.lunarriftmutationsmanager:TryMutate",
        "body": "components.lunarriftmutationsmanager:TryMutate(${1:ent},${2:corpseprefab})",
        "description": "参数:(ent)<>[],(corpseprefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.SpawnPlant:": {
        "prefix": "components.lunarthrall_plantspawner:SpawnPlant",
        "body": "components.lunarthrall_plantspawner:SpawnPlant(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.OnSave:": {
        "prefix": "components.lunarthrall_plantspawner:OnSave",
        "body": "components.lunarthrall_plantspawner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.SpawnGestalt:": {
        "prefix": "components.lunarthrall_plantspawner:SpawnGestalt",
        "body": "components.lunarthrall_plantspawner:SpawnGestalt(${1:target},${2:rift})",
        "description": "参数:(target)<>[],(rift)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.GetDebugString:": {
        "prefix": "components.lunarthrall_plantspawner:GetDebugString",
        "body": "components.lunarthrall_plantspawner:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.RemoveWave:": {
        "prefix": "components.lunarthrall_plantspawner:RemoveWave",
        "body": "components.lunarthrall_plantspawner:RemoveWave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.OnLoad:": {
        "prefix": "components.lunarthrall_plantspawner:OnLoad",
        "body": "components.lunarthrall_plantspawner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.FindHerd:": {
        "prefix": "components.lunarthrall_plantspawner:FindHerd",
        "body": "components.lunarthrall_plantspawner:FindHerd()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.FindPlant:": {
        "prefix": "components.lunarthrall_plantspawner:FindPlant",
        "body": "components.lunarthrall_plantspawner:FindPlant()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.LongUpdate:": {
        "prefix": "components.lunarthrall_plantspawner:LongUpdate",
        "body": "components.lunarthrall_plantspawner:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.InvadeTarget:": {
        "prefix": "components.lunarthrall_plantspawner:InvadeTarget",
        "body": "components.lunarthrall_plantspawner:InvadeTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.LoadPostPass:": {
        "prefix": "components.lunarthrall_plantspawner:LoadPostPass",
        "body": "components.lunarthrall_plantspawner:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.MoveGestaltToPlant:": {
        "prefix": "components.lunarthrall_plantspawner:MoveGestaltToPlant",
        "body": "components.lunarthrall_plantspawner:MoveGestaltToPlant(${1:thrall})",
        "description": "参数:(thrall)<>[] 返回值:无返回值 贡献者:@"
    },
    "lunarthrall_plantspawner.setHerdsOnPlantable:": {
        "prefix": "components.lunarthrall_plantspawner:setHerdsOnPlantable",
        "body": "components.lunarthrall_plantspawner:setHerdsOnPlantable(${1:plantable})",
        "description": "参数:(plantable)<>[] 返回值:无返回值 贡献者:@"
    },
    "machine.OnSave:": {
        "prefix": "components.machine:OnSave",
        "body": "components.machine:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "machine.OnLoad:": {
        "prefix": "components.machine:OnLoad",
        "body": "components.machine:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "machine.GetDebugString:": {
        "prefix": "components.machine:GetDebugString",
        "body": "components.machine:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "machine.OnRemoveFromEntity:": {
        "prefix": "components.machine:OnRemoveFromEntity",
        "body": "components.machine:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "machine.CanInteract:": {
        "prefix": "components.machine:CanInteract",
        "body": "components.machine:CanInteract()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "machine.SetGroundOnlyMachine:": {
        "prefix": "components.machine:SetGroundOnlyMachine",
        "body": "components.machine:SetGroundOnlyMachine(${1:groundonly})",
        "description": "参数:(groundonly)<>[] 返回值:无返回值 贡献者:@"
    },
    "machine.TurnOff:": {
        "prefix": "components.machine:TurnOff",
        "body": "components.machine:TurnOff()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "machine.IsOn:": {
        "prefix": "components.machine:IsOn",
        "body": "components.machine:IsOn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "machine.TurnOn:": {
        "prefix": "components.machine:TurnOn",
        "body": "components.machine:TurnOn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "madsciencelab.SetStage:": {
        "prefix": "components.madsciencelab:SetStage",
        "body": "components.madsciencelab:SetStage(${1:stage},${2:time_override})",
        "description": "参数:(stage)<>[],(time_override)<>[] 返回值:无返回值 贡献者:@"
    },
    "madsciencelab.LongUpdate:": {
        "prefix": "components.madsciencelab:LongUpdate",
        "body": "components.madsciencelab:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "madsciencelab.IsMakingScience:": {
        "prefix": "components.madsciencelab:IsMakingScience",
        "body": "components.madsciencelab:IsMakingScience()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "madsciencelab.OnLoad:": {
        "prefix": "components.madsciencelab:OnLoad",
        "body": "components.madsciencelab:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "madsciencelab.StartMakingScience:": {
        "prefix": "components.madsciencelab:StartMakingScience",
        "body": "components.madsciencelab:StartMakingScience(${1:product})",
        "description": "参数:(product)<>[] 返回值:无返回值 贡献者:@"
    },
    "madsciencelab.GetDebugString:": {
        "prefix": "components.madsciencelab:GetDebugString",
        "body": "components.madsciencelab:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "madsciencelab.OnRemoveFromEntity:": {
        "prefix": "components.madsciencelab:OnRemoveFromEntity",
        "body": "components.madsciencelab:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "madsciencelab.OnSave:": {
        "prefix": "components.madsciencelab:OnSave",
        "body": "components.madsciencelab:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "magician.StopUsing:": {
        "prefix": "components.magician:StopUsing",
        "body": "components.magician:StopUsing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "magician.OnLoad:": {
        "prefix": "components.magician:OnLoad",
        "body": "components.magician:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "magician.StartUsingTool:": {
        "prefix": "components.magician:StartUsingTool",
        "body": "components.magician:StartUsingTool(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "magician.OnSave:": {
        "prefix": "components.magician:OnSave",
        "body": "components.magician:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "magician.OnRemoveFromEntity:": {
        "prefix": "components.magician:OnRemoveFromEntity",
        "body": "components.magician:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "magician.DropToolOnStop:": {
        "prefix": "components.magician:DropToolOnStop",
        "body": "components.magician:DropToolOnStop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "magiciantool.SetOnStopUsingFn:": {
        "prefix": "components.magiciantool:SetOnStopUsingFn",
        "body": "components.magiciantool:SetOnStopUsingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "magiciantool.OnStartUsing:": {
        "prefix": "components.magiciantool:OnStartUsing",
        "body": "components.magiciantool:OnStartUsing(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "magiciantool.OnRemoveEntity:": {
        "prefix": "components.magiciantool:OnRemoveEntity",
        "body": "components.magiciantool:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "magiciantool.OnStopUsing:": {
        "prefix": "components.magiciantool:OnStopUsing",
        "body": "components.magiciantool:OnStopUsing(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "magiciantool.SetOnStartUsingFn:": {
        "prefix": "components.magiciantool:SetOnStartUsingFn",
        "body": "components.magiciantool:SetOnStartUsingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "magiciantool.OnRemoveFromEntity:": {
        "prefix": "components.magiciantool:OnRemoveFromEntity",
        "body": "components.magiciantool:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "magiciantool.StopUsing:": {
        "prefix": "components.magiciantool:StopUsing",
        "body": "components.magiciantool:StopUsing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "map.FindRandomPointOnLand:": {
        "prefix": "components.map:FindRandomPointOnLand",
        "body": "components.map:FindRandomPointOnLand(${1:max_tries})",
        "description": "参数:(max_tries)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.FindRandomPointInOcean:": {
        "prefix": "components.map:FindRandomPointInOcean",
        "body": "components.map:FindRandomPointInOcean(${1:max_tries})",
        "description": "参数:(max_tries)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanDeployBoatAtPointInWater:": {
        "prefix": "components.map:CanDeployBoatAtPointInWater",
        "body": "components.map:CanDeployBoatAtPointInWater(${1:pt},${2:inst},${3:mouseover},${4:data})",
        "description": "参数:(pt)<>[],(inst)<>[],(mouseover)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.NodeAtPointHasTag:": {
        "prefix": "components.map:NodeAtPointHasTag",
        "body": "components.map:NodeAtPointHasTag(${1:x},${2:y},${3:z},${4:tag})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanPlacePrefabFilteredAtPoint:": {
        "prefix": "components.map:CanPlacePrefabFilteredAtPoint",
        "body": "components.map:CanPlacePrefabFilteredAtPoint(${1:x},${2:y},${3:z},${4:prefab})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.RegisterGroundTargetBlocker:": {
        "prefix": "components.map:RegisterGroundTargetBlocker",
        "body": "components.map:RegisterGroundTargetBlocker(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.GetGoodArenaPoints:": {
        "prefix": "components.map:GetGoodArenaPoints",
        "body": "components.map:GetGoodArenaPoints()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "map.CanCastAtPoint:": {
        "prefix": "components.map:CanCastAtPoint",
        "body": "components.map:CanCastAtPoint(${1:pt},${2:alwayspassable},${3:allowwater},${4:deployradius})",
        "description": "参数:(pt)<>[],(alwayspassable)<>[],(allowwater)<>[],(deployradius)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanDeployPlantAtPoint:": {
        "prefix": "components.map:CanDeployPlantAtPoint",
        "body": "components.map:CanDeployPlantAtPoint(${1:pt},${2:inst})",
        "description": "参数:(pt)<>[],(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.FindBestSpawningPointForArena:": {
        "prefix": "components.map:FindBestSpawningPointForArena",
        "body": "components.map:FindBestSpawningPointForArena(${1:CustomAllowTest},${2:perfect_only},${3:spawnpoints})",
        "description": "参数:(CustomAllowTest)<>[],(perfect_only)<>[],(spawnpoints)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanDeployWalkablePeripheralAtPoint:": {
        "prefix": "components.map:CanDeployWalkablePeripheralAtPoint",
        "body": "components.map:CanDeployWalkablePeripheralAtPoint(${1:pt},${2:inst})",
        "description": "参数:(pt)<>[],(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsLandTileAtPoint:": {
        "prefix": "components.map:IsLandTileAtPoint",
        "body": "components.map:IsLandTileAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsTerraformingBlockedByAnObject:": {
        "prefix": "components.map:IsTerraformingBlockedByAnObject",
        "body": "components.map:IsTerraformingBlockedByAnObject(${1:tile_x},${2:tile_y})",
        "description": "参数:(tile_x)<>[],(tile_y)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.StopFindingGoodArenaPoints:": {
        "prefix": "components.map:StopFindingGoodArenaPoints",
        "body": "components.map:StopFindingGoodArenaPoints()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "map.SetTile:": {
        "prefix": "components.map:SetTile",
        "body": "components.map:SetTile(${1:x},${2:y},${3:tile},${4:...})",
        "description": "参数:(x)<>[],(y)<>[],(tile)<>[],(...)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.GetTopologyIDAtPoint:": {
        "prefix": "components.map:GetTopologyIDAtPoint",
        "body": "components.map:GetTopologyIDAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.GetPlatformAtPoint:": {
        "prefix": "components.map:GetPlatformAtPoint",
        "body": "components.map:GetPlatformAtPoint(${1:pos_x},${2:pos_y},${3:pos_z},${4:extra_radius})",
        "description": "参数:(pos_x)<>[],(pos_y)<>[],(pos_z)<>[],(extra_radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.StartFindingGoodArenaPoints:": {
        "prefix": "components.map:StartFindingGoodArenaPoints",
        "body": "components.map:StartFindingGoodArenaPoints()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "map.GetRandomPointClustersForNodePrefix:": {
        "prefix": "components.map:GetRandomPointClustersForNodePrefix",
        "body": "components.map:GetRandomPointClustersForNodePrefix(${1:prefixes},${2:countpernode})",
        "description": "参数:(prefixes)<>[],(countpernode)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsPointInSharkBoiArena:": {
        "prefix": "components.map:IsPointInSharkBoiArena",
        "body": "components.map:IsPointInSharkBoiArena(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanTerraformAtPoint:": {
        "prefix": "components.map:CanTerraformAtPoint",
        "body": "components.map:CanTerraformAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsFarmableSoilAtPoint:": {
        "prefix": "components.map:IsFarmableSoilAtPoint",
        "body": "components.map:IsFarmableSoilAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanDeployDockAtPoint:": {
        "prefix": "components.map:CanDeployDockAtPoint",
        "body": "components.map:CanDeployDockAtPoint(${1:pt},${2:inst},${3:mouseover})",
        "description": "参数:(pt)<>[],(inst)<>[],(mouseover)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanDeployRecipeAtPoint:": {
        "prefix": "components.map:CanDeployRecipeAtPoint",
        "body": "components.map:CanDeployRecipeAtPoint(${1:pt},${2:recipe},${3:rot})",
        "description": "参数:(pt)<>[],(recipe)<>[],(rot)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanPlantAtPoint:": {
        "prefix": "components.map:CanPlantAtPoint",
        "body": "components.map:CanPlantAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsOceanAtPoint:": {
        "prefix": "components.map:IsOceanAtPoint",
        "body": "components.map:IsOceanAtPoint(${1:x},${2:y},${3:z},${4:allow_boats})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(allow_boats)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanDeployAtPointInWater:": {
        "prefix": "components.map:CanDeployAtPointInWater",
        "body": "components.map:CanDeployAtPointInWater(${1:pt},${2:inst},${3:mouseover},${4:data})",
        "description": "参数:(pt)<>[],(inst)<>[],(mouseover)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsSurroundedByLand:": {
        "prefix": "components.map:IsSurroundedByLand",
        "body": "components.map:IsSurroundedByLand(${1:x},${2:y},${3:z},${4:radius})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanDeployMastAtPoint:": {
        "prefix": "components.map:CanDeployMastAtPoint",
        "body": "components.map:CanDeployMastAtPoint(${1:pt},${2:inst},${3:mouseover})",
        "description": "参数:(pt)<>[],(inst)<>[],(mouseover)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsPassableAtPoint:": {
        "prefix": "components.map:IsPassableAtPoint",
        "body": "components.map:IsPassableAtPoint(${1:x},${2:y},${3:z},${4:allow_water},${5:exclude_boats})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(allow_water)<>[],(exclude_boats)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.ClearGoodArenaPoints:": {
        "prefix": "components.map:ClearGoodArenaPoints",
        "body": "components.map:ClearGoodArenaPoints()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "map.IsTileOcean:": {
        "prefix": "components.map:IsTileOcean",
        "body": "components.map:IsTileOcean(${1:tile})",
        "description": "参数:(tile)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.RegisterDeployExtraSpacing:": {
        "prefix": "components.map:RegisterDeployExtraSpacing",
        "body": "components.map:RegisterDeployExtraSpacing(${1:spacing})",
        "description": "参数:(spacing)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanDeployAtPoint:": {
        "prefix": "components.map:CanDeployAtPoint",
        "body": "components.map:CanDeployAtPoint(${1:pt},${2:inst},${3:mouseover})",
        "description": "参数:(pt)<>[],(inst)<>[],(mouseover)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsAboveGroundAtPoint:": {
        "prefix": "components.map:IsAboveGroundAtPoint",
        "body": "components.map:IsAboveGroundAtPoint(${1:x},${2:y},${3:z},${4:allow_water})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(allow_water)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsDeployPointClear:": {
        "prefix": "components.map:IsDeployPointClear",
        "body": "components.map:IsDeployPointClear(${1:pt},${2:inst},${3:min_spacing},${4:min_spacing_sq_fn},${5:near_other_fn},${6:check_player},${7:custom_ignore_tags})",
        "description": "参数:(pt)<>[],(inst)<>[],(min_spacing)<>[],(min_spacing_sq_fn)<>[],(near_other_fn)<>[],(check_player)<>[],(custom_ignore_tags)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.GetNearestPointOnWater:": {
        "prefix": "components.map:GetNearestPointOnWater",
        "body": "components.map:GetNearestPointOnWater(${1:x},${2:z},${3:radius},${4:iterations})",
        "description": "参数:(x)<>[],(z)<>[],(radius)<>[],(iterations)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.FindRandomPointWithFilter:": {
        "prefix": "components.map:FindRandomPointWithFilter",
        "body": "components.map:FindRandomPointWithFilter(${1:max_tries},${2:filterfn})",
        "description": "参数:(max_tries)<>[],(filterfn)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsTemporaryTileAtPoint:": {
        "prefix": "components.map:IsTemporaryTileAtPoint",
        "body": "components.map:IsTemporaryTileAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsSurroundedByWater:": {
        "prefix": "components.map:IsSurroundedByWater",
        "body": "components.map:IsSurroundedByWater(${1:x},${2:y},${3:z},${4:radius})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CheckForBadThingsInArena:": {
        "prefix": "components.map:CheckForBadThingsInArena",
        "body": "components.map:CheckForBadThingsInArena(${1:pt},${2:badthingsatspawnpoints})",
        "description": "参数:(pt)<>[],(badthingsatspawnpoints)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.GetGoodOceanArenaPoints:": {
        "prefix": "components.map:GetGoodOceanArenaPoints",
        "body": "components.map:GetGoodOceanArenaPoints()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "map.StartFindingGoodOceanArenaPoints:": {
        "prefix": "components.map:StartFindingGoodOceanArenaPoints",
        "body": "components.map:StartFindingGoodOceanArenaPoints()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "map.CollapseSoilAtPoint:": {
        "prefix": "components.map:CollapseSoilAtPoint",
        "body": "components.map:CollapseSoilAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.RegisterDeploySmartRadius:": {
        "prefix": "components.map:RegisterDeploySmartRadius",
        "body": "components.map:RegisterDeploySmartRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsOceanTileAtPoint:": {
        "prefix": "components.map:IsOceanTileAtPoint",
        "body": "components.map:IsOceanTileAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.FindBestSpawningPointForOceanArena:": {
        "prefix": "components.map:FindBestSpawningPointForOceanArena",
        "body": "components.map:FindBestSpawningPointForOceanArena(${1:CustomAllowTest},${2:perfect_only},${3:spawnpoints})",
        "description": "参数:(CustomAllowTest)<>[],(perfect_only)<>[],(spawnpoints)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanPlaceTurfAtPoint:": {
        "prefix": "components.map:CanPlaceTurfAtPoint",
        "body": "components.map:CanPlaceTurfAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.ClearGoodOceanArenaPoints:": {
        "prefix": "components.map:ClearGoodOceanArenaPoints",
        "body": "components.map:ClearGoodOceanArenaPoints()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "map.CheckForBadThingsInOceanArena:": {
        "prefix": "components.map:CheckForBadThingsInOceanArena",
        "body": "components.map:CheckForBadThingsInOceanArena(${1:pt},${2:badthingsatspawnpoints})",
        "description": "参数:(pt)<>[],(badthingsatspawnpoints)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanPointHaveAcidRain:": {
        "prefix": "components.map:CanPointHaveAcidRain",
        "body": "components.map:CanPointHaveAcidRain(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.StopFindingGoodOceanArenaPoints:": {
        "prefix": "components.map:StopFindingGoodOceanArenaPoints",
        "body": "components.map:StopFindingGoodOceanArenaPoints()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "map.IsAboveGroundInSquare:": {
        "prefix": "components.map:IsAboveGroundInSquare",
        "body": "components.map:IsAboveGroundInSquare(${1:x},${2:y},${3:z},${4:r},${5:filterfn})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(r)<>[],(filterfn)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsTileLandNoDocks:": {
        "prefix": "components.map:IsTileLandNoDocks",
        "body": "components.map:IsTileLandNoDocks(${1:tile})",
        "description": "参数:(tile)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsInLunacyArea:": {
        "prefix": "components.map:IsInLunacyArea",
        "body": "components.map:IsInLunacyArea(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.RegisterTerraformExtraSpacing:": {
        "prefix": "components.map:RegisterTerraformExtraSpacing",
        "body": "components.map:RegisterTerraformExtraSpacing(${1:spacing})",
        "description": "参数:(spacing)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsPointNearHole:": {
        "prefix": "components.map:IsPointNearHole",
        "body": "components.map:IsPointNearHole(${1:pt},${2:range})",
        "description": "参数:(pt)<>[],(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsValidTileAtPoint:": {
        "prefix": "components.map:IsValidTileAtPoint",
        "body": "components.map:IsValidTileAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsDeployPointClear2:": {
        "prefix": "components.map:IsDeployPointClear2",
        "body": "components.map:IsDeployPointClear2(${1:pt},${2:inst},${3:object_size},${4:object_size_fn},${5:near_other_fn},${6:check_player},${7:custom_ignore_tags})",
        "description": "参数:(pt)<>[],(inst)<>[],(object_size)<>[],(object_size_fn)<>[],(near_other_fn)<>[],(check_player)<>[],(custom_ignore_tags)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsDockAtPoint:": {
        "prefix": "components.map:IsDockAtPoint",
        "body": "components.map:IsDockAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.FindNodeAtPoint:": {
        "prefix": "components.map:FindNodeAtPoint",
        "body": "components.map:FindNodeAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanAreaTagsHaveAcidRain:": {
        "prefix": "components.map:CanAreaTagsHaveAcidRain",
        "body": "components.map:CanAreaTagsHaveAcidRain(${1:tags})",
        "description": "参数:(tags)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsOceanIceAtPoint:": {
        "prefix": "components.map:IsOceanIceAtPoint",
        "body": "components.map:IsOceanIceAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.HasAdjacentLandTile:": {
        "prefix": "components.map:HasAdjacentLandTile",
        "body": "components.map:HasAdjacentLandTile(${1:tx},${2:ty})",
        "description": "参数:(tx)<>[],(ty)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsPassableAtPointWithPlatformRadiusBias:": {
        "prefix": "components.map:IsPassableAtPointWithPlatformRadiusBias",
        "body": "components.map:IsPassableAtPointWithPlatformRadiusBias(${1:x},${2:y},${3:z},${4:allow_water},${5:exclude_boats},${6:platform_radius_bias},${7:ignore_land_overhang})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(allow_water)<>[],(exclude_boats)<>[],(platform_radius_bias)<>[],(ignore_land_overhang)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.InternalIsPointOnWater:": {
        "prefix": "components.map:InternalIsPointOnWater",
        "body": "components.map:InternalIsPointOnWater(${1:test_x},${2:test_y},${3:test_z})",
        "description": "参数:(test_x)<>[],(test_y)<>[],(test_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanDeployWallAtPoint:": {
        "prefix": "components.map:CanDeployWallAtPoint",
        "body": "components.map:CanDeployWallAtPoint(${1:pt},${2:inst})",
        "description": "参数:(pt)<>[],(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.IsGroundTargetBlocked:": {
        "prefix": "components.map:IsGroundTargetBlocked",
        "body": "components.map:IsGroundTargetBlocked(${1:pt},${2:range})",
        "description": "参数:(pt)<>[],(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanPlowAtPoint:": {
        "prefix": "components.map:CanPlowAtPoint",
        "body": "components.map:CanPlowAtPoint(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "map.CanTillSoilAtPoint:": {
        "prefix": "components.map:CanTillSoilAtPoint",
        "body": "components.map:CanTillSoilAtPoint(${1:x},${2:y},${3:z},${4:ignore_tile_type})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(ignore_tile_type)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprecorder.TeachMap:": {
        "prefix": "components.maprecorder:TeachMap",
        "body": "components.maprecorder:TeachMap(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprecorder.OnSave:": {
        "prefix": "components.maprecorder:OnSave",
        "body": "components.maprecorder:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maprecorder.RecordMap:": {
        "prefix": "components.maprecorder:RecordMap",
        "body": "components.maprecorder:RecordMap(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprecorder.OnLoad:": {
        "prefix": "components.maprecorder:OnLoad",
        "body": "components.maprecorder:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprecorder.IsCurrentWorld:": {
        "prefix": "components.maprecorder:IsCurrentWorld",
        "body": "components.maprecorder:IsCurrentWorld()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maprecorder.ClearMap:": {
        "prefix": "components.maprecorder:ClearMap",
        "body": "components.maprecorder:ClearMap()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maprecorder.SetOnDataChangedFn:": {
        "prefix": "components.maprecorder:SetOnDataChangedFn",
        "body": "components.maprecorder:SetOnDataChangedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprecorder.HasData:": {
        "prefix": "components.maprecorder:HasData",
        "body": "components.maprecorder:HasData()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maprevealable.AddRevealSource:": {
        "prefix": "components.maprevealable:AddRevealSource",
        "body": "components.maprevealable:AddRevealSource(${1:source},${2:restriction})",
        "description": "参数:(source)<>[],(restriction)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprevealable.SetIcon:": {
        "prefix": "components.maprevealable:SetIcon",
        "body": "components.maprevealable:SetIcon(${1:iconname})",
        "description": "参数:(iconname)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprevealable.Stop:": {
        "prefix": "components.maprevealable:Stop",
        "body": "components.maprevealable:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maprevealable.StopRevealing:": {
        "prefix": "components.maprevealable:StopRevealing",
        "body": "components.maprevealable:StopRevealing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maprevealable.Start:": {
        "prefix": "components.maprevealable:Start",
        "body": "components.maprevealable:Start(${1:delay})",
        "description": "参数:(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprevealable.RefreshRevealSources:": {
        "prefix": "components.maprevealable:RefreshRevealSources",
        "body": "components.maprevealable:RefreshRevealSources()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maprevealable.OnRemoveFromEntity:": {
        "prefix": "components.maprevealable:OnRemoveFromEntity",
        "body": "components.maprevealable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maprevealable.RemoveRevealSource:": {
        "prefix": "components.maprevealable:RemoveRevealSource",
        "body": "components.maprevealable:RemoveRevealSource(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprevealable.SetIconPriority:": {
        "prefix": "components.maprevealable:SetIconPriority",
        "body": "components.maprevealable:SetIconPriority(${1:priority})",
        "description": "参数:(priority)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprevealable.SetIconPrefab:": {
        "prefix": "components.maprevealable:SetIconPrefab",
        "body": "components.maprevealable:SetIconPrefab(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprevealable.Refresh:": {
        "prefix": "components.maprevealable:Refresh",
        "body": "components.maprevealable:Refresh()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maprevealable.StartRevealing:": {
        "prefix": "components.maprevealable:StartRevealing",
        "body": "components.maprevealable:StartRevealing(${1:restriction})",
        "description": "参数:(restriction)<>[] 返回值:无返回值 贡献者:@"
    },
    "maprevealer.Stop:": {
        "prefix": "components.maprevealer:Stop",
        "body": "components.maprevealer:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maprevealer.RevealMapToPlayer:": {
        "prefix": "components.maprevealer:RevealMapToPlayer",
        "body": "components.maprevealer:RevealMapToPlayer(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "mapspotrevealer.SetPreRevealFn:": {
        "prefix": "components.mapspotrevealer:SetPreRevealFn",
        "body": "components.mapspotrevealer:SetPreRevealFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "mapspotrevealer.RevealMap:": {
        "prefix": "components.mapspotrevealer:RevealMap",
        "body": "components.mapspotrevealer:RevealMap(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mapspotrevealer.OnRemoveFromEntity:": {
        "prefix": "components.mapspotrevealer:OnRemoveFromEntity",
        "body": "components.mapspotrevealer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mapspotrevealer.SetGetTargetFn:": {
        "prefix": "components.mapspotrevealer:SetGetTargetFn",
        "body": "components.mapspotrevealer:SetGetTargetFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "markable.OnSave:": {
        "prefix": "components.markable:OnSave",
        "body": "components.markable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "markable.OnLoad:": {
        "prefix": "components.markable:OnLoad",
        "body": "components.markable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "markable.SetMarkable:": {
        "prefix": "components.markable:SetMarkable",
        "body": "components.markable:SetMarkable(${1:markable})",
        "description": "参数:(markable)<>[] 返回值:无返回值 贡献者:@"
    },
    "markable.Unmarkall:": {
        "prefix": "components.markable:Unmarkall",
        "body": "components.markable:Unmarkall()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "markable.returnid:": {
        "prefix": "components.markable:returnid",
        "body": "components.markable:returnid(${1:id})",
        "description": "参数:(id)<>[] 返回值:无返回值 贡献者:@"
    },
    "markable.Mark:": {
        "prefix": "components.markable:Mark",
        "body": "components.markable:Mark(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "markable.getid:": {
        "prefix": "components.markable:getid",
        "body": "components.markable:getid()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "markable.HasMarked:": {
        "prefix": "components.markable:HasMarked",
        "body": "components.markable:HasMarked(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "markable.CanMark:": {
        "prefix": "components.markable:CanMark",
        "body": "components.markable:CanMark(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "markable_proxy.SetMarkable:": {
        "prefix": "components.markable_proxy:SetMarkable",
        "body": "components.markable_proxy:SetMarkable(${1:markable})",
        "description": "参数:(markable)<>[] 返回值:无返回值 贡献者:@"
    },
    "markable_proxy.HasMarked:": {
        "prefix": "components.markable_proxy:HasMarked",
        "body": "components.markable_proxy:HasMarked(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "markable_proxy.Mark:": {
        "prefix": "components.markable_proxy:Mark",
        "body": "components.markable_proxy:Mark(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mast.GetCurrentFurlUnits:": {
        "prefix": "components.mast:GetCurrentFurlUnits",
        "body": "components.mast:GetCurrentFurlUnits()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mast.OnRemoveFromEntity:": {
        "prefix": "components.mast:OnRemoveFromEntity",
        "body": "components.mast:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mast.AddSailFurler:": {
        "prefix": "components.mast:AddSailFurler",
        "body": "components.mast:AddSailFurler(${1:doer},${2:strength})",
        "description": "参数:(doer)<>[],(strength)<>[] 返回值:无返回值 贡献者:@"
    },
    "mast.SailFurled:": {
        "prefix": "components.mast:SailFurled",
        "body": "components.mast:SailFurled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mast.SetRudderDirection:": {
        "prefix": "components.mast:SetRudderDirection",
        "body": "components.mast:SetRudderDirection(${1:rudder_direction_x},${2:rudder_direction_z})",
        "description": "参数:(rudder_direction_x)<>[],(rudder_direction_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "mast.SetVelocityMod:": {
        "prefix": "components.mast:SetVelocityMod",
        "body": "components.mast:SetVelocityMod(${1:set})",
        "description": "参数:(set)<>[] 返回值:无返回值 贡献者:@"
    },
    "mast.OnDeath:": {
        "prefix": "components.mast:OnDeath",
        "body": "components.mast:OnDeath()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mast.SetRudder:": {
        "prefix": "components.mast:SetRudder",
        "body": "components.mast:SetRudder(${1:obj})",
        "description": "参数:(obj)<>[] 返回值:无返回值 贡献者:@"
    },
    "mast.OnRemoveEntity:": {
        "prefix": "components.mast:OnRemoveEntity",
        "body": "components.mast:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mast.CalcSailForce:": {
        "prefix": "components.mast:CalcSailForce",
        "body": "components.mast:CalcSailForce()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mast.UnfurlSail:": {
        "prefix": "components.mast:UnfurlSail",
        "body": "components.mast:UnfurlSail()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mast.SetSailForce:": {
        "prefix": "components.mast:SetSailForce",
        "body": "components.mast:SetSailForce(${1:set})",
        "description": "参数:(set)<>[] 返回值:无返回值 贡献者:@"
    },
    "mast.SailUnfurled:": {
        "prefix": "components.mast:SailUnfurled",
        "body": "components.mast:SailUnfurled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mast.GetFurled0to1:": {
        "prefix": "components.mast:GetFurled0to1",
        "body": "components.mast:GetFurled0to1()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mast.CloseSail:": {
        "prefix": "components.mast:CloseSail",
        "body": "components.mast:CloseSail()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mast.OnUpdate:": {
        "prefix": "components.mast:OnUpdate",
        "body": "components.mast:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "mast.SetReveseDeploy:": {
        "prefix": "components.mast:SetReveseDeploy",
        "body": "components.mast:SetReveseDeploy(${1:set})",
        "description": "参数:(set)<>[] 返回值:无返回值 贡献者:@"
    },
    "mast.SetBoat:": {
        "prefix": "components.mast:SetBoat",
        "body": "components.mast:SetBoat(${1:boat})",
        "description": "参数:(boat)<>[] 返回值:无返回值 贡献者:@"
    },
    "mast.CalcMaxVelocity:": {
        "prefix": "components.mast:CalcMaxVelocity",
        "body": "components.mast:CalcMaxVelocity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mast.RemoveSailFurler:": {
        "prefix": "components.mast:RemoveSailFurler",
        "body": "components.mast:RemoveSailFurler(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "maxhealer.Heal:": {
        "prefix": "components.maxhealer:Heal",
        "body": "components.maxhealer:Heal(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "maxhealer.SetHealthAmount:": {
        "prefix": "components.maxhealer:SetHealthAmount",
        "body": "components.maxhealer:SetHealthAmount(${1:health})",
        "description": "参数:(health)<>[] 返回值:无返回值 贡献者:@"
    },
    "maxlightspawner.SpawnAllLights:": {
        "prefix": "components.maxlightspawner:SpawnAllLights",
        "body": "components.maxlightspawner:SpawnAllLights()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maxlightspawner.OnSave:": {
        "prefix": "components.maxlightspawner:OnSave",
        "body": "components.maxlightspawner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maxlightspawner.OnLoad:": {
        "prefix": "components.maxlightspawner:OnLoad",
        "body": "components.maxlightspawner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "maxlightspawner.SpawnLight:": {
        "prefix": "components.maxlightspawner:SpawnLight",
        "body": "components.maxlightspawner:SpawnLight(${1:location})",
        "description": "参数:(location)<>[] 返回值:无返回值 贡献者:@"
    },
    "maxlightspawner.LoadPostPass:": {
        "prefix": "components.maxlightspawner:LoadPostPass",
        "body": "components.maxlightspawner:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "maxwelltalker.OnCancel:": {
        "prefix": "components.maxwelltalker:OnCancel",
        "body": "components.maxwelltalker:OnCancel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maxwelltalker.SetSpeech:": {
        "prefix": "components.maxwelltalker:SetSpeech",
        "body": "components.maxwelltalker:SetSpeech(${1:speech})",
        "description": "参数:(speech)<>[] 返回值:无返回值 贡献者:@"
    },
    "maxwelltalker.StopTalking:": {
        "prefix": "components.maxwelltalker:StopTalking",
        "body": "components.maxwelltalker:StopTalking()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maxwelltalker.IsTalking:": {
        "prefix": "components.maxwelltalker:IsTalking",
        "body": "components.maxwelltalker:IsTalking()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maxwelltalker.Initialize:": {
        "prefix": "components.maxwelltalker:Initialize",
        "body": "components.maxwelltalker:Initialize()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maxwelltalker.DoTalk:": {
        "prefix": "components.maxwelltalker:DoTalk",
        "body": "components.maxwelltalker:DoTalk()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maxwelltalker.OnRemoveFromEntity:": {
        "prefix": "components.maxwelltalker:OnRemoveFromEntity",
        "body": "components.maxwelltalker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "maxwelltalker.OnClick:": {
        "prefix": "components.maxwelltalker:OnClick",
        "body": "components.maxwelltalker:OnClick()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermcandidate.AddCalories:": {
        "prefix": "components.mermcandidate:AddCalories",
        "body": "components.mermcandidate:AddCalories(${1:food})",
        "description": "参数:(food)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermcandidate.OnLoad:": {
        "prefix": "components.mermcandidate:OnLoad",
        "body": "components.mermcandidate:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermcandidate.OnSave:": {
        "prefix": "components.mermcandidate:OnSave",
        "body": "components.mermcandidate:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermcandidate.ResetCalories:": {
        "prefix": "components.mermcandidate:ResetCalories",
        "body": "components.mermcandidate:ResetCalories()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermcandidate.ShouldTransform:": {
        "prefix": "components.mermcandidate:ShouldTransform",
        "body": "components.mermcandidate:ShouldTransform()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.GetThrone:": {
        "prefix": "components.mermkingmanager:GetThrone",
        "body": "components.mermkingmanager:GetThrone(${1:merm})",
        "description": "参数:(merm)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.OnSave:": {
        "prefix": "components.mermkingmanager:OnSave",
        "body": "components.mermkingmanager:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.CreateMermKing:": {
        "prefix": "components.mermkingmanager:CreateMermKing",
        "body": "components.mermkingmanager:CreateMermKing(${1:candidate},${2:throne})",
        "description": "参数:(candidate)<>[],(throne)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.FindMermCandidate:": {
        "prefix": "components.mermkingmanager:FindMermCandidate",
        "body": "components.mermkingmanager:FindMermCandidate(${1:throne})",
        "description": "参数:(throne)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.HasPauldronAnywhere:": {
        "prefix": "components.mermkingmanager:HasPauldronAnywhere",
        "body": "components.mermkingmanager:HasPauldronAnywhere()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.GetCandidate:": {
        "prefix": "components.mermkingmanager:GetCandidate",
        "body": "components.mermkingmanager:GetCandidate(${1:throne})",
        "description": "参数:(throne)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.HasCrownAnywhere:": {
        "prefix": "components.mermkingmanager:HasCrownAnywhere",
        "body": "components.mermkingmanager:HasCrownAnywhere()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.GetMainThrone:": {
        "prefix": "components.mermkingmanager:GetMainThrone",
        "body": "components.mermkingmanager:GetMainThrone()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.LoadPostPass:": {
        "prefix": "components.mermkingmanager:LoadPostPass",
        "body": "components.mermkingmanager:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.IsCandidateAtThrone:": {
        "prefix": "components.mermkingmanager:IsCandidateAtThrone",
        "body": "components.mermkingmanager:IsCandidateAtThrone(${1:candidate},${2:throne})",
        "description": "参数:(candidate)<>[],(throne)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.IsThroneCandidate:": {
        "prefix": "components.mermkingmanager:IsThroneCandidate",
        "body": "components.mermkingmanager:IsThroneCandidate(${1:merm},${2:throne})",
        "description": "参数:(merm)<>[],(throne)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.HasKingLocal:": {
        "prefix": "components.mermkingmanager:HasKingLocal",
        "body": "components.mermkingmanager:HasKingLocal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.IsThroneValid:": {
        "prefix": "components.mermkingmanager:IsThroneValid",
        "body": "components.mermkingmanager:IsThroneValid(${1:throne})",
        "description": "参数:(throne)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.ShouldGoToThrone:": {
        "prefix": "components.mermkingmanager:ShouldGoToThrone",
        "body": "components.mermkingmanager:ShouldGoToThrone(${1:merm},${2:throne})",
        "description": "参数:(merm)<>[],(throne)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.HasTridentAnywhere:": {
        "prefix": "components.mermkingmanager:HasTridentAnywhere",
        "body": "components.mermkingmanager:HasTridentAnywhere()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.OnThroneDestroyed:": {
        "prefix": "components.mermkingmanager:OnThroneDestroyed",
        "body": "components.mermkingmanager:OnThroneDestroyed(${1:throne})",
        "description": "参数:(throne)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.HasPauldronLocal:": {
        "prefix": "components.mermkingmanager:HasPauldronLocal",
        "body": "components.mermkingmanager:HasPauldronLocal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.IsThrone:": {
        "prefix": "components.mermkingmanager:IsThrone",
        "body": "components.mermkingmanager:IsThrone(${1:throne})",
        "description": "参数:(throne)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.HasCrownLocal:": {
        "prefix": "components.mermkingmanager:HasCrownLocal",
        "body": "components.mermkingmanager:HasCrownLocal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.IsCandidate:": {
        "prefix": "components.mermkingmanager:IsCandidate",
        "body": "components.mermkingmanager:IsCandidate(${1:merm})",
        "description": "参数:(merm)<>[] 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.HasTridentLocal:": {
        "prefix": "components.mermkingmanager:HasTridentLocal",
        "body": "components.mermkingmanager:HasTridentLocal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.HasKing:": {
        "prefix": "components.mermkingmanager:HasKing",
        "body": "components.mermkingmanager:HasKing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.HasKingAnywhere:": {
        "prefix": "components.mermkingmanager:HasKingAnywhere",
        "body": "components.mermkingmanager:HasKingAnywhere()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.GetKing:": {
        "prefix": "components.mermkingmanager:GetKing",
        "body": "components.mermkingmanager:GetKing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mermkingmanager.ShouldTransform:": {
        "prefix": "components.mermkingmanager:ShouldTransform",
        "body": "components.mermkingmanager:ShouldTransform(${1:merm})",
        "description": "参数:(merm)<>[] 返回值:无返回值 贡献者:@"
    },
    "meteorshower.IsShowering:": {
        "prefix": "components.meteorshower:IsShowering",
        "body": "components.meteorshower:IsShowering()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "meteorshower.StartCooldown:": {
        "prefix": "components.meteorshower:StartCooldown",
        "body": "components.meteorshower:StartCooldown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "meteorshower.OnLoad:": {
        "prefix": "components.meteorshower:OnLoad",
        "body": "components.meteorshower:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "meteorshower.GetDebugString:": {
        "prefix": "components.meteorshower:GetDebugString",
        "body": "components.meteorshower:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "meteorshower.StopShower:": {
        "prefix": "components.meteorshower:StopShower",
        "body": "components.meteorshower:StopShower()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "meteorshower.IsCoolingDown:": {
        "prefix": "components.meteorshower:IsCoolingDown",
        "body": "components.meteorshower:IsCoolingDown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "meteorshower.StartShower:": {
        "prefix": "components.meteorshower:StartShower",
        "body": "components.meteorshower:StartShower(${1:level})",
        "description": "参数:(level)<>[] 返回值:无返回值 贡献者:@"
    },
    "meteorshower.OnSave:": {
        "prefix": "components.meteorshower:OnSave",
        "body": "components.meteorshower:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "meteorshower.SpawnMeteor:": {
        "prefix": "components.meteorshower:SpawnMeteor",
        "body": "components.meteorshower:SpawnMeteor(${1:mod})",
        "description": "参数:(mod)<>[] 返回值:无返回值 贡献者:@"
    },
    "miasmawatcher.SetMiasmaSpeedMultiplier:": {
        "prefix": "components.miasmawatcher:SetMiasmaSpeedMultiplier",
        "body": "components.miasmawatcher:SetMiasmaSpeedMultiplier(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "miasmawatcher.AddMiasmaSource:": {
        "prefix": "components.miasmawatcher:AddMiasmaSource",
        "body": "components.miasmawatcher:AddMiasmaSource(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "miasmawatcher.RemoveMiasmaSource:": {
        "prefix": "components.miasmawatcher:RemoveMiasmaSource",
        "body": "components.miasmawatcher:RemoveMiasmaSource(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "miasmawatcher.OnRemoveFromEntity:": {
        "prefix": "components.miasmawatcher:OnRemoveFromEntity",
        "body": "components.miasmawatcher:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "miasmawatcher.ToggleMiasma:": {
        "prefix": "components.miasmawatcher:ToggleMiasma",
        "body": "components.miasmawatcher:ToggleMiasma(${1:active})",
        "description": "参数:(active)<>[] 返回值:无返回值 贡献者:@"
    },
    "miasmawatcher.IsInMiasma:": {
        "prefix": "components.miasmawatcher:IsInMiasma",
        "body": "components.miasmawatcher:IsInMiasma()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "miasmawatcher.UpdateMiasmaWalkSpeed:": {
        "prefix": "components.miasmawatcher:UpdateMiasmaWalkSpeed",
        "body": "components.miasmawatcher:UpdateMiasmaWalkSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.IsWimpy:": {
        "prefix": "components.mightiness:IsWimpy",
        "body": "components.mightiness:IsWimpy()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.SetRateScale:": {
        "prefix": "components.mightiness:SetRateScale",
        "body": "components.mightiness:SetRateScale(${1:ratescale})",
        "description": "参数:(ratescale)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.OnSave:": {
        "prefix": "components.mightiness:OnSave",
        "body": "components.mightiness:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.GetOverMax:": {
        "prefix": "components.mightiness:GetOverMax",
        "body": "components.mightiness:GetOverMax()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.GetScale:": {
        "prefix": "components.mightiness:GetScale",
        "body": "components.mightiness:GetScale()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.GetSkinMode:": {
        "prefix": "components.mightiness:GetSkinMode",
        "body": "components.mightiness:GetSkinMode()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.SetOverMax:": {
        "prefix": "components.mightiness:SetOverMax",
        "body": "components.mightiness:SetOverMax(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.SetPercent:": {
        "prefix": "components.mightiness:SetPercent",
        "body": "components.mightiness:SetPercent(${1:percent},${2:force_update},${3:delay_skin},${4:forcesound})",
        "description": "参数:(percent)<>[],(force_update)<>[],(delay_skin)<>[],(forcesound)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.BecomeState:": {
        "prefix": "components.mightiness:BecomeState",
        "body": "components.mightiness:BecomeState(${1:state},${2:silent},${3:delay_skin},${4:forcesound})",
        "description": "参数:(state)<>[],(silent)<>[],(delay_skin)<>[],(forcesound)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.OnHungerDelta:": {
        "prefix": "components.mightiness:OnHungerDelta",
        "body": "components.mightiness:OnHungerDelta(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.UpdateSkinMode:": {
        "prefix": "components.mightiness:UpdateSkinMode",
        "body": "components.mightiness:UpdateSkinMode(${1:skin_data},${2:delay})",
        "description": "参数:(skin_data)<>[],(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.CanTransform:": {
        "prefix": "components.mightiness:CanTransform",
        "body": "components.mightiness:CanTransform(${1:state})",
        "description": "参数:(state)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.SetRate:": {
        "prefix": "components.mightiness:SetRate",
        "body": "components.mightiness:SetRate(${1:rate})",
        "description": "参数:(rate)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.DoDelta:": {
        "prefix": "components.mightiness:DoDelta",
        "body": "components.mightiness:DoDelta(${1:delta},${2:force_update},${3:delay_skin},${4:forcesound},${5:fromgym})",
        "description": "参数:(delta)<>[],(force_update)<>[],(delay_skin)<>[],(forcesound)<>[],(fromgym)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.GetState:": {
        "prefix": "components.mightiness:GetState",
        "body": "components.mightiness:GetState()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.Resume:": {
        "prefix": "components.mightiness:Resume",
        "body": "components.mightiness:Resume()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.DoDec:": {
        "prefix": "components.mightiness:DoDec",
        "body": "components.mightiness:DoDec(${1:dt},${2:ignore_damage})",
        "description": "参数:(dt)<>[],(ignore_damage)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.OnSetInvincible:": {
        "prefix": "components.mightiness:OnSetInvincible",
        "body": "components.mightiness:OnSetInvincible(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.OnLoad:": {
        "prefix": "components.mightiness:OnLoad",
        "body": "components.mightiness:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.GetDebugString:": {
        "prefix": "components.mightiness:GetDebugString",
        "body": "components.mightiness:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.GetRateScale:": {
        "prefix": "components.mightiness:GetRateScale",
        "body": "components.mightiness:GetRateScale()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.IsPaused:": {
        "prefix": "components.mightiness:IsPaused",
        "body": "components.mightiness:IsPaused()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.IsNormal:": {
        "prefix": "components.mightiness:IsNormal",
        "body": "components.mightiness:IsNormal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.GetMax:": {
        "prefix": "components.mightiness:GetMax",
        "body": "components.mightiness:GetMax()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.SetMax:": {
        "prefix": "components.mightiness:SetMax",
        "body": "components.mightiness:SetMax(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.DelayDrain:": {
        "prefix": "components.mightiness:DelayDrain",
        "body": "components.mightiness:DelayDrain(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.GetCurrent:": {
        "prefix": "components.mightiness:GetCurrent",
        "body": "components.mightiness:GetCurrent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.GetPercent:": {
        "prefix": "components.mightiness:GetPercent",
        "body": "components.mightiness:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.Pause:": {
        "prefix": "components.mightiness:Pause",
        "body": "components.mightiness:Pause()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightiness.LongUpdate:": {
        "prefix": "components.mightiness:LongUpdate",
        "body": "components.mightiness:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightiness.IsMighty:": {
        "prefix": "components.mightiness:IsMighty",
        "body": "components.mightiness:IsMighty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightydumbbell.CanWorkout:": {
        "prefix": "components.mightydumbbell:CanWorkout",
        "body": "components.mightydumbbell:CanWorkout(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightydumbbell.SetConsumption:": {
        "prefix": "components.mightydumbbell:SetConsumption",
        "body": "components.mightydumbbell:SetConsumption(${1:consumption})",
        "description": "参数:(consumption)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightydumbbell.DoAttackWorkout:": {
        "prefix": "components.mightydumbbell:DoAttackWorkout",
        "body": "components.mightydumbbell:DoAttackWorkout(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightydumbbell.IsWorkingOut:": {
        "prefix": "components.mightydumbbell:IsWorkingOut",
        "body": "components.mightydumbbell:IsWorkingOut(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightydumbbell.StartWorkout:": {
        "prefix": "components.mightydumbbell:StartWorkout",
        "body": "components.mightydumbbell:StartWorkout(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightydumbbell.CheckAttackEfficiency:": {
        "prefix": "components.mightydumbbell:CheckAttackEfficiency",
        "body": "components.mightydumbbell:CheckAttackEfficiency(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightydumbbell.DoWorkout:": {
        "prefix": "components.mightydumbbell:DoWorkout",
        "body": "components.mightydumbbell:DoWorkout(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightydumbbell.SetEfficiency:": {
        "prefix": "components.mightydumbbell:SetEfficiency",
        "body": "components.mightydumbbell:SetEfficiency(${1:wimpy},${2:normal},${3:mighty})",
        "description": "参数:(wimpy)<>[],(normal)<>[],(mighty)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightydumbbell.StopWorkout:": {
        "prefix": "components.mightydumbbell:StopWorkout",
        "body": "components.mightydumbbell:StopWorkout(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightydumbbell.CheckEfficiency:": {
        "prefix": "components.mightydumbbell:CheckEfficiency",
        "body": "components.mightydumbbell:CheckEfficiency(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightygym.CanWorkout:": {
        "prefix": "components.mightygym:CanWorkout",
        "body": "components.mightygym:CanWorkout(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightygym.CharacterExitGym:": {
        "prefix": "components.mightygym:CharacterExitGym",
        "body": "components.mightygym:CharacterExitGym(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightygym.CharacterEnterGym:": {
        "prefix": "components.mightygym:CharacterEnterGym",
        "body": "components.mightygym:CharacterEnterGym(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightygym.InUse:": {
        "prefix": "components.mightygym:InUse",
        "body": "components.mightygym:InUse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightygym.SwapWeight:": {
        "prefix": "components.mightygym:SwapWeight",
        "body": "components.mightygym:SwapWeight(${1:item},${2:swapitem})",
        "description": "参数:(item)<>[],(swapitem)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightygym.SetLevelArt:": {
        "prefix": "components.mightygym:SetLevelArt",
        "body": "components.mightygym:SetLevelArt(${1:level},${2:target})",
        "description": "参数:(level)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightygym.CalcWeight:": {
        "prefix": "components.mightygym:CalcWeight",
        "body": "components.mightygym:CalcWeight()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightygym.UnloadWeight:": {
        "prefix": "components.mightygym:UnloadWeight",
        "body": "components.mightygym:UnloadWeight()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightygym.StartWorkout:": {
        "prefix": "components.mightygym:StartWorkout",
        "body": "components.mightygym:StartWorkout(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightygym.LoadWeight:": {
        "prefix": "components.mightygym:LoadWeight",
        "body": "components.mightygym:LoadWeight(${1:weight},${2:slot})",
        "description": "参数:(weight)<>[],(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightygym.SetSkinModeOnGym:": {
        "prefix": "components.mightygym:SetSkinModeOnGym",
        "body": "components.mightygym:SetSkinModeOnGym(${1:doer},${2:skin_mode})",
        "description": "参数:(doer)<>[],(skin_mode)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightygym.SetWeightSymbol:": {
        "prefix": "components.mightygym:SetWeightSymbol",
        "body": "components.mightygym:SetWeightSymbol(${1:weight},${2:slot})",
        "description": "参数:(weight)<>[],(slot)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightygym.CalculateMightiness:": {
        "prefix": "components.mightygym:CalculateMightiness",
        "body": "components.mightygym:CalculateMightiness(${1:perfect})",
        "description": "参数:(perfect)<>[] 返回值:无返回值 贡献者:@"
    },
    "mightygym.StopWorkout:": {
        "prefix": "components.mightygym:StopWorkout",
        "body": "components.mightygym:StopWorkout()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mightygym.CheckForWeight:": {
        "prefix": "components.mightygym:CheckForWeight",
        "body": "components.mightygym:CheckForWeight()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "migrationpetowner.GetPet:": {
        "prefix": "components.migrationpetowner:GetPet",
        "body": "components.migrationpetowner:GetPet()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "migrationpetowner.SetPetFn:": {
        "prefix": "components.migrationpetowner:SetPetFn",
        "body": "components.migrationpetowner:SetPetFn(${1:petfn})",
        "description": "参数:(petfn)<>[] 返回值:无返回值 贡献者:@"
    },
    "mine.StopTesting:": {
        "prefix": "components.mine:StopTesting",
        "body": "components.mine:StopTesting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mine.OnEntitySleep:": {
        "prefix": "components.mine:OnEntitySleep",
        "body": "components.mine:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mine.SetAlignment:": {
        "prefix": "components.mine:SetAlignment",
        "body": "components.mine:SetAlignment(${1:alignment})",
        "description": "参数:(alignment)<>[] 返回值:无返回值 贡献者:@"
    },
    "mine.OnRemoveFromEntity:": {
        "prefix": "components.mine:OnRemoveFromEntity",
        "body": "components.mine:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mine.SetOnExplodeFn:": {
        "prefix": "components.mine:SetOnExplodeFn",
        "body": "components.mine:SetOnExplodeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "mine.SetOnSprungFn:": {
        "prefix": "components.mine:SetOnSprungFn",
        "body": "components.mine:SetOnSprungFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "mine.SetOnResetFn:": {
        "prefix": "components.mine:SetOnResetFn",
        "body": "components.mine:SetOnResetFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "mine.SetOnDeactivateFn:": {
        "prefix": "components.mine:SetOnDeactivateFn",
        "body": "components.mine:SetOnDeactivateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "mine.SetReusable:": {
        "prefix": "components.mine:SetReusable",
        "body": "components.mine:SetReusable(${1:reusable})",
        "description": "参数:(reusable)<>[] 返回值:无返回值 贡献者:@"
    },
    "mine.OnLoad:": {
        "prefix": "components.mine:OnLoad",
        "body": "components.mine:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "mine.OnEntityWake:": {
        "prefix": "components.mine:OnEntityWake",
        "body": "components.mine:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mine.OnSave:": {
        "prefix": "components.mine:OnSave",
        "body": "components.mine:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mine.SetRadius:": {
        "prefix": "components.mine:SetRadius",
        "body": "components.mine:SetRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "mine.Reset:": {
        "prefix": "components.mine:Reset",
        "body": "components.mine:Reset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mine.GetTarget:": {
        "prefix": "components.mine:GetTarget",
        "body": "components.mine:GetTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mine.StartTesting:": {
        "prefix": "components.mine:StartTesting",
        "body": "components.mine:StartTesting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mine.Explode:": {
        "prefix": "components.mine:Explode",
        "body": "components.mine:Explode(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "mine.SetTestTimeFn:": {
        "prefix": "components.mine:SetTestTimeFn",
        "body": "components.mine:SetTestTimeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "mine.Spring:": {
        "prefix": "components.mine:Spring",
        "body": "components.mine:Spring()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mine.Deactivate:": {
        "prefix": "components.mine:Deactivate",
        "body": "components.mine:Deactivate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.SetIsIntro:": {
        "prefix": "components.minigame:SetIsIntro",
        "body": "components.minigame:SetIsIntro()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.AddParticipator:": {
        "prefix": "components.minigame:AddParticipator",
        "body": "components.minigame:AddParticipator(${1:participator},${2:notimeout})",
        "description": "参数:(participator)<>[],(notimeout)<>[] 返回值:无返回值 贡献者:@"
    },
    "minigame.OnRemoveFromEntity:": {
        "prefix": "components.minigame:OnRemoveFromEntity",
        "body": "components.minigame:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.TimeSinceLastExcitement:": {
        "prefix": "components.minigame:TimeSinceLastExcitement",
        "body": "components.minigame:TimeSinceLastExcitement()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.SetIsOutro:": {
        "prefix": "components.minigame:SetIsOutro",
        "body": "components.minigame:SetIsOutro()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.SetOnActivatedFn:": {
        "prefix": "components.minigame:SetOnActivatedFn",
        "body": "components.minigame:SetOnActivatedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "minigame.SetOnDeactivatedFn:": {
        "prefix": "components.minigame:SetOnDeactivatedFn",
        "body": "components.minigame:SetOnDeactivatedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "minigame.IsActive:": {
        "prefix": "components.minigame:IsActive",
        "body": "components.minigame:IsActive()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.GetDebugString:": {
        "prefix": "components.minigame:GetDebugString",
        "body": "components.minigame:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.Activate:": {
        "prefix": "components.minigame:Activate",
        "body": "components.minigame:Activate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.IsExciting:": {
        "prefix": "components.minigame:IsExciting",
        "body": "components.minigame:IsExciting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.GetIsIntro:": {
        "prefix": "components.minigame:GetIsIntro",
        "body": "components.minigame:GetIsIntro()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.GetIsOutro:": {
        "prefix": "components.minigame:GetIsOutro",
        "body": "components.minigame:GetIsOutro()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.GetIsPlaying:": {
        "prefix": "components.minigame:GetIsPlaying",
        "body": "components.minigame:GetIsPlaying()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.DoActivePulse:": {
        "prefix": "components.minigame:DoActivePulse",
        "body": "components.minigame:DoActivePulse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.AddSpectator:": {
        "prefix": "components.minigame:AddSpectator",
        "body": "components.minigame:AddSpectator(${1:spectator})",
        "description": "参数:(spectator)<>[] 返回值:无返回值 贡献者:@"
    },
    "minigame.RecordExcitement:": {
        "prefix": "components.minigame:RecordExcitement",
        "body": "components.minigame:RecordExcitement()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.SetIsPlaying:": {
        "prefix": "components.minigame:SetIsPlaying",
        "body": "components.minigame:SetIsPlaying()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minigame.Deactivate:": {
        "prefix": "components.minigame:Deactivate",
        "body": "components.minigame:Deactivate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minionspawner.SpawnNewMinion:": {
        "prefix": "components.minionspawner:SpawnNewMinion",
        "body": "components.minionspawner:SpawnNewMinion()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minionspawner.LongUpdate:": {
        "prefix": "components.minionspawner:LongUpdate",
        "body": "components.minionspawner:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "minionspawner.MaxedMinions:": {
        "prefix": "components.minionspawner:MaxedMinions",
        "body": "components.minionspawner:MaxedMinions()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minionspawner.MakeSpawnLocations:": {
        "prefix": "components.minionspawner:MakeSpawnLocations",
        "body": "components.minionspawner:MakeSpawnLocations()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minionspawner.LoadPostPass:": {
        "prefix": "components.minionspawner:LoadPostPass",
        "body": "components.minionspawner:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "minionspawner.GetSpawnLocation:": {
        "prefix": "components.minionspawner:GetSpawnLocation",
        "body": "components.minionspawner:GetSpawnLocation(${1:num})",
        "description": "参数:(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "minionspawner.ResumeSpawn:": {
        "prefix": "components.minionspawner:ResumeSpawn",
        "body": "components.minionspawner:ResumeSpawn(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "minionspawner.SetSpawnInfo:": {
        "prefix": "components.minionspawner:SetSpawnInfo",
        "body": "components.minionspawner:SetSpawnInfo(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "minionspawner.RemovePosition:": {
        "prefix": "components.minionspawner:RemovePosition",
        "body": "components.minionspawner:RemovePosition(${1:num})",
        "description": "参数:(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "minionspawner.StartNextSpawn:": {
        "prefix": "components.minionspawner:StartNextSpawn",
        "body": "components.minionspawner:StartNextSpawn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minionspawner.OnLoad:": {
        "prefix": "components.minionspawner:OnLoad",
        "body": "components.minionspawner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "minionspawner.GetDebugString:": {
        "prefix": "components.minionspawner:GetDebugString",
        "body": "components.minionspawner:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minionspawner.GetNextSpawnTime:": {
        "prefix": "components.minionspawner:GetNextSpawnTime",
        "body": "components.minionspawner:GetNextSpawnTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minionspawner.KillAllMinions:": {
        "prefix": "components.minionspawner:KillAllMinions",
        "body": "components.minionspawner:KillAllMinions()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minionspawner.AddPosition:": {
        "prefix": "components.minionspawner:AddPosition",
        "body": "components.minionspawner:AddPosition(${1:num},${2:tbl})",
        "description": "参数:(num)<>[],(tbl)<>[] 返回值:无返回值 贡献者:@"
    },
    "minionspawner.CheckTileCompatibility:": {
        "prefix": "components.minionspawner:CheckTileCompatibility",
        "body": "components.minionspawner:CheckTileCompatibility(${1:tile})",
        "description": "参数:(tile)<>[] 返回值:无返回值 贡献者:@"
    },
    "minionspawner.TakeOwnership:": {
        "prefix": "components.minionspawner:TakeOwnership",
        "body": "components.minionspawner:TakeOwnership(${1:minion})",
        "description": "参数:(minion)<>[] 返回值:无返回值 贡献者:@"
    },
    "minionspawner.MakeMinion:": {
        "prefix": "components.minionspawner:MakeMinion",
        "body": "components.minionspawner:MakeMinion()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "minionspawner.OnLostMinion:": {
        "prefix": "components.minionspawner:OnLostMinion",
        "body": "components.minionspawner:OnLostMinion(${1:minion})",
        "description": "参数:(minion)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.GetMoistureRate:": {
        "prefix": "components.moisture:GetMoistureRate",
        "body": "components.moisture:GetMoistureRate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.DoDelta:": {
        "prefix": "components.moisture:DoDelta",
        "body": "components.moisture:DoDelta(${1:num},${2:no_announce})",
        "description": "参数:(num)<>[],(no_announce)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.IsWet:": {
        "prefix": "components.moisture:IsWet",
        "body": "components.moisture:IsWet()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.GetMoisturePercent:": {
        "prefix": "components.moisture:GetMoisturePercent",
        "body": "components.moisture:GetMoisturePercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.TransferComponent:": {
        "prefix": "components.moisture:TransferComponent",
        "body": "components.moisture:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.GetRateBonus:": {
        "prefix": "components.moisture:GetRateBonus",
        "body": "components.moisture:GetRateBonus()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.SetPercent:": {
        "prefix": "components.moisture:SetPercent",
        "body": "components.moisture:SetPercent(${1:per})",
        "description": "参数:(per)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.GetRate:": {
        "prefix": "components.moisture:GetRate",
        "body": "components.moisture:GetRate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.GetMoisture:": {
        "prefix": "components.moisture:GetMoisture",
        "body": "components.moisture:GetMoisture()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.GetMaxMoisture:": {
        "prefix": "components.moisture:GetMaxMoisture",
        "body": "components.moisture:GetMaxMoisture()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.ForceDry:": {
        "prefix": "components.moisture:ForceDry",
        "body": "components.moisture:ForceDry(${1:force},${2:source})",
        "description": "参数:(force)<>[],(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.GetWaterproofness:": {
        "prefix": "components.moisture:GetWaterproofness",
        "body": "components.moisture:GetWaterproofness()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.OnSave:": {
        "prefix": "components.moisture:OnSave",
        "body": "components.moisture:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.LongUpdate:": {
        "prefix": "components.moisture:LongUpdate",
        "body": "components.moisture:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.GetEquippedMoistureRate:": {
        "prefix": "components.moisture:GetEquippedMoistureRate",
        "body": "components.moisture:GetEquippedMoistureRate(${1:dryingrate})",
        "description": "参数:(dryingrate)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.SetWaterproofInventory:": {
        "prefix": "components.moisture:SetWaterproofInventory",
        "body": "components.moisture:SetWaterproofInventory(${1:waterproof})",
        "description": "参数:(waterproof)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.RemoveRateBonus:": {
        "prefix": "components.moisture:RemoveRateBonus",
        "body": "components.moisture:RemoveRateBonus(${1:src},${2:key})",
        "description": "参数:(src)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.OnLoad:": {
        "prefix": "components.moisture:OnLoad",
        "body": "components.moisture:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.GetDebugString:": {
        "prefix": "components.moisture:GetDebugString",
        "body": "components.moisture:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.GetRateScale:": {
        "prefix": "components.moisture:GetRateScale",
        "body": "components.moisture:GetRateScale()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.SetMoistureLevel:": {
        "prefix": "components.moisture:SetMoistureLevel",
        "body": "components.moisture:SetMoistureLevel(${1:num})",
        "description": "参数:(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.AddRateBonus:": {
        "prefix": "components.moisture:AddRateBonus",
        "body": "components.moisture:AddRateBonus(${1:src},${2:bonus},${3:key})",
        "description": "参数:(src)<>[],(bonus)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.GetSleepingBagDryingRate:": {
        "prefix": "components.moisture:GetSleepingBagDryingRate",
        "body": "components.moisture:GetSleepingBagDryingRate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.GetDryingRate:": {
        "prefix": "components.moisture:GetDryingRate",
        "body": "components.moisture:GetDryingRate(${1:moisturerate})",
        "description": "参数:(moisturerate)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.IsForceDry:": {
        "prefix": "components.moisture:IsForceDry",
        "body": "components.moisture:IsForceDry()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.OnUpdate:": {
        "prefix": "components.moisture:OnUpdate",
        "body": "components.moisture:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.GetSegs:": {
        "prefix": "components.moisture:GetSegs",
        "body": "components.moisture:GetSegs()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.SetInherentWaterproofness:": {
        "prefix": "components.moisture:SetInherentWaterproofness",
        "body": "components.moisture:SetInherentWaterproofness(${1:waterproofness})",
        "description": "参数:(waterproofness)<>[] 返回值:无返回值 贡献者:@"
    },
    "moisture.GetWaterproofInventory:": {
        "prefix": "components.moisture:GetWaterproofInventory",
        "body": "components.moisture:GetWaterproofInventory()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moisture.AnnounceMoisture:": {
        "prefix": "components.moisture:AnnounceMoisture",
        "body": "components.moisture:AnnounceMoisture(${1:oldSegs},${2:newSegs})",
        "description": "参数:(oldSegs)<>[],(newSegs)<>[] 返回值:无返回值 贡献者:@"
    },
    "moistureimmunity.RemoveSource:": {
        "prefix": "components.moistureimmunity:RemoveSource",
        "body": "components.moistureimmunity:RemoveSource(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "moistureimmunity.AddSource:": {
        "prefix": "components.moistureimmunity:AddSource",
        "body": "components.moistureimmunity:AddSource(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "moistureimmunity.OnRemoveFromEntity:": {
        "prefix": "components.moistureimmunity:OnRemoveFromEntity",
        "body": "components.moistureimmunity:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moistureimmunity.RemoveSource_Internal:": {
        "prefix": "components.moistureimmunity:RemoveSource_Internal",
        "body": "components.moistureimmunity:RemoveSource_Internal(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "mood.ResetMood:": {
        "prefix": "components.mood:ResetMood",
        "body": "components.mood:ResetMood()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mood.OnSave:": {
        "prefix": "components.mood:OnSave",
        "body": "components.mood:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mood.CheckForMoodChange:": {
        "prefix": "components.mood:CheckForMoodChange",
        "body": "components.mood:CheckForMoodChange()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mood.GetDebugString:": {
        "prefix": "components.mood:GetDebugString",
        "body": "components.mood:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mood.ValidateMood:": {
        "prefix": "components.mood:ValidateMood",
        "body": "components.mood:ValidateMood()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mood.IsInMood:": {
        "prefix": "components.mood:IsInMood",
        "body": "components.mood:IsInMood()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "mood.SetMoodSeason:": {
        "prefix": "components.mood:SetMoodSeason",
        "body": "components.mood:SetMoodSeason(${1:activeseason})",
        "description": "参数:(activeseason)<>[] 返回值:无返回值 贡献者:@"
    },
    "mood.SetInMoodFn:": {
        "prefix": "components.mood:SetInMoodFn",
        "body": "components.mood:SetInMoodFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "mood.OnLoad:": {
        "prefix": "components.mood:OnLoad",
        "body": "components.mood:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "mood.SetLeaveMoodFn:": {
        "prefix": "components.mood:SetLeaveMoodFn",
        "body": "components.mood:SetLeaveMoodFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "mood.SetMoodTimeInDays:": {
        "prefix": "components.mood:SetMoodTimeInDays",
        "body": "components.mood:SetMoodTimeInDays(${1:length},${2:wait},${3:forcemood},${4:worldsettingsmultiplier_inmood},${5:worldsettingsmultiplier_outmood},${6:worldsettingsenabled})",
        "description": "参数:(length)<>[],(wait)<>[],(forcemood)<>[],(worldsettingsmultiplier_inmood)<>[],(worldsettingsmultiplier_outmood)<>[],(worldsettingsenabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "mood.Enable:": {
        "prefix": "components.mood:Enable",
        "body": "components.mood:Enable(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "moonaltarlink.EstablishLink:": {
        "prefix": "components.moonaltarlink:EstablishLink",
        "body": "components.moonaltarlink:EstablishLink(${1:altars})",
        "description": "参数:(altars)<>[] 返回值:无返回值 贡献者:@"
    },
    "moonaltarlink.BreakLink:": {
        "prefix": "components.moonaltarlink:BreakLink",
        "body": "components.moonaltarlink:BreakLink()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonaltarlinktarget.CanBeLinked:": {
        "prefix": "components.moonaltarlinktarget:CanBeLinked",
        "body": "components.moonaltarlinktarget:CanBeLinked()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonaltarlinktarget.OnRemoveFromEntity:": {
        "prefix": "components.moonaltarlinktarget:OnRemoveFromEntity",
        "body": "components.moonaltarlinktarget:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonaltarlinktarget.TryEstablishLink:": {
        "prefix": "components.moonaltarlinktarget:TryEstablishLink",
        "body": "components.moonaltarlinktarget:TryEstablishLink()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonbeastspawner.Start:": {
        "prefix": "components.moonbeastspawner:Start",
        "body": "components.moonbeastspawner:Start()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonbeastspawner.Stop:": {
        "prefix": "components.moonbeastspawner:Stop",
        "body": "components.moonbeastspawner:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonbeastspawner.OnRemoveFromEntity:": {
        "prefix": "components.moonbeastspawner:OnRemoveFromEntity",
        "body": "components.moonbeastspawner:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonbeastspawner.ForcePetrify:": {
        "prefix": "components.moonbeastspawner:ForcePetrify",
        "body": "components.moonbeastspawner:ForcePetrify()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonstormlightningmanager.GetDebugString:": {
        "prefix": "components.moonstormlightningmanager:GetDebugString",
        "body": "components.moonstormlightningmanager:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonstormlightningmanager.OnUpdate:": {
        "prefix": "components.moonstormlightningmanager:OnUpdate",
        "body": "components.moonstormlightningmanager:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "moonstormwatcher.ToggleMoonstorms:": {
        "prefix": "components.moonstormwatcher:ToggleMoonstorms",
        "body": "components.moonstormwatcher:ToggleMoonstorms(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "moonstormwatcher.UpdateMoonstormWalkSpeed:": {
        "prefix": "components.moonstormwatcher:UpdateMoonstormWalkSpeed",
        "body": "components.moonstormwatcher:UpdateMoonstormWalkSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonstormwatcher.GetMoonStormLevel:": {
        "prefix": "components.moonstormwatcher:GetMoonStormLevel",
        "body": "components.moonstormwatcher:GetMoonStormLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonstormwatcher.SetMoonstormSpeedMultiplier:": {
        "prefix": "components.moonstormwatcher:SetMoonstormSpeedMultiplier",
        "body": "components.moonstormwatcher:SetMoonstormSpeedMultiplier(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "moonstormwatcher.UpdateMoonstormWalkSpeed_Internal:": {
        "prefix": "components.moonstormwatcher:UpdateMoonstormWalkSpeed_Internal",
        "body": "components.moonstormwatcher:UpdateMoonstormWalkSpeed_Internal(${1:level})",
        "description": "参数:(level)<>[] 返回值:无返回值 贡献者:@"
    },
    "moonstormwatcher.OnRemoveFromEntity:": {
        "prefix": "components.moonstormwatcher:OnRemoveFromEntity",
        "body": "components.moonstormwatcher:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moonstormwatcher.UpdateMoonstormLevel:": {
        "prefix": "components.moonstormwatcher:UpdateMoonstormLevel",
        "body": "components.moonstormwatcher:UpdateMoonstormLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "moontrader.SetOnAcceptFn:": {
        "prefix": "components.moontrader:SetOnAcceptFn",
        "body": "components.moontrader:SetOnAcceptFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "moontrader.SetCanAcceptFn:": {
        "prefix": "components.moontrader:SetCanAcceptFn",
        "body": "components.moontrader:SetCanAcceptFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "moontrader.AcceptOffering:": {
        "prefix": "components.moontrader:AcceptOffering",
        "body": "components.moontrader:AcceptOffering(${1:giver},${2:item})",
        "description": "参数:(giver)<>[],(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "murderable.OnRemoveFromEntity:": {
        "prefix": "components.murderable:OnRemoveFromEntity",
        "body": "components.murderable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "named.OnSave:": {
        "prefix": "components.named:OnSave",
        "body": "components.named:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "named.PickNewName:": {
        "prefix": "components.named:PickNewName",
        "body": "components.named:PickNewName()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "named.SetName:": {
        "prefix": "components.named:SetName",
        "body": "components.named:SetName(${1:name},${2:author})",
        "description": "参数:(name)<>[],(author)<>[] 返回值:无返回值 贡献者:@"
    },
    "named.OnLoad:": {
        "prefix": "components.named:OnLoad",
        "body": "components.named:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "nightlightmanager.UpdateNightLightPosition:": {
        "prefix": "components.nightlightmanager:UpdateNightLightPosition",
        "body": "components.nightlightmanager:UpdateNightLightPosition(${1:nightlight})",
        "description": "参数:(nightlight)<>[] 返回值:无返回值 贡献者:@"
    },
    "nightlightmanager.GetNightLightsWithFilter:": {
        "prefix": "components.nightlightmanager:GetNightLightsWithFilter",
        "body": "components.nightlightmanager:GetNightLightsWithFilter(${1:filterfn},${2:...})",
        "description": "参数:(filterfn)<>[],(...)<>[] 返回值:无返回值 贡献者:@"
    },
    "nightlightmanager.OnRegisterNightLight:": {
        "prefix": "components.nightlightmanager:OnRegisterNightLight",
        "body": "components.nightlightmanager:OnRegisterNightLight(${1:nightlight})",
        "description": "参数:(nightlight)<>[] 返回值:无返回值 贡献者:@"
    },
    "nightlightmanager.IsNightLightDataInAnyTag:": {
        "prefix": "components.nightlightmanager:IsNightLightDataInAnyTag",
        "body": "components.nightlightmanager:IsNightLightDataInAnyTag(${1:nightlightdata},${2:tags})",
        "description": "参数:(nightlightdata)<>[],(tags)<>[] 返回值:无返回值 贡献者:@"
    },
    "nightlightmanager.OnRemoveFromEntity:": {
        "prefix": "components.nightlightmanager:OnRemoveFromEntity",
        "body": "components.nightlightmanager:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "nightlightmanager.FindClosestNightLightFromListToInst:": {
        "prefix": "components.nightlightmanager:FindClosestNightLightFromListToInst",
        "body": "components.nightlightmanager:FindClosestNightLightFromListToInst(${1:nightlights},${2:inst})",
        "description": "参数:(nightlights)<>[],(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "nis.SetInit:": {
        "prefix": "components.nis:SetInit",
        "body": "components.nis:SetInit(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "nis.OnRemoveEntity:": {
        "prefix": "components.nis:OnRemoveEntity",
        "body": "components.nis:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "nis.SetScript:": {
        "prefix": "components.nis:SetScript",
        "body": "components.nis:SetScript(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "nis.Cancel:": {
        "prefix": "components.nis:Cancel",
        "body": "components.nis:Cancel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "nis.SetCancel:": {
        "prefix": "components.nis:SetCancel",
        "body": "components.nis:SetCancel(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "nis.SetName:": {
        "prefix": "components.nis:SetName",
        "body": "components.nis:SetName(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "nis.OnFinish:": {
        "prefix": "components.nis:OnFinish",
        "body": "components.nis:OnFinish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "nis.Play:": {
        "prefix": "components.nis:Play",
        "body": "components.nis:Play(${1:lines})",
        "description": "参数:(lines)<>[] 返回值:无返回值 贡献者:@"
    },
    "nis.OnClick:": {
        "prefix": "components.nis:OnClick",
        "body": "components.nis:OnClick()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "npc_talker.Say:": {
        "prefix": "components.npc_talker:Say",
        "body": "components.npc_talker:Say(${1:lines},${2:override},${3:stompable},${4:sound})",
        "description": "参数:(lines)<>[],(override)<>[],(stompable)<>[],(sound)<>[] 返回值:无返回值 贡献者:@"
    },
    "npc_talker.haslines:": {
        "prefix": "components.npc_talker:haslines",
        "body": "components.npc_talker:haslines()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "npc_talker.resetqueue:": {
        "prefix": "components.npc_talker:resetqueue",
        "body": "components.npc_talker:resetqueue()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "npc_talker.Chatter:": {
        "prefix": "components.npc_talker:Chatter",
        "body": "components.npc_talker:Chatter(${1:strtbl},${2:index},${3:chatpriority},${4:override},${5:stompable},${6:sound})",
        "description": "参数:(strtbl)<>[],(index)<>[],(chatpriority)<>[],(override)<>[],(stompable)<>[],(sound)<>[] 返回值:无返回值 贡献者:@"
    },
    "npc_talker.donextline:": {
        "prefix": "components.npc_talker:donextline",
        "body": "components.npc_talker:donextline()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oar.Row:": {
        "prefix": "components.oar:Row",
        "body": "components.oar:Row(${1:doer},${2:pos})",
        "description": "参数:(doer)<>[],(pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "oar.RowFail:": {
        "prefix": "components.oar:RowFail",
        "body": "components.oar:RowFail(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "oasis.GetProximityLevel:": {
        "prefix": "components.oasis:GetProximityLevel",
        "body": "components.oasis:GetProximityLevel(${1:ent},${2:range})",
        "description": "参数:(ent)<>[],(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "oasis.IsEntityInOasis:": {
        "prefix": "components.oasis:IsEntityInOasis",
        "body": "components.oasis:IsEntityInOasis(${1:ent})",
        "description": "参数:(ent)<>[] 返回值:无返回值 贡献者:@"
    },
    "objectspawner.SpawnObject:": {
        "prefix": "components.objectspawner:SpawnObject",
        "body": "components.objectspawner:SpawnObject(${1:obj},${2:linked_skinname},${3:skin_id})",
        "description": "参数:(obj)<>[],(linked_skinname)<>[],(skin_id)<>[] 返回值:无返回值 贡献者:@"
    },
    "objectspawner.TakeOwnership:": {
        "prefix": "components.objectspawner:TakeOwnership",
        "body": "components.objectspawner:TakeOwnership(${1:obj})",
        "description": "参数:(obj)<>[] 返回值:无返回值 贡献者:@"
    },
    "objectspawner.OnSave:": {
        "prefix": "components.objectspawner:OnSave",
        "body": "components.objectspawner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "objectspawner.LoadPostPass:": {
        "prefix": "components.objectspawner:LoadPostPass",
        "body": "components.objectspawner:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "occupiable.OnLoad:": {
        "prefix": "components.occupiable:OnLoad",
        "body": "components.occupiable:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "occupiable.Occupy:": {
        "prefix": "components.occupiable:Occupy",
        "body": "components.occupiable:Occupy(${1:occupier})",
        "description": "参数:(occupier)<>[] 返回值:无返回值 贡献者:@"
    },
    "occupiable.GetOccupant:": {
        "prefix": "components.occupiable:GetOccupant",
        "body": "components.occupiable:GetOccupant()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "occupiable.CanOccupy:": {
        "prefix": "components.occupiable:CanOccupy",
        "body": "components.occupiable:CanOccupy(${1:occupier})",
        "description": "参数:(occupier)<>[] 返回值:无返回值 贡献者:@"
    },
    "occupiable.OnSave:": {
        "prefix": "components.occupiable:OnSave",
        "body": "components.occupiable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "occupiable.IsOccupied:": {
        "prefix": "components.occupiable:IsOccupied",
        "body": "components.occupiable:IsOccupied()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "occupiable.OnRemoveFromEntity:": {
        "prefix": "components.occupiable:OnRemoveFromEntity",
        "body": "components.occupiable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "occupiable.Harvest:": {
        "prefix": "components.occupiable:Harvest",
        "body": "components.occupiable:Harvest()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "occupier.SetOwner:": {
        "prefix": "components.occupier:SetOwner",
        "body": "components.occupier:SetOwner(${1:owner})",
        "description": "参数:(owner)<>[] 返回值:无返回值 贡献者:@"
    },
    "occupier.GetOwner:": {
        "prefix": "components.occupier:GetOwner",
        "body": "components.occupier:GetOwner()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ocean.GetCurrentVec3:": {
        "prefix": "components.ocean:GetCurrentVec3",
        "body": "components.ocean:GetCurrentVec3()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ocean.GetCurrentSpeed:": {
        "prefix": "components.ocean:GetCurrentSpeed",
        "body": "components.ocean:GetCurrentSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ocean.GetCurrentAngle:": {
        "prefix": "components.ocean:GetCurrentAngle",
        "body": "components.ocean:GetCurrentAngle()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceancolor.Initialize:": {
        "prefix": "components.oceancolor:Initialize",
        "body": "components.oceancolor:Initialize(${1:has_ocean})",
        "description": "参数:(has_ocean)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceancolor.OnWallUpdate:": {
        "prefix": "components.oceancolor:OnWallUpdate",
        "body": "components.oceancolor:OnWallUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceancolor.OnPhaseChanged:": {
        "prefix": "components.oceancolor:OnPhaseChanged",
        "body": "components.oceancolor:OnPhaseChanged(${1:src},${2:phase})",
        "description": "参数:(src)<>[],(phase)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceancolor.OnPostInit:": {
        "prefix": "components.oceancolor:OnPostInit",
        "body": "components.oceancolor:OnPostInit()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.MakeProjectile:": {
        "prefix": "components.oceanfishable:MakeProjectile",
        "body": "components.oceanfishable:MakeProjectile()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.UpdateStruggleState:": {
        "prefix": "components.oceanfishable:UpdateStruggleState",
        "body": "components.oceanfishable:UpdateStruggleState()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.OnRemoveFromEntity:": {
        "prefix": "components.oceanfishable:OnRemoveFromEntity",
        "body": "components.oceanfishable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.ResetStruggling:": {
        "prefix": "components.oceanfishable:ResetStruggling",
        "body": "components.oceanfishable:ResetStruggling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.GetRod:": {
        "prefix": "components.oceanfishable:GetRod",
        "body": "components.oceanfishable:GetRod()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.OnReelingIn:": {
        "prefix": "components.oceanfishable:OnReelingIn",
        "body": "components.oceanfishable:OnReelingIn(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.WasEatenByA:": {
        "prefix": "components.oceanfishable:WasEatenByA",
        "body": "components.oceanfishable:WasEatenByA(${1:tunafish})",
        "description": "参数:(tunafish)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.SetRod:": {
        "prefix": "components.oceanfishable:SetRod",
        "body": "components.oceanfishable:SetRod(${1:rod})",
        "description": "参数:(rod)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.GetDebugString:": {
        "prefix": "components.oceanfishable:GetDebugString",
        "body": "components.oceanfishable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.CalcLineUnreelRate:": {
        "prefix": "components.oceanfishable:CalcLineUnreelRate",
        "body": "components.oceanfishable:CalcLineUnreelRate(${1:rod})",
        "description": "参数:(rod)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.StrugglingSetup:": {
        "prefix": "components.oceanfishable:StrugglingSetup",
        "body": "components.oceanfishable:StrugglingSetup(${1:walk_speed},${2:run_speed},${3:stamina_def})",
        "description": "参数:(walk_speed)<>[],(run_speed)<>[],(stamina_def)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.CalcStruggleDuration:": {
        "prefix": "components.oceanfishable:CalcStruggleDuration",
        "body": "components.oceanfishable:CalcStruggleDuration()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.IsStruggling:": {
        "prefix": "components.oceanfishable:IsStruggling",
        "body": "components.oceanfishable:IsStruggling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.OnReelingInPst:": {
        "prefix": "components.oceanfishable:OnReelingInPst",
        "body": "components.oceanfishable:OnReelingInPst(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.OnUpdate:": {
        "prefix": "components.oceanfishable:OnUpdate",
        "body": "components.oceanfishable:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.CalcStaminaDrainRate:": {
        "prefix": "components.oceanfishable:CalcStaminaDrainRate",
        "body": "components.oceanfishable:CalcStaminaDrainRate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishable.UpdateRunSpeed:": {
        "prefix": "components.oceanfishable:UpdateRunSpeed",
        "body": "components.oceanfishable:UpdateRunSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishinghook.ClearLostInterestList:": {
        "prefix": "components.oceanfishinghook:ClearLostInterestList",
        "body": "components.oceanfishinghook:ClearLostInterestList()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishinghook.OnRemoveFromEntity:": {
        "prefix": "components.oceanfishinghook:OnRemoveFromEntity",
        "body": "components.oceanfishinghook:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishinghook.UpdateInterestForFishable:": {
        "prefix": "components.oceanfishinghook:UpdateInterestForFishable",
        "body": "components.oceanfishinghook:UpdateInterestForFishable(${1:fish})",
        "description": "参数:(fish)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishinghook.GetDebugString:": {
        "prefix": "components.oceanfishinghook:GetDebugString",
        "body": "components.oceanfishinghook:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishinghook.TestInterest:": {
        "prefix": "components.oceanfishinghook:TestInterest",
        "body": "components.oceanfishinghook:TestInterest(${1:fish})",
        "description": "参数:(fish)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishinghook.HasLostInterest:": {
        "prefix": "components.oceanfishinghook:HasLostInterest",
        "body": "components.oceanfishinghook:HasLostInterest(${1:fish})",
        "description": "参数:(fish)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishinghook.SetLostInterest:": {
        "prefix": "components.oceanfishinghook:SetLostInterest",
        "body": "components.oceanfishinghook:SetLostInterest(${1:fish})",
        "description": "参数:(fish)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishinghook.OnUpdate:": {
        "prefix": "components.oceanfishinghook:OnUpdate",
        "body": "components.oceanfishinghook:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishinghook.OnWallUpdate:": {
        "prefix": "components.oceanfishinghook:OnWallUpdate",
        "body": "components.oceanfishinghook:OnWallUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishinghook.SetLureData:": {
        "prefix": "components.oceanfishinghook:SetLureData",
        "body": "components.oceanfishinghook:SetLureData(${1:lure_data},${2:lure_fns})",
        "description": "参数:(lure_data)<>[],(lure_fns)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishinghook._ClacCharm:": {
        "prefix": "components.oceanfishinghook:_ClacCharm",
        "body": "components.oceanfishinghook:_ClacCharm(${1:fish})",
        "description": "参数:(fish)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.Cast:": {
        "prefix": "components.oceanfishingrod:Cast",
        "body": "components.oceanfishingrod:Cast(${1:fisher},${2:targetpos})",
        "description": "参数:(fisher)<>[],(targetpos)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.SetDefaults:": {
        "prefix": "components.oceanfishingrod:SetDefaults",
        "body": "components.oceanfishingrod:SetDefaults(${1:default_projectile_prefab},${2:default_casting_tuning},${3:default_lure_tuning},${4:default_lure_setup})",
        "description": "参数:(default_projectile_prefab)<>[],(default_casting_tuning)<>[],(default_lure_tuning)<>[],(default_lure_setup)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.UpdateClientMaxCastDistance:": {
        "prefix": "components.oceanfishingrod:UpdateClientMaxCastDistance",
        "body": "components.oceanfishingrod:UpdateClientMaxCastDistance()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.CatchFish:": {
        "prefix": "components.oceanfishingrod:CatchFish",
        "body": "components.oceanfishingrod:CatchFish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.CalcCatchDest:": {
        "prefix": "components.oceanfishingrod:CalcCatchDest",
        "body": "components.oceanfishingrod:CalcCatchDest(${1:src_pos},${2:dest_pos},${3:catch_dist})",
        "description": "参数:(src_pos)<>[],(dest_pos)<>[],(catch_dist)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.GetLureData:": {
        "prefix": "components.oceanfishingrod:GetLureData",
        "body": "components.oceanfishingrod:GetLureData()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.IsLineTensionHigh:": {
        "prefix": "components.oceanfishingrod:IsLineTensionHigh",
        "body": "components.oceanfishingrod:IsLineTensionHigh()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod._CalcCastDest:": {
        "prefix": "components.oceanfishingrod:_CalcCastDest",
        "body": "components.oceanfishingrod:_CalcCastDest(${1:src_pos},${2:dest_pos})",
        "description": "参数:(src_pos)<>[],(dest_pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod._CacheTackleData:": {
        "prefix": "components.oceanfishingrod:_CacheTackleData",
        "body": "components.oceanfishingrod:_CacheTackleData(${1:bobber},${2:lure})",
        "description": "参数:(bobber)<>[],(lure)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod._LaunchCastingProjectile:": {
        "prefix": "components.oceanfishingrod:_LaunchCastingProjectile",
        "body": "components.oceanfishingrod:_LaunchCastingProjectile(${1:source},${2:targetpos},${3:prefab})",
        "description": "参数:(source)<>[],(targetpos)<>[],(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.GetLureFunctions:": {
        "prefix": "components.oceanfishingrod:GetLureFunctions",
        "body": "components.oceanfishingrod:GetLureFunctions()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.GetDebugString:": {
        "prefix": "components.oceanfishingrod:GetDebugString",
        "body": "components.oceanfishingrod:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.IsLineTensionGood:": {
        "prefix": "components.oceanfishingrod:IsLineTensionGood",
        "body": "components.oceanfishingrod:IsLineTensionGood()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod._LaunchFishProjectile:": {
        "prefix": "components.oceanfishingrod:_LaunchFishProjectile",
        "body": "components.oceanfishingrod:_LaunchFishProjectile(${1:projectile},${2:srcpos},${3:targetpos})",
        "description": "参数:(projectile)<>[],(srcpos)<>[],(targetpos)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.GetExtraStaminaDrain:": {
        "prefix": "components.oceanfishingrod:GetExtraStaminaDrain",
        "body": "components.oceanfishingrod:GetExtraStaminaDrain()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.StopFishing:": {
        "prefix": "components.oceanfishingrod:StopFishing",
        "body": "components.oceanfishingrod:StopFishing(${1:reason},${2:lost_tackle})",
        "description": "参数:(reason)<>[],(lost_tackle)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.SetTarget:": {
        "prefix": "components.oceanfishingrod:SetTarget",
        "body": "components.oceanfishingrod:SetTarget(${1:new_target})",
        "description": "参数:(new_target)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.OnUpdate:": {
        "prefix": "components.oceanfishingrod:OnUpdate",
        "body": "components.oceanfishingrod:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.Reel:": {
        "prefix": "components.oceanfishingrod:Reel",
        "body": "components.oceanfishingrod:Reel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.UpdateTensionRating:": {
        "prefix": "components.oceanfishingrod:UpdateTensionRating",
        "body": "components.oceanfishingrod:UpdateTensionRating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.IsLineTensionLow:": {
        "prefix": "components.oceanfishingrod:IsLineTensionLow",
        "body": "components.oceanfishingrod:IsLineTensionLow()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingrod.GetTensionRating:": {
        "prefix": "components.oceanfishingrod:GetTensionRating",
        "body": "components.oceanfishingrod:GetTensionRating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingtackle.IsSingleUse:": {
        "prefix": "components.oceanfishingtackle:IsSingleUse",
        "body": "components.oceanfishingtackle:IsSingleUse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceanfishingtackle.SetCastingData:": {
        "prefix": "components.oceanfishingtackle:SetCastingData",
        "body": "components.oceanfishingtackle:SetCastingData(${1:data},${2:projectile_prefab})",
        "description": "参数:(data)<>[],(projectile_prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanfishingtackle.SetupLure:": {
        "prefix": "components.oceanfishingtackle:SetupLure",
        "body": "components.oceanfishingtackle:SetupLure(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanthrowable.SetOnAddProjectileFn:": {
        "prefix": "components.oceanthrowable:SetOnAddProjectileFn",
        "body": "components.oceanthrowable:SetOnAddProjectileFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceanthrowable.AddProjectile:": {
        "prefix": "components.oceanthrowable:AddProjectile",
        "body": "components.oceanthrowable:AddProjectile()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.HasCaughtItem:": {
        "prefix": "components.oceantrawler:HasCaughtItem",
        "body": "components.oceantrawler:HasCaughtItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.OnSave:": {
        "prefix": "components.oceantrawler:OnSave",
        "body": "components.oceantrawler:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.StartUpdate:": {
        "prefix": "components.oceantrawler:StartUpdate",
        "body": "components.oceantrawler:StartUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.GetBait:": {
        "prefix": "components.oceantrawler:GetBait",
        "body": "components.oceantrawler:GetBait(${1:eater})",
        "description": "参数:(eater)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.Fix:": {
        "prefix": "components.oceantrawler:Fix",
        "body": "components.oceantrawler:Fix()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.LoadPostPass:": {
        "prefix": "components.oceantrawler:LoadPostPass",
        "body": "components.oceantrawler:LoadPostPass()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.Raise:": {
        "prefix": "components.oceantrawler:Raise",
        "body": "components.oceantrawler:Raise()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.CheckForMalbatross:": {
        "prefix": "components.oceantrawler:CheckForMalbatross",
        "body": "components.oceantrawler:CheckForMalbatross()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.OnLoad:": {
        "prefix": "components.oceantrawler:OnLoad",
        "body": "components.oceantrawler:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.OnEntityWake:": {
        "prefix": "components.oceantrawler:OnEntityWake",
        "body": "components.oceantrawler:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.OnUpdate:": {
        "prefix": "components.oceantrawler:OnUpdate",
        "body": "components.oceantrawler:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.SimulateCatchFish:": {
        "prefix": "components.oceantrawler:SimulateCatchFish",
        "body": "components.oceantrawler:SimulateCatchFish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.OnEntitySleep:": {
        "prefix": "components.oceantrawler:OnEntitySleep",
        "body": "components.oceantrawler:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.Reset:": {
        "prefix": "components.oceantrawler:Reset",
        "body": "components.oceantrawler:Reset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.StopUpdating:": {
        "prefix": "components.oceantrawler:StopUpdating",
        "body": "components.oceantrawler:StopUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.HasFishEscaped:": {
        "prefix": "components.oceantrawler:HasFishEscaped",
        "body": "components.oceantrawler:HasFishEscaped()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.ReleaseOverflowFish:": {
        "prefix": "components.oceantrawler:ReleaseOverflowFish",
        "body": "components.oceantrawler:ReleaseOverflowFish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.Lower:": {
        "prefix": "components.oceantrawler:Lower",
        "body": "components.oceantrawler:Lower()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.GetOceanTrawlerSpawnChanceModifier:": {
        "prefix": "components.oceantrawler:GetOceanTrawlerSpawnChanceModifier",
        "body": "components.oceantrawler:GetOceanTrawlerSpawnChanceModifier(${1:spawnpoint})",
        "description": "参数:(spawnpoint)<>[] 返回值:无返回值 贡献者:@"
    },
    "oceantrawler.IsLowered:": {
        "prefix": "components.oceantrawler:IsLowered",
        "body": "components.oceantrawler:IsLowered()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oldager.GetCurrentYearPercent:": {
        "prefix": "components.oldager:GetCurrentYearPercent",
        "body": "components.oldager:GetCurrentYearPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oldager.OnTakeDamage:": {
        "prefix": "components.oldager:OnTakeDamage",
        "body": "components.oldager:OnTakeDamage(${1:amount},${2:overtime},${3:cause},${4:ignore_invincible},${5:afflicter},${6:ignore_absorb})",
        "description": "参数:(amount)<>[],(overtime)<>[],(cause)<>[],(ignore_invincible)<>[],(afflicter)<>[],(ignore_absorb)<>[] 返回值:无返回值 贡献者:@"
    },
    "oldager.OnUpdate:": {
        "prefix": "components.oldager:OnUpdate",
        "body": "components.oldager:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "oldager.StopDamageOverTime:": {
        "prefix": "components.oldager:StopDamageOverTime",
        "body": "components.oldager:StopDamageOverTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oldager.GetDebugString:": {
        "prefix": "components.oldager:GetDebugString",
        "body": "components.oldager:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "oldager.LongUpdate:": {
        "prefix": "components.oldager:LongUpdate",
        "body": "components.oldager:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "oldager.AddValidHealingCause:": {
        "prefix": "components.oldager:AddValidHealingCause",
        "body": "components.oldager:AddValidHealingCause(${1:cause_name})",
        "description": "参数:(cause_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "papereraser.OnRemoveFromEntity:": {
        "prefix": "components.papereraser:OnRemoveFromEntity",
        "body": "components.papereraser:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "papereraser.DoErase:": {
        "prefix": "components.papereraser:DoErase",
        "body": "components.papereraser:DoErase(${1:paper},${2:doer})",
        "description": "参数:(paper)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "parryweapon.SetOnPreParryFn:": {
        "prefix": "components.parryweapon:SetOnPreParryFn",
        "body": "components.parryweapon:SetOnPreParryFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "parryweapon.TryParry:": {
        "prefix": "components.parryweapon:TryParry",
        "body": "components.parryweapon:TryParry(${1:doer},${2:attacker},${3:damage},${4:weapon},${5:stimuli})",
        "description": "参数:(doer)<>[],(attacker)<>[],(damage)<>[],(weapon)<>[],(stimuli)<>[] 返回值:无返回值 贡献者:@"
    },
    "parryweapon.SetOnParryFn:": {
        "prefix": "components.parryweapon:SetOnParryFn",
        "body": "components.parryweapon:SetOnParryFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "parryweapon.OnPreParry:": {
        "prefix": "components.parryweapon:OnPreParry",
        "body": "components.parryweapon:OnPreParry(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "parryweapon.EnterParryState:": {
        "prefix": "components.parryweapon:EnterParryState",
        "body": "components.parryweapon:EnterParryState(${1:doer},${2:rot},${3:duration})",
        "description": "参数:(doer)<>[],(rot)<>[],(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "parryweapon.OnRemoveFromEntity:": {
        "prefix": "components.parryweapon:OnRemoveFromEntity",
        "body": "components.parryweapon:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "parryweapon.SetParryArc:": {
        "prefix": "components.parryweapon:SetParryArc",
        "body": "components.parryweapon:SetParryArc(${1:arc})",
        "description": "参数:(arc)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.SetIgnoreFlotsamGenerator:": {
        "prefix": "components.periodicspawner:SetIgnoreFlotsamGenerator",
        "body": "components.periodicspawner:SetIgnoreFlotsamGenerator(${1:ignores})",
        "description": "参数:(ignores)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.LongUpdate:": {
        "prefix": "components.periodicspawner:LongUpdate",
        "body": "components.periodicspawner:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.SetOnSpawnFn:": {
        "prefix": "components.periodicspawner:SetOnSpawnFn",
        "body": "components.periodicspawner:SetOnSpawnFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.SetMinimumSpacing:": {
        "prefix": "components.periodicspawner:SetMinimumSpacing",
        "body": "components.periodicspawner:SetMinimumSpacing(${1:spacing})",
        "description": "参数:(spacing)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.TrySpawn:": {
        "prefix": "components.periodicspawner:TrySpawn",
        "body": "components.periodicspawner:TrySpawn(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.GetDebugString:": {
        "prefix": "components.periodicspawner:GetDebugString",
        "body": "components.periodicspawner:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.OnLoad:": {
        "prefix": "components.periodicspawner:OnLoad",
        "body": "components.periodicspawner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.SetSpawnTestFn:": {
        "prefix": "components.periodicspawner:SetSpawnTestFn",
        "body": "components.periodicspawner:SetSpawnTestFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.SafeStart:": {
        "prefix": "components.periodicspawner:SafeStart",
        "body": "components.periodicspawner:SafeStart(${1:timeoverride})",
        "description": "参数:(timeoverride)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.Start:": {
        "prefix": "components.periodicspawner:Start",
        "body": "components.periodicspawner:Start(${1:timeoverride})",
        "description": "参数:(timeoverride)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.SetDensityInRange:": {
        "prefix": "components.periodicspawner:SetDensityInRange",
        "body": "components.periodicspawner:SetDensityInRange(${1:range},${2:density})",
        "description": "参数:(range)<>[],(density)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.OnSave:": {
        "prefix": "components.periodicspawner:OnSave",
        "body": "components.periodicspawner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.DoSpawn:": {
        "prefix": "components.periodicspawner:DoSpawn",
        "body": "components.periodicspawner:DoSpawn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.SetRandomTimes:": {
        "prefix": "components.periodicspawner:SetRandomTimes",
        "body": "components.periodicspawner:SetRandomTimes(${1:basetime},${2:variance},${3:no_reset})",
        "description": "参数:(basetime)<>[],(variance)<>[],(no_reset)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.Stop:": {
        "prefix": "components.periodicspawner:Stop",
        "body": "components.periodicspawner:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.SetOnlySpawnOffscreen:": {
        "prefix": "components.periodicspawner:SetOnlySpawnOffscreen",
        "body": "components.periodicspawner:SetOnlySpawnOffscreen(${1:offscreen})",
        "description": "参数:(offscreen)<>[] 返回值:无返回值 贡献者:@"
    },
    "periodicspawner.SetGetSpawnPointFn:": {
        "prefix": "components.periodicspawner:SetGetSpawnPointFn",
        "body": "components.periodicspawner:SetGetSpawnPointFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "perishable.StopPerishing:": {
        "prefix": "components.perishable:StopPerishing",
        "body": "components.perishable:StopPerishing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.SetLocalMultiplier:": {
        "prefix": "components.perishable:SetLocalMultiplier",
        "body": "components.perishable:SetLocalMultiplier(${1:newMult})",
        "description": "参数:(newMult)<>[] 返回值:无返回值 贡献者:@"
    },
    "perishable.IsFresh:": {
        "prefix": "components.perishable:IsFresh",
        "body": "components.perishable:IsFresh()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.OnRemoveFromEntity:": {
        "prefix": "components.perishable:OnRemoveFromEntity",
        "body": "components.perishable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.SetNewMaxPerishTime:": {
        "prefix": "components.perishable:SetNewMaxPerishTime",
        "body": "components.perishable:SetNewMaxPerishTime(${1:newtime})",
        "description": "参数:(newtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "perishable.IsSpoiled:": {
        "prefix": "components.perishable:IsSpoiled",
        "body": "components.perishable:IsSpoiled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.ReducePercent:": {
        "prefix": "components.perishable:ReducePercent",
        "body": "components.perishable:ReducePercent(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "perishable.Dilute:": {
        "prefix": "components.perishable:Dilute",
        "body": "components.perishable:Dilute(${1:number},${2:timeleft})",
        "description": "参数:(number)<>[],(timeleft)<>[] 返回值:无返回值 贡献者:@"
    },
    "perishable.Perish:": {
        "prefix": "components.perishable:Perish",
        "body": "components.perishable:Perish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.OnLoad:": {
        "prefix": "components.perishable:OnLoad",
        "body": "components.perishable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "perishable.OnRemoveEntity:": {
        "prefix": "components.perishable:OnRemoveEntity",
        "body": "components.perishable:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.SetPerishTime:": {
        "prefix": "components.perishable:SetPerishTime",
        "body": "components.perishable:SetPerishTime(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "perishable.StartPerishing:": {
        "prefix": "components.perishable:StartPerishing",
        "body": "components.perishable:StartPerishing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.OnSave:": {
        "prefix": "components.perishable:OnSave",
        "body": "components.perishable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.IsPerishing:": {
        "prefix": "components.perishable:IsPerishing",
        "body": "components.perishable:IsPerishing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.LongUpdate:": {
        "prefix": "components.perishable:LongUpdate",
        "body": "components.perishable:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "perishable.SetOnPerishFn:": {
        "prefix": "components.perishable:SetOnPerishFn",
        "body": "components.perishable:SetOnPerishFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "perishable.GetDebugString:": {
        "prefix": "components.perishable:GetDebugString",
        "body": "components.perishable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.IsStale:": {
        "prefix": "components.perishable:IsStale",
        "body": "components.perishable:IsStale()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.GetPercent:": {
        "prefix": "components.perishable:GetPercent",
        "body": "components.perishable:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.SetPercent:": {
        "prefix": "components.perishable:SetPercent",
        "body": "components.perishable:SetPercent(${1:percent})",
        "description": "参数:(percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "perishable.GetLocalMultiplier:": {
        "prefix": "components.perishable:GetLocalMultiplier",
        "body": "components.perishable:GetLocalMultiplier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "perishable.AddTime:": {
        "prefix": "components.perishable:AddTime",
        "body": "components.perishable:AddTime(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.GetMaxHealth:": {
        "prefix": "components.pethealthbar:GetMaxHealth",
        "body": "components.pethealthbar:GetMaxHealth()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.SetPet:": {
        "prefix": "components.pethealthbar:SetPet",
        "body": "components.pethealthbar:SetPet(${1:pet},${2:symbol},${3:maxhealth})",
        "description": "参数:(pet)<>[],(symbol)<>[],(maxhealth)<>[] 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.GetOverTime:": {
        "prefix": "components.pethealthbar:GetOverTime",
        "body": "components.pethealthbar:GetOverTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.ResetPulse:": {
        "prefix": "components.pethealthbar:ResetPulse",
        "body": "components.pethealthbar:ResetPulse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.GetDebugString:": {
        "prefix": "components.pethealthbar:GetDebugString",
        "body": "components.pethealthbar:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.GetSymbol:": {
        "prefix": "components.pethealthbar:GetSymbol",
        "body": "components.pethealthbar:GetSymbol()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.SetPetSkin:": {
        "prefix": "components.pethealthbar:SetPetSkin",
        "body": "components.pethealthbar:SetPetSkin(${1:petskin})",
        "description": "参数:(petskin)<>[] 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.OnUpdate:": {
        "prefix": "components.pethealthbar:OnUpdate",
        "body": "components.pethealthbar:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.GetPercent:": {
        "prefix": "components.pethealthbar:GetPercent",
        "body": "components.pethealthbar:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.SetSymbol:": {
        "prefix": "components.pethealthbar:SetSymbol",
        "body": "components.pethealthbar:SetSymbol(${1:symbol})",
        "description": "参数:(symbol)<>[] 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.GetPulse:": {
        "prefix": "components.pethealthbar:GetPulse",
        "body": "components.pethealthbar:GetPulse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pethealthbar.SetMaxHealth:": {
        "prefix": "components.pethealthbar:SetMaxHealth",
        "body": "components.pethealthbar:SetMaxHealth(${1:max_health})",
        "description": "参数:(max_health)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.OnSave:": {
        "prefix": "components.petleash:OnSave",
        "body": "components.petleash:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "petleash.GetNumPetsForPrefab:": {
        "prefix": "components.petleash:GetNumPetsForPrefab",
        "body": "components.petleash:GetNumPetsForPrefab(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.SetPetPrefab:": {
        "prefix": "components.petleash:SetPetPrefab",
        "body": "components.petleash:SetPetPrefab(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.OnRemoveFromEntity:": {
        "prefix": "components.petleash:OnRemoveFromEntity",
        "body": "components.petleash:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "petleash.SetOnSpawnFn:": {
        "prefix": "components.petleash:SetOnSpawnFn",
        "body": "components.petleash:SetOnSpawnFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.IsFull:": {
        "prefix": "components.petleash:IsFull",
        "body": "components.petleash:IsFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "petleash.GetMaxPetsForPrefab:": {
        "prefix": "components.petleash:GetMaxPetsForPrefab",
        "body": "components.petleash:GetMaxPetsForPrefab(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.SetOnDespawnFn:": {
        "prefix": "components.petleash:SetOnDespawnFn",
        "body": "components.petleash:SetOnDespawnFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.TransferComponent:": {
        "prefix": "components.petleash:TransferComponent",
        "body": "components.petleash:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.DespawnAllPets:": {
        "prefix": "components.petleash:DespawnAllPets",
        "body": "components.petleash:DespawnAllPets()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "petleash.IsPet:": {
        "prefix": "components.petleash:IsPet",
        "body": "components.petleash:IsPet(${1:pet})",
        "description": "参数:(pet)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.OnLoad:": {
        "prefix": "components.petleash:OnLoad",
        "body": "components.petleash:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.DespawnPet:": {
        "prefix": "components.petleash:DespawnPet",
        "body": "components.petleash:DespawnPet(${1:pet})",
        "description": "参数:(pet)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.SpawnPetAt:": {
        "prefix": "components.petleash:SpawnPetAt",
        "body": "components.petleash:SpawnPetAt(${1:x},${2:y},${3:z},${4:prefaboverride},${5:skin})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(prefaboverride)<>[],(skin)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.SetMaxPets:": {
        "prefix": "components.petleash:SetMaxPets",
        "body": "components.petleash:SetMaxPets(${1:num})",
        "description": "参数:(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.IsFullForPrefab:": {
        "prefix": "components.petleash:IsFullForPrefab",
        "body": "components.petleash:IsFullForPrefab(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.SetOnRemovedFn:": {
        "prefix": "components.petleash:SetOnRemovedFn",
        "body": "components.petleash:SetOnRemovedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.HasPetWithTag:": {
        "prefix": "components.petleash:HasPetWithTag",
        "body": "components.petleash:HasPetWithTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.GetMaxPets:": {
        "prefix": "components.petleash:GetMaxPets",
        "body": "components.petleash:GetMaxPets()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "petleash.GetNumPets:": {
        "prefix": "components.petleash:GetNumPets",
        "body": "components.petleash:GetNumPets()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "petleash.GetPetsWithPrefab:": {
        "prefix": "components.petleash:GetPetsWithPrefab",
        "body": "components.petleash:GetPetsWithPrefab(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.IsPetAPrefabLimitedOne:": {
        "prefix": "components.petleash:IsPetAPrefabLimitedOne",
        "body": "components.petleash:IsPetAPrefabLimitedOne(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.SetMaxPetsForPrefab:": {
        "prefix": "components.petleash:SetMaxPetsForPrefab",
        "body": "components.petleash:SetMaxPetsForPrefab(${1:prefab},${2:maxpets})",
        "description": "参数:(prefab)<>[],(maxpets)<>[] 返回值:无返回值 贡献者:@"
    },
    "petleash.GetPets:": {
        "prefix": "components.petleash:GetPets",
        "body": "components.petleash:GetPets()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "petrifiable.SetPetrifiedFn:": {
        "prefix": "components.petrifiable:SetPetrifiedFn",
        "body": "components.petrifiable:SetPetrifiedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "petrifiable.OnSave:": {
        "prefix": "components.petrifiable:OnSave",
        "body": "components.petrifiable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "petrifiable.OnLoad:": {
        "prefix": "components.petrifiable:OnLoad",
        "body": "components.petrifiable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "petrifiable.IsPetrified:": {
        "prefix": "components.petrifiable:IsPetrified",
        "body": "components.petrifiable:IsPetrified()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "petrifiable.GetDebugString:": {
        "prefix": "components.petrifiable:GetDebugString",
        "body": "components.petrifiable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "petrifiable.OnRemoveFromEntity:": {
        "prefix": "components.petrifiable:OnRemoveFromEntity",
        "body": "components.petrifiable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "petrifiable.Petrify:": {
        "prefix": "components.petrifiable:Petrify",
        "body": "components.petrifiable:Petrify(${1:immediate})",
        "description": "参数:(immediate)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.Pause:": {
        "prefix": "components.pickable:Pause",
        "body": "components.pickable:Pause()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.FinishGrowing:": {
        "prefix": "components.pickable:FinishGrowing",
        "body": "components.pickable:FinishGrowing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.OnSave:": {
        "prefix": "components.pickable:OnSave",
        "body": "components.pickable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.LongUpdate:": {
        "prefix": "components.pickable:LongUpdate",
        "body": "components.pickable:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.SetOnRegenFn:": {
        "prefix": "components.pickable:SetOnRegenFn",
        "body": "components.pickable:SetOnRegenFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.OnRemoveFromEntity:": {
        "prefix": "components.pickable:OnRemoveFromEntity",
        "body": "components.pickable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.MakeEmpty:": {
        "prefix": "components.pickable:MakeEmpty",
        "body": "components.pickable:MakeEmpty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.SetOnPickedFn:": {
        "prefix": "components.pickable:SetOnPickedFn",
        "body": "components.pickable:SetOnPickedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.SetMakeEmptyFn:": {
        "prefix": "components.pickable:SetMakeEmptyFn",
        "body": "components.pickable:SetMakeEmptyFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.IsWildfireStarter:": {
        "prefix": "components.pickable:IsWildfireStarter",
        "body": "components.pickable:IsWildfireStarter()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.Resume:": {
        "prefix": "components.pickable:Resume",
        "body": "components.pickable:Resume()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.SetUp:": {
        "prefix": "components.pickable:SetUp",
        "body": "components.pickable:SetUp(${1:product},${2:regen},${3:number})",
        "description": "参数:(product)<>[],(regen)<>[],(number)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.Fertilize:": {
        "prefix": "components.pickable:Fertilize",
        "body": "components.pickable:Fertilize(${1:fertilizer},${2:doer})",
        "description": "参数:(fertilizer)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.OnLoad:": {
        "prefix": "components.pickable:OnLoad",
        "body": "components.pickable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.GetDebugString:": {
        "prefix": "components.pickable:GetDebugString",
        "body": "components.pickable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.SetMakeBarrenFn:": {
        "prefix": "components.pickable:SetMakeBarrenFn",
        "body": "components.pickable:SetMakeBarrenFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.ConsumeCycles:": {
        "prefix": "components.pickable:ConsumeCycles",
        "body": "components.pickable:ConsumeCycles(${1:cycles})",
        "description": "参数:(cycles)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.Pick:": {
        "prefix": "components.pickable:Pick",
        "body": "components.pickable:Pick(${1:picker})",
        "description": "参数:(picker)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.MakeBarren:": {
        "prefix": "components.pickable:MakeBarren",
        "body": "components.pickable:MakeBarren()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.OnTransplant:": {
        "prefix": "components.pickable:OnTransplant",
        "body": "components.pickable:OnTransplant()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.CanBeFertilized:": {
        "prefix": "components.pickable:CanBeFertilized",
        "body": "components.pickable:CanBeFertilized()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.Regen:": {
        "prefix": "components.pickable:Regen",
        "body": "components.pickable:Regen()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.ChangeProduct:": {
        "prefix": "components.pickable:ChangeProduct",
        "body": "components.pickable:ChangeProduct(${1:newProduct})",
        "description": "参数:(newProduct)<>[] 返回值:无返回值 贡献者:@"
    },
    "pickable.IsBarren:": {
        "prefix": "components.pickable:IsBarren",
        "body": "components.pickable:IsBarren()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pickable.CanBePicked:": {
        "prefix": "components.pickable:CanBePicked",
        "body": "components.pickable:CanBePicked()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pinnable.SpawnShatterFX:": {
        "prefix": "components.pinnable:SpawnShatterFX",
        "body": "components.pinnable:SpawnShatterFX(${1:ratio})",
        "description": "参数:(ratio)<>[] 返回值:无返回值 贡献者:@"
    },
    "pinnable.OnRemoveFromEntity:": {
        "prefix": "components.pinnable:OnRemoveFromEntity",
        "body": "components.pinnable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pinnable.SetDefaultWearOffTime:": {
        "prefix": "components.pinnable:SetDefaultWearOffTime",
        "body": "components.pinnable:SetDefaultWearOffTime(${1:wearofftime})",
        "description": "参数:(wearofftime)<>[] 返回值:无返回值 贡献者:@"
    },
    "pinnable.Unstick:": {
        "prefix": "components.pinnable:Unstick",
        "body": "components.pinnable:Unstick()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pinnable.RemainingRatio:": {
        "prefix": "components.pinnable:RemainingRatio",
        "body": "components.pinnable:RemainingRatio()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pinnable.UpdateStuckStatus:": {
        "prefix": "components.pinnable:UpdateStuckStatus",
        "body": "components.pinnable:UpdateStuckStatus()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pinnable.StartWearingOff:": {
        "prefix": "components.pinnable:StartWearingOff",
        "body": "components.pinnable:StartWearingOff(${1:wearofftime})",
        "description": "参数:(wearofftime)<>[] 返回值:无返回值 贡献者:@"
    },
    "pinnable.Stick:": {
        "prefix": "components.pinnable:Stick",
        "body": "components.pinnable:Stick(${1:goo_build},${2:splashfxlist})",
        "description": "参数:(goo_build)<>[],(splashfxlist)<>[] 返回值:无返回值 贡献者:@"
    },
    "pinnable.IsValidPinTarget:": {
        "prefix": "components.pinnable:IsValidPinTarget",
        "body": "components.pinnable:IsValidPinTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pinnable.IsStuck:": {
        "prefix": "components.pinnable:IsStuck",
        "body": "components.pinnable:IsStuck()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "placer.LinkEntity:": {
        "prefix": "components.placer:LinkEntity",
        "body": "components.placer:LinkEntity(${1:ent},${2:lightoverride})",
        "description": "参数:(ent)<>[],(lightoverride)<>[] 返回值:无返回值 贡献者:@"
    },
    "placer.SetBuilder:": {
        "prefix": "components.placer:SetBuilder",
        "body": "components.placer:SetBuilder(${1:builder},${2:recipe},${3:invobject})",
        "description": "参数:(builder)<>[],(recipe)<>[],(invobject)<>[] 返回值:无返回值 贡献者:@"
    },
    "placer.OnUpdate:": {
        "prefix": "components.placer:OnUpdate",
        "body": "components.placer:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "placer.OnWallUpdate:": {
        "prefix": "components.placer:OnWallUpdate",
        "body": "components.placer:OnWallUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "placer.GetDeployAction:": {
        "prefix": "components.placer:GetDeployAction",
        "body": "components.placer:GetDeployAction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "placer.TestCanBuild:": {
        "prefix": "components.placer:TestCanBuild",
        "body": "components.placer:TestCanBuild()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "planardamage.GetBaseDamage:": {
        "prefix": "components.planardamage:GetBaseDamage",
        "body": "components.planardamage:GetBaseDamage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "planardamage.GetBonus:": {
        "prefix": "components.planardamage:GetBonus",
        "body": "components.planardamage:GetBonus()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "planardamage.GetMultiplier:": {
        "prefix": "components.planardamage:GetMultiplier",
        "body": "components.planardamage:GetMultiplier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "planardamage.AddMultiplier:": {
        "prefix": "components.planardamage:AddMultiplier",
        "body": "components.planardamage:AddMultiplier(${1:src},${2:mult},${3:key})",
        "description": "参数:(src)<>[],(mult)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "planardamage.GetDamage:": {
        "prefix": "components.planardamage:GetDamage",
        "body": "components.planardamage:GetDamage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "planardamage.GetDebugString:": {
        "prefix": "components.planardamage:GetDebugString",
        "body": "components.planardamage:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "planardamage.RemoveBonus:": {
        "prefix": "components.planardamage:RemoveBonus",
        "body": "components.planardamage:RemoveBonus(${1:src},${2:key})",
        "description": "参数:(src)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "planardamage.AddBonus:": {
        "prefix": "components.planardamage:AddBonus",
        "body": "components.planardamage:AddBonus(${1:src},${2:bonus},${3:key})",
        "description": "参数:(src)<>[],(bonus)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "planardamage.SetBaseDamage:": {
        "prefix": "components.planardamage:SetBaseDamage",
        "body": "components.planardamage:SetBaseDamage(${1:damage})",
        "description": "参数:(damage)<>[] 返回值:无返回值 贡献者:@"
    },
    "planardamage.RemoveMultiplier:": {
        "prefix": "components.planardamage:RemoveMultiplier",
        "body": "components.planardamage:RemoveMultiplier(${1:src},${2:key})",
        "description": "参数:(src)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "planardefense.SetBaseDefense:": {
        "prefix": "components.planardefense:SetBaseDefense",
        "body": "components.planardefense:SetBaseDefense(${1:defense})",
        "description": "参数:(defense)<>[] 返回值:无返回值 贡献者:@"
    },
    "planardefense.GetBonus:": {
        "prefix": "components.planardefense:GetBonus",
        "body": "components.planardefense:GetBonus()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "planardefense.GetMultiplier:": {
        "prefix": "components.planardefense:GetMultiplier",
        "body": "components.planardefense:GetMultiplier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "planardefense.GetDefense:": {
        "prefix": "components.planardefense:GetDefense",
        "body": "components.planardefense:GetDefense()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "planardefense.RemoveMultiplier:": {
        "prefix": "components.planardefense:RemoveMultiplier",
        "body": "components.planardefense:RemoveMultiplier(${1:src},${2:key})",
        "description": "参数:(src)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "planardefense.GetDebugString:": {
        "prefix": "components.planardefense:GetDebugString",
        "body": "components.planardefense:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "planardefense.GetBaseDefense:": {
        "prefix": "components.planardefense:GetBaseDefense",
        "body": "components.planardefense:GetBaseDefense()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "planardefense.RemoveBonus:": {
        "prefix": "components.planardefense:RemoveBonus",
        "body": "components.planardefense:RemoveBonus(${1:src},${2:key})",
        "description": "参数:(src)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "planardefense.AddBonus:": {
        "prefix": "components.planardefense:AddBonus",
        "body": "components.planardefense:AddBonus(${1:src},${2:bonus},${3:key})",
        "description": "参数:(src)<>[],(bonus)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "planardefense.AddMultiplier:": {
        "prefix": "components.planardefense:AddMultiplier",
        "body": "components.planardefense:AddMultiplier(${1:src},${2:mult},${3:key})",
        "description": "参数:(src)<>[],(mult)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "planarentity.AbsorbDamage:": {
        "prefix": "components.planarentity:AbsorbDamage",
        "body": "components.planarentity:AbsorbDamage(${1:damage},${2:attacker},${3:weapon},${4:spdmg})",
        "description": "参数:(damage)<>[],(attacker)<>[],(weapon)<>[],(spdmg)<>[] 返回值:无返回值 贡献者:@"
    },
    "planarentity.OnPlanarAttackUndefended:": {
        "prefix": "components.planarentity:OnPlanarAttackUndefended",
        "body": "components.planarentity:OnPlanarAttackUndefended(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "planarentity.OnResistNonPlanarAttack:": {
        "prefix": "components.planarentity:OnResistNonPlanarAttack",
        "body": "components.planarentity:OnResistNonPlanarAttack(${1:attacker})",
        "description": "参数:(attacker)<>[] 返回值:无返回值 贡献者:@"
    },
    "plantregistryupdater.LearnFertilizer:": {
        "prefix": "components.plantregistryupdater:LearnFertilizer",
        "body": "components.plantregistryupdater:LearnFertilizer(${1:fertilizer})",
        "description": "参数:(fertilizer)<>[] 返回值:无返回值 贡献者:@"
    },
    "plantregistryupdater.LearnPlantStage:": {
        "prefix": "components.plantregistryupdater:LearnPlantStage",
        "body": "components.plantregistryupdater:LearnPlantStage(${1:plant},${2:stage})",
        "description": "参数:(plant)<>[],(stage)<>[] 返回值:无返回值 贡献者:@"
    },
    "plantregistryupdater.TakeOversizedPicture:": {
        "prefix": "components.plantregistryupdater:TakeOversizedPicture",
        "body": "components.plantregistryupdater:TakeOversizedPicture(${1:plant},${2:weight},${3:beardskin},${4:beardlength})",
        "description": "参数:(plant)<>[],(weight)<>[],(beardskin)<>[],(beardlength)<>[] 返回值:无返回值 贡献者:@"
    },
    "plantregrowth.TrySpawnNearby:": {
        "prefix": "components.plantregrowth:TrySpawnNearby",
        "body": "components.plantregrowth:TrySpawnNearby()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "plantregrowth.OnSave:": {
        "prefix": "components.plantregrowth:OnSave",
        "body": "components.plantregrowth:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "plantregrowth.OnRemoveEntity:": {
        "prefix": "components.plantregrowth:OnRemoveEntity",
        "body": "components.plantregrowth:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "plantregrowth.GetDebugString:": {
        "prefix": "components.plantregrowth:GetDebugString",
        "body": "components.plantregrowth:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "plantregrowth.SetRegrowthRate:": {
        "prefix": "components.plantregrowth:SetRegrowthRate",
        "body": "components.plantregrowth:SetRegrowthRate(${1:rate})",
        "description": "参数:(rate)<>[] 返回值:无返回值 贡献者:@"
    },
    "plantregrowth.SetProduct:": {
        "prefix": "components.plantregrowth:SetProduct",
        "body": "components.plantregrowth:SetProduct(${1:product})",
        "description": "参数:(product)<>[] 返回值:无返回值 贡献者:@"
    },
    "plantregrowth.ResetGrowthTime:": {
        "prefix": "components.plantregrowth:ResetGrowthTime",
        "body": "components.plantregrowth:ResetGrowthTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "plantregrowth.OnLoad:": {
        "prefix": "components.plantregrowth:OnLoad",
        "body": "components.plantregrowth:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "plantregrowth.SetSearchTag:": {
        "prefix": "components.plantregrowth:SetSearchTag",
        "body": "components.plantregrowth:SetSearchTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "plantregrowth.OnRemoveFromEntity:": {
        "prefix": "components.plantregrowth:OnRemoveFromEntity",
        "body": "components.plantregrowth:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "plantresearchable.LearnPlant:": {
        "prefix": "components.plantresearchable:LearnPlant",
        "body": "components.plantresearchable:LearnPlant(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "plantresearchable.IsRandomSeed:": {
        "prefix": "components.plantresearchable:IsRandomSeed",
        "body": "components.plantresearchable:IsRandomSeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "plantresearchable.GetResearchInfo:": {
        "prefix": "components.plantresearchable:GetResearchInfo",
        "body": "components.plantresearchable:GetResearchInfo()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "plantresearchable.SetResearchFn:": {
        "prefix": "components.plantresearchable:SetResearchFn",
        "body": "components.plantresearchable:SetResearchFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "platformhopdelay.GetDelayTicks:": {
        "prefix": "components.platformhopdelay:GetDelayTicks",
        "body": "components.platformhopdelay:GetDelayTicks()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "platformhopdelay.SetDelayTicks:": {
        "prefix": "components.platformhopdelay:SetDelayTicks",
        "body": "components.platformhopdelay:SetDelayTicks(${1:ticks})",
        "description": "参数:(ticks)<>[] 返回值:无返回值 贡献者:@"
    },
    "platformhopdelay.SetDelay:": {
        "prefix": "components.platformhopdelay:SetDelay",
        "body": "components.platformhopdelay:SetDelay(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "playbill.SetCurrentAct:": {
        "prefix": "components.playbill:SetCurrentAct",
        "body": "components.playbill:SetCurrentAct(${1:act})",
        "description": "参数:(act)<>[] 返回值:无返回值 贡献者:@"
    },
    "playbill.OnSave:": {
        "prefix": "components.playbill:OnSave",
        "body": "components.playbill:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playbill.OnLoad:": {
        "prefix": "components.playbill:OnLoad",
        "body": "components.playbill:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "playbill_lecturn.SetStage:": {
        "prefix": "components.playbill_lecturn:SetStage",
        "body": "components.playbill_lecturn:SetStage(${1:stage})",
        "description": "参数:(stage)<>[] 返回值:无返回值 贡献者:@"
    },
    "playbill_lecturn.ChangeAct:": {
        "prefix": "components.playbill_lecturn:ChangeAct",
        "body": "components.playbill_lecturn:ChangeAct(${1:next_act})",
        "description": "参数:(next_act)<>[] 返回值:无返回值 贡献者:@"
    },
    "playbill_lecturn.OnSave:": {
        "prefix": "components.playbill_lecturn:OnSave",
        "body": "components.playbill_lecturn:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playbill_lecturn.OnRemoveEntity:": {
        "prefix": "components.playbill_lecturn:OnRemoveEntity",
        "body": "components.playbill_lecturn:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playbill_lecturn.UpdateText:": {
        "prefix": "components.playbill_lecturn:UpdateText",
        "body": "components.playbill_lecturn:UpdateText()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playbill_lecturn.LoadPostPass:": {
        "prefix": "components.playbill_lecturn:LoadPostPass",
        "body": "components.playbill_lecturn:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "playbill_lecturn.SwapPlayBill:": {
        "prefix": "components.playbill_lecturn:SwapPlayBill",
        "body": "components.playbill_lecturn:SwapPlayBill(${1:playbill},${2:doer})",
        "description": "参数:(playbill)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.UnregisterContainer:": {
        "prefix": "components.playeractionpicker:UnregisterContainer",
        "body": "components.playeractionpicker:UnregisterContainer(${1:container})",
        "description": "参数:(container)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.GetRightClickActions:": {
        "prefix": "components.playeractionpicker:GetRightClickActions",
        "body": "components.playeractionpicker:GetRightClickActions(${1:position},${2:target},${3:spellbook})",
        "description": "参数:(position)<>[],(target)<>[],(spellbook)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.PushActionFilter:": {
        "prefix": "components.playeractionpicker:PushActionFilter",
        "body": "components.playeractionpicker:PushActionFilter(${1:filterfn},${2:priority})",
        "description": "参数:(filterfn)<>[],(priority)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.GetInventoryActions:": {
        "prefix": "components.playeractionpicker:GetInventoryActions",
        "body": "components.playeractionpicker:GetInventoryActions(${1:useitem},${2:right})",
        "description": "参数:(useitem)<>[],(right)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.DoGetMouseActions:": {
        "prefix": "components.playeractionpicker:DoGetMouseActions",
        "body": "components.playeractionpicker:DoGetMouseActions(${1:position},${2:target},${3:spellbook})",
        "description": "参数:(position)<>[],(target)<>[],(spellbook)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.PopActionFilter:": {
        "prefix": "components.playeractionpicker:PopActionFilter",
        "body": "components.playeractionpicker:PopActionFilter(${1:filterfn})",
        "description": "参数:(filterfn)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.GetPointSpecialActions:": {
        "prefix": "components.playeractionpicker:GetPointSpecialActions",
        "body": "components.playeractionpicker:GetPointSpecialActions(${1:pos},${2:useitem},${3:right},${4:usereticulepos})",
        "description": "参数:(pos)<>[],(useitem)<>[],(right)<>[],(usereticulepos)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.GetSceneActions:": {
        "prefix": "components.playeractionpicker:GetSceneActions",
        "body": "components.playeractionpicker:GetSceneActions(${1:useitem},${2:right})",
        "description": "参数:(useitem)<>[],(right)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.RegisterContainer:": {
        "prefix": "components.playeractionpicker:RegisterContainer",
        "body": "components.playeractionpicker:RegisterContainer(${1:container})",
        "description": "参数:(container)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.OnUpdateActionFilterStack:": {
        "prefix": "components.playeractionpicker:OnUpdateActionFilterStack",
        "body": "components.playeractionpicker:OnUpdateActionFilterStack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.GetEquippedItemActions:": {
        "prefix": "components.playeractionpicker:GetEquippedItemActions",
        "body": "components.playeractionpicker:GetEquippedItemActions(${1:target},${2:useitem},${3:right})",
        "description": "参数:(target)<>[],(useitem)<>[],(right)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.GetCannonAimActions:": {
        "prefix": "components.playeractionpicker:GetCannonAimActions",
        "body": "components.playeractionpicker:GetCannonAimActions(${1:inst},${2:pos},${3:right})",
        "description": "参数:(inst)<>[],(pos)<>[],(right)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.GetLeftClickActions:": {
        "prefix": "components.playeractionpicker:GetLeftClickActions",
        "body": "components.playeractionpicker:GetLeftClickActions(${1:position},${2:target})",
        "description": "参数:(position)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.HasContainerWidgetAction:": {
        "prefix": "components.playeractionpicker:HasContainerWidgetAction",
        "body": "components.playeractionpicker:HasContainerWidgetAction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.GetPointActions:": {
        "prefix": "components.playeractionpicker:GetPointActions",
        "body": "components.playeractionpicker:GetPointActions(${1:pos},${2:useitem},${3:right},${4:target})",
        "description": "参数:(pos)<>[],(useitem)<>[],(right)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.GetSteeringActions:": {
        "prefix": "components.playeractionpicker:GetSteeringActions",
        "body": "components.playeractionpicker:GetSteeringActions(${1:inst},${2:pos},${3:right})",
        "description": "参数:(inst)<>[],(pos)<>[],(right)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeractionpicker.GetUseItemActions:": {
        "prefix": "components.playeractionpicker:GetUseItemActions",
        "body": "components.playeractionpicker:GetUseItemActions(${1:target},${2:useitem},${3:right})",
        "description": "参数:(target)<>[],(useitem)<>[],(right)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.OnSave:": {
        "prefix": "components.playeravatardata:OnSave",
        "body": "components.playeravatardata:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.OnLoad:": {
        "prefix": "components.playeravatardata:OnLoad",
        "body": "components.playeravatardata:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.AddClothingData:": {
        "prefix": "components.playeravatardata:AddClothingData",
        "body": "components.playeravatardata:AddClothingData(${1:save})",
        "description": "参数:(save)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.AddEquipData:": {
        "prefix": "components.playeravatardata:AddEquipData",
        "body": "components.playeravatardata:AddEquipData(${1:save})",
        "description": "参数:(save)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.AddPlayerData:": {
        "prefix": "components.playeravatardata:AddPlayerData",
        "body": "components.playeravatardata:AddPlayerData(${1:save})",
        "description": "参数:(save)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.SetData:": {
        "prefix": "components.playeravatardata:SetData",
        "body": "components.playeravatardata:SetData(${1:client_obj})",
        "description": "参数:(client_obj)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.GetData:": {
        "prefix": "components.playeravatardata:GetData",
        "body": "components.playeravatardata:GetData()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.AddBaseSkinData:": {
        "prefix": "components.playeravatardata:AddBaseSkinData",
        "body": "components.playeravatardata:AddBaseSkinData(${1:save})",
        "description": "参数:(save)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.AddNameData:": {
        "prefix": "components.playeravatardata:AddNameData",
        "body": "components.playeravatardata:AddNameData(${1:save})",
        "description": "参数:(save)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.SetAllowEmptyName:": {
        "prefix": "components.playeravatardata:SetAllowEmptyName",
        "body": "components.playeravatardata:SetAllowEmptyName(${1:allow})",
        "description": "参数:(allow)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.AddAgeData:": {
        "prefix": "components.playeravatardata:AddAgeData",
        "body": "components.playeravatardata:AddAgeData(${1:save})",
        "description": "参数:(save)<>[] 返回值:无返回值 贡献者:@"
    },
    "playeravatardata.SetAllowBurnt:": {
        "prefix": "components.playeravatardata:SetAllowBurnt",
        "body": "components.playeravatardata:SetAllowBurnt(${1:allow})",
        "description": "参数:(allow)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetControllerTarget:": {
        "prefix": "components.playercontroller:GetControllerTarget",
        "body": "components.playercontroller:GetControllerTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.CanLocomote:": {
        "prefix": "components.playercontroller:CanLocomote",
        "body": "components.playercontroller:CanLocomote()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteControllerActionButtonDeploy:": {
        "prefix": "components.playercontroller:OnRemoteControllerActionButtonDeploy",
        "body": "components.playercontroller:OnRemoteControllerActionButtonDeploy(${1:invobject},${2:position},${3:rotation},${4:isreleased})",
        "description": "参数:(invobject)<>[],(position)<>[],(rotation)<>[],(isreleased)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteControllerUseItemOnItemFromInvTile:": {
        "prefix": "components.playercontroller:RemoteControllerUseItemOnItemFromInvTile",
        "body": "components.playercontroller:RemoteControllerUseItemOnItemFromInvTile(${1:buffaction},${2:item},${3:active_item})",
        "description": "参数:(buffaction)<>[],(item)<>[],(active_item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.ClearActionHold:": {
        "prefix": "components.playercontroller:ClearActionHold",
        "body": "components.playercontroller:ClearActionHold()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetRemotePredictPosition:": {
        "prefix": "components.playercontroller:GetRemotePredictPosition",
        "body": "components.playercontroller:GetRemotePredictPosition()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.IsEnabled:": {
        "prefix": "components.playercontroller:IsEnabled",
        "body": "components.playercontroller:IsEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemotePredictOverrideLocomote:": {
        "prefix": "components.playercontroller:RemotePredictOverrideLocomote",
        "body": "components.playercontroller:RemotePredictOverrideLocomote()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.StartBuildPlacementMode:": {
        "prefix": "components.playercontroller:StartBuildPlacementMode",
        "body": "components.playercontroller:StartBuildPlacementMode(${1:recipe},${2:skin})",
        "description": "参数:(recipe)<>[],(skin)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteControllerAltActionButtonPoint:": {
        "prefix": "components.playercontroller:OnRemoteControllerAltActionButtonPoint",
        "body": "components.playercontroller:OnRemoteControllerAltActionButtonPoint(${1:actioncode},${2:position},${3:isreleased},${4:noforce},${5:isspecial},${6:mod_name})",
        "description": "参数:(actioncode)<>[],(position)<>[],(isreleased)<>[],(noforce)<>[],(isspecial)<>[],(mod_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteStopControl:": {
        "prefix": "components.playercontroller:RemoteStopControl",
        "body": "components.playercontroller:RemoteStopControl(${1:control})",
        "description": "参数:(control)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetCursorInventoryObject:": {
        "prefix": "components.playercontroller:GetCursorInventoryObject",
        "body": "components.playercontroller:GetCursorInventoryObject()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.IsLocalOrRemoteHopping:": {
        "prefix": "components.playercontroller:IsLocalOrRemoteHopping",
        "body": "components.playercontroller:IsLocalOrRemoteHopping()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.CancelPlacement:": {
        "prefix": "components.playercontroller:CancelPlacement",
        "body": "components.playercontroller:CancelPlacement(${1:cache})",
        "description": "参数:(cache)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteControllerActionButton:": {
        "prefix": "components.playercontroller:OnRemoteControllerActionButton",
        "body": "components.playercontroller:OnRemoteControllerActionButton(${1:actioncode},${2:target},${3:isreleased},${4:noforce},${5:mod_name})",
        "description": "参数:(actioncode)<>[],(target)<>[],(isreleased)<>[],(noforce)<>[],(mod_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoAttackButton:": {
        "prefix": "components.playercontroller:DoAttackButton",
        "body": "components.playercontroller:DoAttackButton(${1:retarget})",
        "description": "参数:(retarget)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteStopAllControls:": {
        "prefix": "components.playercontroller:RemoteStopAllControls",
        "body": "components.playercontroller:RemoteStopAllControls()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoBoatSteering:": {
        "prefix": "components.playercontroller:DoBoatSteering",
        "body": "components.playercontroller:DoBoatSteering(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetInspectButtonAction:": {
        "prefix": "components.playercontroller:GetInspectButtonAction",
        "body": "components.playercontroller:GetInspectButtonAction(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteControllerAttackButton:": {
        "prefix": "components.playercontroller:OnRemoteControllerAttackButton",
        "body": "components.playercontroller:OnRemoteControllerAttackButton(${1:target},${2:isreleased},${3:noforce})",
        "description": "参数:(target)<>[],(isreleased)<>[],(noforce)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetCursorInventorySlotAndContainer:": {
        "prefix": "components.playercontroller:GetCursorInventorySlotAndContainer",
        "body": "components.playercontroller:GetCursorInventorySlotAndContainer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemotePredictWalking:": {
        "prefix": "components.playercontroller:OnRemotePredictWalking",
        "body": "components.playercontroller:OnRemotePredictWalking(${1:x},${2:z},${3:isdirectwalking},${4:isstart})",
        "description": "参数:(x)<>[],(z)<>[],(isdirectwalking)<>[],(isstart)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteResurrectButton:": {
        "prefix": "components.playercontroller:OnRemoteResurrectButton",
        "body": "components.playercontroller:OnRemoteResurrectButton()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetControllerAttackTarget:": {
        "prefix": "components.playercontroller:GetControllerAttackTarget",
        "body": "components.playercontroller:GetControllerAttackTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteToggleMovementPrediction:": {
        "prefix": "components.playercontroller:OnRemoteToggleMovementPrediction",
        "body": "components.playercontroller:OnRemoteToggleMovementPrediction(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.ToggleController:": {
        "prefix": "components.playercontroller:ToggleController",
        "body": "components.playercontroller:ToggleController(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoControllerUseItemOnSceneFromInvTile:": {
        "prefix": "components.playercontroller:DoControllerUseItemOnSceneFromInvTile",
        "body": "components.playercontroller:DoControllerUseItemOnSceneFromInvTile(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnLeftUp:": {
        "prefix": "components.playercontroller:OnLeftUp",
        "body": "components.playercontroller:OnLeftUp()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteStopWalking:": {
        "prefix": "components.playercontroller:RemoteStopWalking",
        "body": "components.playercontroller:RemoteStopWalking()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoveFromEntity:": {
        "prefix": "components.playercontroller:OnRemoveFromEntity",
        "body": "components.playercontroller:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetRightMouseAction:": {
        "prefix": "components.playercontroller:GetRightMouseAction",
        "body": "components.playercontroller:GetRightMouseAction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.IsControllerTargetLockEnabled:": {
        "prefix": "components.playercontroller:IsControllerTargetLockEnabled",
        "body": "components.playercontroller:IsControllerTargetLockEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnMapAction:": {
        "prefix": "components.playercontroller:OnMapAction",
        "body": "components.playercontroller:OnMapAction(${1:actioncode},${2:position},${3:maptarget})",
        "description": "参数:(actioncode)<>[],(position)<>[],(maptarget)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoControllerAltActionButton:": {
        "prefix": "components.playercontroller:DoControllerAltActionButton",
        "body": "components.playercontroller:DoControllerAltActionButton()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.Activate:": {
        "prefix": "components.playercontroller:Activate",
        "body": "components.playercontroller:Activate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.ControllerTargetLock:": {
        "prefix": "components.playercontroller:ControllerTargetLock",
        "body": "components.playercontroller:ControllerTargetLock(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnControl:": {
        "prefix": "components.playercontroller:OnControl",
        "body": "components.playercontroller:OnControl(${1:control},${2:down})",
        "description": "参数:(control)<>[],(down)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.EncodeControlMods:": {
        "prefix": "components.playercontroller:EncodeControlMods",
        "body": "components.playercontroller:EncodeControlMods()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemapMapAction:": {
        "prefix": "components.playercontroller:RemapMapAction",
        "body": "components.playercontroller:RemapMapAction(${1:act},${2:position})",
        "description": "参数:(act)<>[],(position)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetMapTarget:": {
        "prefix": "components.playercontroller:GetMapTarget",
        "body": "components.playercontroller:GetMapTarget(${1:act})",
        "description": "参数:(act)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteBufferedAction:": {
        "prefix": "components.playercontroller:RemoteBufferedAction",
        "body": "components.playercontroller:RemoteBufferedAction(${1:buffaction})",
        "description": "参数:(buffaction)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRightClick:": {
        "prefix": "components.playercontroller:OnRightClick",
        "body": "components.playercontroller:OnRightClick(${1:down})",
        "description": "参数:(down)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.SetCanUseMap:": {
        "prefix": "components.playercontroller:SetCanUseMap",
        "body": "components.playercontroller:SetCanUseMap(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoControllerUseItemOnSelfFromInvTile:": {
        "prefix": "components.playercontroller:DoControllerUseItemOnSelfFromInvTile",
        "body": "components.playercontroller:DoControllerUseItemOnSelfFromInvTile(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.IsBusy:": {
        "prefix": "components.playercontroller:IsBusy",
        "body": "components.playercontroller:IsBusy()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DecodeControlMods:": {
        "prefix": "components.playercontroller:DecodeControlMods",
        "body": "components.playercontroller:DecodeControlMods(${1:code})",
        "description": "参数:(code)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.CancelAOETargeting:": {
        "prefix": "components.playercontroller:CancelAOETargeting",
        "body": "components.playercontroller:CancelAOETargeting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.IsAOETargeting:": {
        "prefix": "components.playercontroller:IsAOETargeting",
        "body": "components.playercontroller:IsAOETargeting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteUseItemFromInvTile:": {
        "prefix": "components.playercontroller:RemoteUseItemFromInvTile",
        "body": "components.playercontroller:RemoteUseItemFromInvTile(${1:buffaction},${2:item})",
        "description": "参数:(buffaction)<>[],(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoCameraControl:": {
        "prefix": "components.playercontroller:DoCameraControl",
        "body": "components.playercontroller:DoCameraControl()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteAttackButton:": {
        "prefix": "components.playercontroller:RemoteAttackButton",
        "body": "components.playercontroller:RemoteAttackButton(${1:target},${2:force_attack})",
        "description": "参数:(target)<>[],(force_attack)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.IsDoingOrWorking:": {
        "prefix": "components.playercontroller:IsDoingOrWorking",
        "body": "components.playercontroller:IsDoingOrWorking()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteStartHop:": {
        "prefix": "components.playercontroller:OnRemoteStartHop",
        "body": "components.playercontroller:OnRemoteStartHop(${1:x},${2:z},${3:platform})",
        "description": "参数:(x)<>[],(z)<>[],(platform)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.EchoReticuleAt:": {
        "prefix": "components.playercontroller:EchoReticuleAt",
        "body": "components.playercontroller:EchoReticuleAt(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteInspectButton:": {
        "prefix": "components.playercontroller:RemoteInspectButton",
        "body": "components.playercontroller:RemoteInspectButton(${1:action})",
        "description": "参数:(action)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoControllerInspectItemFromInvTile:": {
        "prefix": "components.playercontroller:DoControllerInspectItemFromInvTile",
        "body": "components.playercontroller:DoControllerInspectItemFromInvTile(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoInspectButton:": {
        "prefix": "components.playercontroller:DoInspectButton",
        "body": "components.playercontroller:DoInspectButton()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteActionButton:": {
        "prefix": "components.playercontroller:RemoteActionButton",
        "body": "components.playercontroller:RemoteActionButton(${1:action},${2:isreleased})",
        "description": "参数:(action)<>[],(isreleased)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoDirectWalking:": {
        "prefix": "components.playercontroller:DoDirectWalking",
        "body": "components.playercontroller:DoDirectWalking(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.AttachClassified:": {
        "prefix": "components.playercontroller:AttachClassified",
        "body": "components.playercontroller:AttachClassified(${1:classified})",
        "description": "参数:(classified)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.UpdateControllerTargets:": {
        "prefix": "components.playercontroller:UpdateControllerTargets",
        "body": "components.playercontroller:UpdateControllerTargets(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteResurrectButton:": {
        "prefix": "components.playercontroller:RemoteResurrectButton",
        "body": "components.playercontroller:RemoteResurrectButton()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteStopControl:": {
        "prefix": "components.playercontroller:OnRemoteStopControl",
        "body": "components.playercontroller:OnRemoteStopControl(${1:control})",
        "description": "参数:(control)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteControllerAltActionButton:": {
        "prefix": "components.playercontroller:OnRemoteControllerAltActionButton",
        "body": "components.playercontroller:OnRemoteControllerAltActionButton(${1:actioncode},${2:target},${3:isreleased},${4:noforce},${5:mod_name})",
        "description": "参数:(actioncode)<>[],(target)<>[],(isreleased)<>[],(noforce)<>[],(mod_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnWallUpdate:": {
        "prefix": "components.playercontroller:OnWallUpdate",
        "body": "components.playercontroller:OnWallUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteDirectWalking:": {
        "prefix": "components.playercontroller:OnRemoteDirectWalking",
        "body": "components.playercontroller:OnRemoteDirectWalking(${1:x},${2:z})",
        "description": "参数:(x)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoActionAutoEquip:": {
        "prefix": "components.playercontroller:DoActionAutoEquip",
        "body": "components.playercontroller:DoActionAutoEquip(${1:buffaction})",
        "description": "参数:(buffaction)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.ClearControlMods:": {
        "prefix": "components.playercontroller:ClearControlMods",
        "body": "components.playercontroller:ClearControlMods()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteMakeRecipeFromMenu:": {
        "prefix": "components.playercontroller:RemoteMakeRecipeFromMenu",
        "body": "components.playercontroller:RemoteMakeRecipeFromMenu(${1:recipe},${2:skin})",
        "description": "参数:(recipe)<>[],(skin)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteInspectItemFromInvTile:": {
        "prefix": "components.playercontroller:RemoteInspectItemFromInvTile",
        "body": "components.playercontroller:RemoteInspectItemFromInvTile(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteAttackButton:": {
        "prefix": "components.playercontroller:OnRemoteAttackButton",
        "body": "components.playercontroller:OnRemoteAttackButton(${1:target},${2:force_attack},${3:noforce})",
        "description": "参数:(target)<>[],(force_attack)<>[],(noforce)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoDragWalking:": {
        "prefix": "components.playercontroller:DoDragWalking",
        "body": "components.playercontroller:DoDragWalking(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteLeftClick:": {
        "prefix": "components.playercontroller:OnRemoteLeftClick",
        "body": "components.playercontroller:OnRemoteLeftClick(${1:actioncode},${2:position},${3:target},${4:isreleased},${5:controlmodscode},${6:noforce},${7:mod_name},${8:spellbook},${9:spell_id})",
        "description": "参数:(actioncode)<>[],(position)<>[],(target)<>[],(isreleased)<>[],(controlmodscode)<>[],(noforce)<>[],(mod_name)<>[],(spellbook)<>[],(spell_id)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoControllerAttackButton:": {
        "prefix": "components.playercontroller:DoControllerAttackButton",
        "body": "components.playercontroller:DoControllerAttackButton(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.UsingMouse:": {
        "prefix": "components.playercontroller:UsingMouse",
        "body": "components.playercontroller:UsingMouse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DetachClassified:": {
        "prefix": "components.playercontroller:DetachClassified",
        "body": "components.playercontroller:DetachClassified()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.EnableMapControls:": {
        "prefix": "components.playercontroller:EnableMapControls",
        "body": "components.playercontroller:EnableMapControls(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoPredictWalking:": {
        "prefix": "components.playercontroller:DoPredictWalking",
        "body": "components.playercontroller:DoPredictWalking(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteStopAllControls:": {
        "prefix": "components.playercontroller:OnRemoteStopAllControls",
        "body": "components.playercontroller:OnRemoteStopAllControls()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteControllerUseItemOnSceneFromInvTile:": {
        "prefix": "components.playercontroller:RemoteControllerUseItemOnSceneFromInvTile",
        "body": "components.playercontroller:RemoteControllerUseItemOnSceneFromInvTile(${1:buffaction},${2:item})",
        "description": "参数:(buffaction)<>[],(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnUpdate:": {
        "prefix": "components.playercontroller:OnUpdate",
        "body": "components.playercontroller:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.Deactivate:": {
        "prefix": "components.playercontroller:Deactivate",
        "body": "components.playercontroller:Deactivate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.TryAOETargeting:": {
        "prefix": "components.playercontroller:TryAOETargeting",
        "body": "components.playercontroller:TryAOETargeting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnLocomotorBufferedAction:": {
        "prefix": "components.playercontroller:OnLocomotorBufferedAction",
        "body": "components.playercontroller:OnLocomotorBufferedAction(${1:act})",
        "description": "参数:(act)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteBufferedAction:": {
        "prefix": "components.playercontroller:OnRemoteBufferedAction",
        "body": "components.playercontroller:OnRemoteBufferedAction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoClientBusyOverrideLocomote:": {
        "prefix": "components.playercontroller:DoClientBusyOverrideLocomote",
        "body": "components.playercontroller:DoClientBusyOverrideLocomote()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetGroundUseSpecialAction:": {
        "prefix": "components.playercontroller:GetGroundUseSpecialAction",
        "body": "components.playercontroller:GetGroundUseSpecialAction(${1:position},${2:right})",
        "description": "参数:(position)<>[],(right)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetRemoteDirectVector:": {
        "prefix": "components.playercontroller:GetRemoteDirectVector",
        "body": "components.playercontroller:GetRemoteDirectVector()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteCastSpellBookFromInv:": {
        "prefix": "components.playercontroller:RemoteCastSpellBookFromInv",
        "body": "components.playercontroller:RemoteCastSpellBookFromInv(${1:item},${2:spell_id})",
        "description": "参数:(item)<>[],(spell_id)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteDropItemFromInvTile:": {
        "prefix": "components.playercontroller:RemoteDropItemFromInvTile",
        "body": "components.playercontroller:RemoteDropItemFromInvTile(${1:item},${2:single})",
        "description": "参数:(item)<>[],(single)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteControllerUseItemOnSelfFromInvTile:": {
        "prefix": "components.playercontroller:RemoteControllerUseItemOnSelfFromInvTile",
        "body": "components.playercontroller:RemoteControllerUseItemOnSelfFromInvTile(${1:buffaction},${2:item})",
        "description": "参数:(buffaction)<>[],(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.StartAOETargetingUsing:": {
        "prefix": "components.playercontroller:StartAOETargetingUsing",
        "body": "components.playercontroller:StartAOETargetingUsing(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.HasGroundUseSpecialAction:": {
        "prefix": "components.playercontroller:HasGroundUseSpecialAction",
        "body": "components.playercontroller:HasGroundUseSpecialAction(${1:right})",
        "description": "参数:(right)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.HasAOETargeting:": {
        "prefix": "components.playercontroller:HasAOETargeting",
        "body": "components.playercontroller:HasAOETargeting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteMakeRecipeAtPoint:": {
        "prefix": "components.playercontroller:RemoteMakeRecipeAtPoint",
        "body": "components.playercontroller:RemoteMakeRecipeAtPoint(${1:recipe},${2:pt},${3:rot},${4:skin})",
        "description": "参数:(recipe)<>[],(pt)<>[],(rot)<>[],(skin)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoResurrectButton:": {
        "prefix": "components.playercontroller:DoResurrectButton",
        "body": "components.playercontroller:DoResurrectButton()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.Enable:": {
        "prefix": "components.playercontroller:Enable",
        "body": "components.playercontroller:Enable(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetSceneItemControllerAction:": {
        "prefix": "components.playercontroller:GetSceneItemControllerAction",
        "body": "components.playercontroller:GetSceneItemControllerAction(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.IsControllerTargetLocked:": {
        "prefix": "components.playercontroller:IsControllerTargetLocked",
        "body": "components.playercontroller:IsControllerTargetLocked()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnLeftClick:": {
        "prefix": "components.playercontroller:OnLeftClick",
        "body": "components.playercontroller:OnLeftClick(${1:down})",
        "description": "参数:(down)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RotRight:": {
        "prefix": "components.playercontroller:RotRight",
        "body": "components.playercontroller:RotRight()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetAOETargetingPos:": {
        "prefix": "components.playercontroller:GetAOETargetingPos",
        "body": "components.playercontroller:GetAOETargetingPos()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.CooldownRemoteController:": {
        "prefix": "components.playercontroller:CooldownRemoteController",
        "body": "components.playercontroller:CooldownRemoteController(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteDirectWalking:": {
        "prefix": "components.playercontroller:RemoteDirectWalking",
        "body": "components.playercontroller:RemoteDirectWalking(${1:x},${2:z})",
        "description": "参数:(x)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.UpdateActionsToMapActions:": {
        "prefix": "components.playercontroller:UpdateActionsToMapActions",
        "body": "components.playercontroller:UpdateActionsToMapActions(${1:position},${2:maptarget})",
        "description": "参数:(position)<>[],(maptarget)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.IsMapControlsEnabled:": {
        "prefix": "components.playercontroller:IsMapControlsEnabled",
        "body": "components.playercontroller:IsMapControlsEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetMapActions:": {
        "prefix": "components.playercontroller:GetMapActions",
        "body": "components.playercontroller:GetMapActions(${1:position},${2:maptarget})",
        "description": "参数:(position)<>[],(maptarget)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteRightClick:": {
        "prefix": "components.playercontroller:OnRemoteRightClick",
        "body": "components.playercontroller:OnRemoteRightClick(${1:actioncode},${2:position},${3:target},${4:rotation},${5:isreleased},${6:controlmodscode},${7:noforce},${8:mod_name})",
        "description": "参数:(actioncode)<>[],(position)<>[],(target)<>[],(rotation)<>[],(isreleased)<>[],(controlmodscode)<>[],(noforce)<>[],(mod_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetPlatformRelativePosition:": {
        "prefix": "components.playercontroller:GetPlatformRelativePosition",
        "body": "components.playercontroller:GetPlatformRelativePosition(${1:absolute_x},${2:absolute_z})",
        "description": "参数:(absolute_x)<>[],(absolute_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoAction:": {
        "prefix": "components.playercontroller:DoAction",
        "body": "components.playercontroller:DoAction(${1:buffaction},${2:spellbook})",
        "description": "参数:(buffaction)<>[],(spellbook)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoActionButton:": {
        "prefix": "components.playercontroller:DoActionButton",
        "body": "components.playercontroller:DoActionButton()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteActionButton:": {
        "prefix": "components.playercontroller:OnRemoteActionButton",
        "body": "components.playercontroller:OnRemoteActionButton(${1:actioncode},${2:target},${3:isreleased},${4:noforce},${5:mod_name})",
        "description": "参数:(actioncode)<>[],(target)<>[],(isreleased)<>[],(noforce)<>[],(mod_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteControllerActionButtonPoint:": {
        "prefix": "components.playercontroller:OnRemoteControllerActionButtonPoint",
        "body": "components.playercontroller:OnRemoteControllerActionButtonPoint(${1:actioncode},${2:position},${3:isreleased},${4:noforce},${5:mod_name},${6:isspecial},${7:spellbook},${8:spell_id})",
        "description": "参数:(actioncode)<>[],(position)<>[],(isreleased)<>[],(noforce)<>[],(mod_name)<>[],(isspecial)<>[],(spellbook)<>[],(spell_id)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.IsControllerTargetingModifierDown:": {
        "prefix": "components.playercontroller:IsControllerTargetingModifierDown",
        "body": "components.playercontroller:IsControllerTargetingModifierDown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteDragWalking:": {
        "prefix": "components.playercontroller:OnRemoteDragWalking",
        "body": "components.playercontroller:OnRemoteDragWalking(${1:x},${2:z})",
        "description": "参数:(x)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RepeatHeldAction:": {
        "prefix": "components.playercontroller:RepeatHeldAction",
        "body": "components.playercontroller:RepeatHeldAction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemotePredictWalking:": {
        "prefix": "components.playercontroller:RemotePredictWalking",
        "body": "components.playercontroller:RemotePredictWalking(${1:x},${2:z},${3:isstart})",
        "description": "参数:(x)<>[],(z)<>[],(isstart)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemoteDragWalking:": {
        "prefix": "components.playercontroller:RemoteDragWalking",
        "body": "components.playercontroller:RemoteDragWalking(${1:x},${2:z})",
        "description": "参数:(x)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.IsControlPressed:": {
        "prefix": "components.playercontroller:IsControlPressed",
        "body": "components.playercontroller:IsControlPressed(${1:control})",
        "description": "参数:(control)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteStopHopping:": {
        "prefix": "components.playercontroller:OnRemoteStopHopping",
        "body": "components.playercontroller:OnRemoteStopHopping()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteStopWalking:": {
        "prefix": "components.playercontroller:OnRemoteStopWalking",
        "body": "components.playercontroller:OnRemoteStopWalking()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoControllerDropItemFromInvTile:": {
        "prefix": "components.playercontroller:DoControllerDropItemFromInvTile",
        "body": "components.playercontroller:DoControllerDropItemFromInvTile(${1:item},${2:single})",
        "description": "参数:(item)<>[],(single)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetRemoteDragPosition:": {
        "prefix": "components.playercontroller:GetRemoteDragPosition",
        "body": "components.playercontroller:GetRemoteDragPosition()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetCombatTarget:": {
        "prefix": "components.playercontroller:GetCombatTarget",
        "body": "components.playercontroller:GetCombatTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.CycleControllerAttackTargetForward:": {
        "prefix": "components.playercontroller:CycleControllerAttackTargetForward",
        "body": "components.playercontroller:CycleControllerAttackTargetForward()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetItemSelfAction:": {
        "prefix": "components.playercontroller:GetItemSelfAction",
        "body": "components.playercontroller:GetItemSelfAction(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.CycleControllerAttackTargetBack:": {
        "prefix": "components.playercontroller:CycleControllerAttackTargetBack",
        "body": "components.playercontroller:CycleControllerAttackTargetBack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetCombatRetarget:": {
        "prefix": "components.playercontroller:GetCombatRetarget",
        "body": "components.playercontroller:GetCombatRetarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetGroundUseAction:": {
        "prefix": "components.playercontroller:GetGroundUseAction",
        "body": "components.playercontroller:GetGroundUseAction(${1:position},${2:spellbook})",
        "description": "参数:(position)<>[],(spellbook)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetHoverTextOverride:": {
        "prefix": "components.playercontroller:GetHoverTextOverride",
        "body": "components.playercontroller:GetHoverTextOverride()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemoteInspectButton:": {
        "prefix": "components.playercontroller:OnRemoteInspectButton",
        "body": "components.playercontroller:OnRemoteInspectButton(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoPredictHopping:": {
        "prefix": "components.playercontroller:DoPredictHopping",
        "body": "components.playercontroller:DoPredictHopping(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.CancelDeployPlacement:": {
        "prefix": "components.playercontroller:CancelDeployPlacement",
        "body": "components.playercontroller:CancelDeployPlacement()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.OnRemotePredictOverrideLocomote:": {
        "prefix": "components.playercontroller:OnRemotePredictOverrideLocomote",
        "body": "components.playercontroller:OnRemotePredictOverrideLocomote(${1:dir})",
        "description": "参数:(dir)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RotLeft:": {
        "prefix": "components.playercontroller:RotLeft",
        "body": "components.playercontroller:RotLeft()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.DoControllerActionButton:": {
        "prefix": "components.playercontroller:DoControllerActionButton",
        "body": "components.playercontroller:DoControllerActionButton()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetActionButtonAction:": {
        "prefix": "components.playercontroller:GetActionButtonAction",
        "body": "components.playercontroller:GetActionButtonAction(${1:force_target})",
        "description": "参数:(force_target)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetResurrectButtonAction:": {
        "prefix": "components.playercontroller:GetResurrectButtonAction",
        "body": "components.playercontroller:GetResurrectButtonAction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RefreshReticule:": {
        "prefix": "components.playercontroller:RefreshReticule",
        "body": "components.playercontroller:RefreshReticule(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.IsAnyOfControlsPressed:": {
        "prefix": "components.playercontroller:IsAnyOfControlsPressed",
        "body": "components.playercontroller:IsAnyOfControlsPressed(${1:...})",
        "description": "参数:(...)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.RemotePausePrediction:": {
        "prefix": "components.playercontroller:RemotePausePrediction",
        "body": "components.playercontroller:RemotePausePrediction(${1:frames})",
        "description": "参数:(frames)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetAttackTarget:": {
        "prefix": "components.playercontroller:GetAttackTarget",
        "body": "components.playercontroller:GetAttackTarget(${1:force_attack},${2:force_target},${3:isretarget},${4:use_remote_predict})",
        "description": "参数:(force_attack)<>[],(force_target)<>[],(isretarget)<>[],(use_remote_predict)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetActiveSpellBook:": {
        "prefix": "components.playercontroller:GetActiveSpellBook",
        "body": "components.playercontroller:GetActiveSpellBook()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playercontroller.CooldownHeldAction:": {
        "prefix": "components.playercontroller:CooldownHeldAction",
        "body": "components.playercontroller:CooldownHeldAction(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "playercontroller.GetLeftMouseAction:": {
        "prefix": "components.playercontroller:GetLeftMouseAction",
        "body": "components.playercontroller:GetLeftMouseAction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playerhearing.UpdateDSPTables:": {
        "prefix": "components.playerhearing:UpdateDSPTables",
        "body": "components.playerhearing:UpdateDSPTables()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playerhearing.GetDSPTables:": {
        "prefix": "components.playerhearing:GetDSPTables",
        "body": "components.playerhearing:GetDSPTables()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playerlightningtarget.DoStrike:": {
        "prefix": "components.playerlightningtarget:DoStrike",
        "body": "components.playerlightningtarget:DoStrike()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playerlightningtarget.SetOnStrikeFn:": {
        "prefix": "components.playerlightningtarget:SetOnStrikeFn",
        "body": "components.playerlightningtarget:SetOnStrikeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "playerlightningtarget.SetHitChance:": {
        "prefix": "components.playerlightningtarget:SetHitChance",
        "body": "components.playerlightningtarget:SetHitChance(${1:chance})",
        "description": "参数:(chance)<>[] 返回值:无返回值 贡献者:@"
    },
    "playerlightningtarget.GetHitChance:": {
        "prefix": "components.playerlightningtarget:GetHitChance",
        "body": "components.playerlightningtarget:GetHitChance()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playermetrics.OnRemoveFromEntity:": {
        "prefix": "components.playermetrics:OnRemoveFromEntity",
        "body": "components.playermetrics:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playerprox.IsPlayerClose:": {
        "prefix": "components.playerprox:IsPlayerClose",
        "body": "components.playerprox:IsPlayerClose()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playerprox.SetTargetMode:": {
        "prefix": "components.playerprox:SetTargetMode",
        "body": "components.playerprox:SetTargetMode(${1:mode},${2:target},${3:override})",
        "description": "参数:(mode)<>[],(target)<>[],(override)<>[] 返回值:无返回值 贡献者:@"
    },
    "playerprox.SetLostTargetFn:": {
        "prefix": "components.playerprox:SetLostTargetFn",
        "body": "components.playerprox:SetLostTargetFn(${1:func})",
        "description": "参数:(func)<>[] 返回值:无返回值 贡献者:@"
    },
    "playerprox.OnEntitySleep:": {
        "prefix": "components.playerprox:OnEntitySleep",
        "body": "components.playerprox:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playerprox.GetDebugString:": {
        "prefix": "components.playerprox:GetDebugString",
        "body": "components.playerprox:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playerprox.SetDist:": {
        "prefix": "components.playerprox:SetDist",
        "body": "components.playerprox:SetDist(${1:near},${2:far})",
        "description": "参数:(near)<>[],(far)<>[] 返回值:无返回值 贡献者:@"
    },
    "playerprox.Stop:": {
        "prefix": "components.playerprox:Stop",
        "body": "components.playerprox:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playerprox.SetTarget:": {
        "prefix": "components.playerprox:SetTarget",
        "body": "components.playerprox:SetTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "playerprox.Schedule:": {
        "prefix": "components.playerprox:Schedule",
        "body": "components.playerprox:Schedule(${1:new_period})",
        "description": "参数:(new_period)<>[] 返回值:无返回值 贡献者:@"
    },
    "playerprox.SetOnPlayerNear:": {
        "prefix": "components.playerprox:SetOnPlayerNear",
        "body": "components.playerprox:SetOnPlayerNear(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "playerprox.OnEntityWake:": {
        "prefix": "components.playerprox:OnEntityWake",
        "body": "components.playerprox:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playerprox.ForceUpdate:": {
        "prefix": "components.playerprox:ForceUpdate",
        "body": "components.playerprox:ForceUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playerprox.SetOnPlayerFar:": {
        "prefix": "components.playerprox:SetOnPlayerFar",
        "body": "components.playerprox:SetOnPlayerFar(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "playerprox.SetPlayerAliveMode:": {
        "prefix": "components.playerprox:SetPlayerAliveMode",
        "body": "components.playerprox:SetPlayerAliveMode(${1:alivemode})",
        "description": "参数:(alivemode)<>[] 返回值:无返回值 贡献者:@"
    },
    "playertargetindicator.ShouldRemoveIndicator:": {
        "prefix": "components.playertargetindicator:ShouldRemoveIndicator",
        "body": "components.playertargetindicator:ShouldRemoveIndicator(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "playertargetindicator.ShouldShowIndicator:": {
        "prefix": "components.playertargetindicator:ShouldShowIndicator",
        "body": "components.playertargetindicator:ShouldShowIndicator(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "playertargetindicator.OnRemoveFromEntity:": {
        "prefix": "components.playertargetindicator:OnRemoveFromEntity",
        "body": "components.playertargetindicator:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playertargetindicator.OnUpdate:": {
        "prefix": "components.playertargetindicator:OnUpdate",
        "body": "components.playertargetindicator:OnUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.ForceScrapMonoleVision:": {
        "prefix": "components.playervision:ForceScrapMonoleVision",
        "body": "components.playervision:ForceScrapMonoleVision(${1:force})",
        "description": "参数:(force)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervision.PushForcedNightVision:": {
        "prefix": "components.playervision:PushForcedNightVision",
        "body": "components.playervision:PushForcedNightVision(${1:source},${2:priority},${3:customcctable},${4:blend})",
        "description": "参数:(source)<>[],(priority)<>[],(customcctable)<>[],(blend)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervision.ForceNightVision:": {
        "prefix": "components.playervision:ForceNightVision",
        "body": "components.playervision:ForceNightVision(${1:force})",
        "description": "参数:(force)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervision.UpdateCCTable:": {
        "prefix": "components.playervision:UpdateCCTable",
        "body": "components.playervision:UpdateCCTable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.HasInspectaclesVision:": {
        "prefix": "components.playervision:HasInspectaclesVision",
        "body": "components.playervision:HasInspectaclesVision()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.HasScrapMonoleVision:": {
        "prefix": "components.playervision:HasScrapMonoleVision",
        "body": "components.playervision:HasScrapMonoleVision()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.ForceInspectaclesVision:": {
        "prefix": "components.playervision:ForceInspectaclesVision",
        "body": "components.playervision:ForceInspectaclesVision(${1:force})",
        "description": "参数:(force)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervision.SetGhostVision:": {
        "prefix": "components.playervision:SetGhostVision",
        "body": "components.playervision:SetGhostVision(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervision.HasGoggleVision:": {
        "prefix": "components.playervision:HasGoggleVision",
        "body": "components.playervision:HasGoggleVision()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.ForceRoseGlassesVision:": {
        "prefix": "components.playervision:ForceRoseGlassesVision",
        "body": "components.playervision:ForceRoseGlassesVision(${1:force})",
        "description": "参数:(force)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervision.HasNightmareVision:": {
        "prefix": "components.playervision:HasNightmareVision",
        "body": "components.playervision:HasNightmareVision()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.HasNightVision:": {
        "prefix": "components.playervision:HasNightVision",
        "body": "components.playervision:HasNightVision()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.HasGhostVision:": {
        "prefix": "components.playervision:HasGhostVision",
        "body": "components.playervision:HasGhostVision()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.HasNutrientsVision:": {
        "prefix": "components.playervision:HasNutrientsVision",
        "body": "components.playervision:HasNutrientsVision()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.GetCCTable:": {
        "prefix": "components.playervision:GetCCTable",
        "body": "components.playervision:GetCCTable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.PopForcedNightVision:": {
        "prefix": "components.playervision:PopForcedNightVision",
        "body": "components.playervision:PopForcedNightVision(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervision.SetCustomCCTable:": {
        "prefix": "components.playervision:SetCustomCCTable",
        "body": "components.playervision:SetCustomCCTable(${1:cctable},${2:blend})",
        "description": "参数:(cctable)<>[],(blend)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervision.HasRoseGlassesVision:": {
        "prefix": "components.playervision:HasRoseGlassesVision",
        "body": "components.playervision:HasRoseGlassesVision()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.ForceNutrientVision:": {
        "prefix": "components.playervision:ForceNutrientVision",
        "body": "components.playervision:ForceNutrientVision(${1:force})",
        "description": "参数:(force)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervision.GetCCPhaseFn:": {
        "prefix": "components.playervision:GetCCPhaseFn",
        "body": "components.playervision:GetCCPhaseFn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervision.SetNightmareVision:": {
        "prefix": "components.playervision:SetNightmareVision",
        "body": "components.playervision:SetNightmareVision(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervision.ForceGoggleVision:": {
        "prefix": "components.playervision:ForceGoggleVision",
        "body": "components.playervision:ForceGoggleVision(${1:force})",
        "description": "参数:(force)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervoter.SetSquelched:": {
        "prefix": "components.playervoter:SetSquelched",
        "body": "components.playervoter:SetSquelched(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervoter.DetachClassified:": {
        "prefix": "components.playervoter:DetachClassified",
        "body": "components.playervoter:DetachClassified()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervoter.CanVote:": {
        "prefix": "components.playervoter:CanVote",
        "body": "components.playervoter:CanVote()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervoter.OnRemoveFromEntity:": {
        "prefix": "components.playervoter:OnRemoveFromEntity",
        "body": "components.playervoter:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervoter.IsSquelched:": {
        "prefix": "components.playervoter:IsSquelched",
        "body": "components.playervoter:IsSquelched()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervoter.AttachClassified:": {
        "prefix": "components.playervoter:AttachClassified",
        "body": "components.playervoter:AttachClassified(${1:classified})",
        "description": "参数:(classified)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervoter.SubmitVote:": {
        "prefix": "components.playervoter:SubmitVote",
        "body": "components.playervoter:SubmitVote(${1:sel})",
        "description": "参数:(sel)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervoter.HasVoted:": {
        "prefix": "components.playervoter:HasVoted",
        "body": "components.playervoter:HasVoted()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "playervoter.SetSelection:": {
        "prefix": "components.playervoter:SetSelection",
        "body": "components.playervoter:SetSelection(${1:sel})",
        "description": "参数:(sel)<>[] 返回值:无返回值 贡献者:@"
    },
    "playervoter.GetSelection:": {
        "prefix": "components.playervoter:GetSelection",
        "body": "components.playervoter:GetSelection()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pocketwatch.CanCast:": {
        "prefix": "components.pocketwatch:CanCast",
        "body": "components.pocketwatch:CanCast(${1:doer},${2:target},${3:pos})",
        "description": "参数:(doer)<>[],(target)<>[],(pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "pocketwatch.OnRemoveFromEntity:": {
        "prefix": "components.pocketwatch:OnRemoveFromEntity",
        "body": "components.pocketwatch:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pocketwatch.CastSpell:": {
        "prefix": "components.pocketwatch:CastSpell",
        "body": "components.pocketwatch:CastSpell(${1:doer},${2:target},${3:pos})",
        "description": "参数:(doer)<>[],(target)<>[],(pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "pocketwatch_dismantler.Dismantle:": {
        "prefix": "components.pocketwatch_dismantler:Dismantle",
        "body": "components.pocketwatch_dismantler:Dismantle(${1:target},${2:doer})",
        "description": "参数:(target)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "pocketwatch_dismantler.CanDismantle:": {
        "prefix": "components.pocketwatch_dismantler:CanDismantle",
        "body": "components.pocketwatch_dismantler:CanDismantle(${1:target},${2:doer})",
        "description": "参数:(target)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.TriggerPulse:": {
        "prefix": "components.pointofinterest:TriggerPulse",
        "body": "components.pointofinterest:TriggerPulse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.CreateWorldIndicator:": {
        "prefix": "components.pointofinterest:CreateWorldIndicator",
        "body": "components.pointofinterest:CreateWorldIndicator()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.DebugForceShowIndicator:": {
        "prefix": "components.pointofinterest:DebugForceShowIndicator",
        "body": "components.pointofinterest:DebugForceShowIndicator()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.OnEntitySleep:": {
        "prefix": "components.pointofinterest:OnEntitySleep",
        "body": "components.pointofinterest:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.OnEntityWake:": {
        "prefix": "components.pointofinterest:OnEntityWake",
        "body": "components.pointofinterest:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.UpdateRing:": {
        "prefix": "components.pointofinterest:UpdateRing",
        "body": "components.pointofinterest:UpdateRing(${1:ring},${2:dt})",
        "description": "参数:(ring)<>[],(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.RemoveEverything:": {
        "prefix": "components.pointofinterest:RemoveEverything",
        "body": "components.pointofinterest:RemoveEverything()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.TriggerRemove:": {
        "prefix": "components.pointofinterest:TriggerRemove",
        "body": "components.pointofinterest:TriggerRemove()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.OnRemoveEntity:": {
        "prefix": "components.pointofinterest:OnRemoveEntity",
        "body": "components.pointofinterest:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.TryStartUpdating:": {
        "prefix": "components.pointofinterest:TryStartUpdating",
        "body": "components.pointofinterest:TryStartUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.SetShouldShowFn:": {
        "prefix": "components.pointofinterest:SetShouldShowFn",
        "body": "components.pointofinterest:SetShouldShowFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.OnUpdate:": {
        "prefix": "components.pointofinterest:OnUpdate",
        "body": "components.pointofinterest:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.UpdateRemovePulse:": {
        "prefix": "components.pointofinterest:UpdateRemovePulse",
        "body": "components.pointofinterest:UpdateRemovePulse(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.ShouldShowHudIndicator:": {
        "prefix": "components.pointofinterest:ShouldShowHudIndicator",
        "body": "components.pointofinterest:ShouldShowHudIndicator(${1:distsq})",
        "description": "参数:(distsq)<>[] 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.SetHeight:": {
        "prefix": "components.pointofinterest:SetHeight",
        "body": "components.pointofinterest:SetHeight(${1:height})",
        "description": "参数:(height)<>[] 返回值:无返回值 贡献者:@"
    },
    "pointofinterest.RemoveHudIndicator:": {
        "prefix": "components.pointofinterest:RemoveHudIndicator",
        "body": "components.pointofinterest:RemoveHudIndicator()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pollinator.GetDebugString:": {
        "prefix": "components.pollinator:GetDebugString",
        "body": "components.pollinator:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pollinator.CheckFlowerDensity:": {
        "prefix": "components.pollinator:CheckFlowerDensity",
        "body": "components.pollinator:CheckFlowerDensity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pollinator.Pollinate:": {
        "prefix": "components.pollinator:Pollinate",
        "body": "components.pollinator:Pollinate(${1:flower})",
        "description": "参数:(flower)<>[] 返回值:无返回值 贡献者:@"
    },
    "pollinator.CreateFlower:": {
        "prefix": "components.pollinator:CreateFlower",
        "body": "components.pollinator:CreateFlower()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pollinator.HasCollectedEnough:": {
        "prefix": "components.pollinator:HasCollectedEnough",
        "body": "components.pollinator:HasCollectedEnough()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pollinator.OnRemoveFromEntity:": {
        "prefix": "components.pollinator:OnRemoveFromEntity",
        "body": "components.pollinator:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "pollinator.CanPollinate:": {
        "prefix": "components.pollinator:CanPollinate",
        "body": "components.pollinator:CanPollinate(${1:flower})",
        "description": "参数:(flower)<>[] 返回值:无返回值 贡献者:@"
    },
    "poppable.Pop:": {
        "prefix": "components.poppable:Pop",
        "body": "components.poppable:Pop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "portablestructure.Dismantle:": {
        "prefix": "components.portablestructure:Dismantle",
        "body": "components.portablestructure:Dismantle(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "portablestructure.SetOnDismantleFn:": {
        "prefix": "components.portablestructure:SetOnDismantleFn",
        "body": "components.portablestructure:SetOnDismantleFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.UpdateMarker:": {
        "prefix": "components.positionalwarp:UpdateMarker",
        "body": "components.positionalwarp:UpdateMarker()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.OnSave:": {
        "prefix": "components.positionalwarp:OnSave",
        "body": "components.positionalwarp:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.OnRemoveEntity:": {
        "prefix": "components.positionalwarp:OnRemoveEntity",
        "body": "components.positionalwarp:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.GetDebugString:": {
        "prefix": "components.positionalwarp:GetDebugString",
        "body": "components.positionalwarp:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.EnableMarker:": {
        "prefix": "components.positionalwarp:EnableMarker",
        "body": "components.positionalwarp:EnableMarker(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.OnRemoveFromEntity:": {
        "prefix": "components.positionalwarp:OnRemoveFromEntity",
        "body": "components.positionalwarp:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.CachePosition:": {
        "prefix": "components.positionalwarp:CachePosition",
        "body": "components.positionalwarp:CachePosition()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.Reset:": {
        "prefix": "components.positionalwarp:Reset",
        "body": "components.positionalwarp:Reset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.GetHistoryPosition:": {
        "prefix": "components.positionalwarp:GetHistoryPosition",
        "body": "components.positionalwarp:GetHistoryPosition(${1:rewind})",
        "description": "参数:(rewind)<>[] 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.SetMarker:": {
        "prefix": "components.positionalwarp:SetMarker",
        "body": "components.positionalwarp:SetMarker(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "positionalwarp._MakeMarker:": {
        "prefix": "components.positionalwarp:_MakeMarker",
        "body": "components.positionalwarp:_MakeMarker(${1:i},${2:prefab})",
        "description": "参数:(i)<>[],(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.OnLoad:": {
        "prefix": "components.positionalwarp:OnLoad",
        "body": "components.positionalwarp:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "positionalwarp.SetWarpBackDist:": {
        "prefix": "components.positionalwarp:SetWarpBackDist",
        "body": "components.positionalwarp:SetWarpBackDist(${1:num_cache_points})",
        "description": "参数:(num_cache_points)<>[] 返回值:无返回值 贡献者:@"
    },
    "possessedaxe.GetDebugString:": {
        "prefix": "components.possessedaxe:GetDebugString",
        "body": "components.possessedaxe:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "possessedaxe.Revert:": {
        "prefix": "components.possessedaxe:Revert",
        "body": "components.possessedaxe:Revert()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "possessedaxe.LinkToPlayer:": {
        "prefix": "components.possessedaxe:LinkToPlayer",
        "body": "components.possessedaxe:LinkToPlayer(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "possessedaxe.OnLoad:": {
        "prefix": "components.possessedaxe:OnLoad",
        "body": "components.possessedaxe:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "possessedaxe.StopWaitingForPlayer:": {
        "prefix": "components.possessedaxe:StopWaitingForPlayer",
        "body": "components.possessedaxe:StopWaitingForPlayer()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "possessedaxe.OnSave:": {
        "prefix": "components.possessedaxe:OnSave",
        "body": "components.possessedaxe:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "possessedaxe.Drop:": {
        "prefix": "components.possessedaxe:Drop",
        "body": "components.possessedaxe:Drop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "possessedaxe.WaitForPlayer:": {
        "prefix": "components.possessedaxe:WaitForPlayer",
        "body": "components.possessedaxe:WaitForPlayer(${1:userid},${2:delay})",
        "description": "参数:(userid)<>[],(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "powerload.SetLoad:": {
        "prefix": "components.powerload:SetLoad",
        "body": "components.powerload:SetLoad(${1:_load},${2:idle})",
        "description": "参数:(_load)<>[],(idle)<>[] 返回值:无返回值 贡献者:@"
    },
    "powerload.IsIdle:": {
        "prefix": "components.powerload:IsIdle",
        "body": "components.powerload:IsIdle()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "powerload.GetLoad:": {
        "prefix": "components.powerload:GetLoad",
        "body": "components.powerload:GetLoad()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "preserver.GetPerishRateMultiplier:": {
        "prefix": "components.preserver:GetPerishRateMultiplier",
        "body": "components.preserver:GetPerishRateMultiplier(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "preserver.SetPerishRateMultiplier:": {
        "prefix": "components.preserver:SetPerishRateMultiplier",
        "body": "components.preserver:SetPerishRateMultiplier(${1:rate})",
        "description": "参数:(rate)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.SetDecayTime:": {
        "prefix": "components.projectedeffects:SetDecayTime",
        "body": "components.projectedeffects:SetDecayTime(${1:duration})",
        "description": "参数:(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.LockDecay:": {
        "prefix": "components.projectedeffects:LockDecay",
        "body": "components.projectedeffects:LockDecay(${1:locked})",
        "description": "参数:(locked)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.MakeOpaque:": {
        "prefix": "components.projectedeffects:MakeOpaque",
        "body": "components.projectedeffects:MakeOpaque()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.SetCutoffHeight:": {
        "prefix": "components.projectedeffects:SetCutoffHeight",
        "body": "components.projectedeffects:SetCutoffHeight(${1:cutoffheight})",
        "description": "参数:(cutoffheight)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.OnUpdate:": {
        "prefix": "components.projectedeffects:OnUpdate",
        "body": "components.projectedeffects:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.SetOnDecayCallback:": {
        "prefix": "components.projectedeffects:SetOnDecayCallback",
        "body": "components.projectedeffects:SetOnDecayCallback(${1:callback})",
        "description": "参数:(callback)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.SetOnConstructCallback:": {
        "prefix": "components.projectedeffects:SetOnConstructCallback",
        "body": "components.projectedeffects:SetOnConstructCallback(${1:callback})",
        "description": "参数:(callback)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.SetPaused:": {
        "prefix": "components.projectedeffects:SetPaused",
        "body": "components.projectedeffects:SetPaused(${1:paused})",
        "description": "参数:(paused)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.Decay:": {
        "prefix": "components.projectedeffects:Decay",
        "body": "components.projectedeffects:Decay(${1:permanent})",
        "description": "参数:(permanent)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.Construct:": {
        "prefix": "components.projectedeffects:Construct",
        "body": "components.projectedeffects:Construct()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.SetConstructTime:": {
        "prefix": "components.projectedeffects:SetConstructTime",
        "body": "components.projectedeffects:SetConstructTime(${1:duration})",
        "description": "参数:(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectedeffects.SetIntensity:": {
        "prefix": "components.projectedeffects:SetIntensity",
        "body": "components.projectedeffects:SetIntensity(${1:intensity})",
        "description": "参数:(intensity)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.SetCanCatch:": {
        "prefix": "components.projectile:SetCanCatch",
        "body": "components.projectile:SetCanCatch(${1:cancatch})",
        "description": "参数:(cancatch)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.SetHoming:": {
        "prefix": "components.projectile:SetHoming",
        "body": "components.projectile:SetHoming(${1:homing})",
        "description": "参数:(homing)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.OnEntitySleep:": {
        "prefix": "components.projectile:OnEntitySleep",
        "body": "components.projectile:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "projectile.OnRemoveFromEntity:": {
        "prefix": "components.projectile:OnRemoveFromEntity",
        "body": "components.projectile:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "projectile.SetBounced:": {
        "prefix": "components.projectile:SetBounced",
        "body": "components.projectile:SetBounced(${1:bounced})",
        "description": "参数:(bounced)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.IsBounced:": {
        "prefix": "components.projectile:IsBounced",
        "body": "components.projectile:IsBounced()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "projectile.SetOnMissFn:": {
        "prefix": "components.projectile:SetOnMissFn",
        "body": "components.projectile:SetOnMissFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.DelayVisibility:": {
        "prefix": "components.projectile:DelayVisibility",
        "body": "components.projectile:DelayVisibility(${1:duration})",
        "description": "参数:(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.RotateToTarget:": {
        "prefix": "components.projectile:RotateToTarget",
        "body": "components.projectile:RotateToTarget(${1:dest})",
        "description": "参数:(dest)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.SetStimuli:": {
        "prefix": "components.projectile:SetStimuli",
        "body": "components.projectile:SetStimuli(${1:stimuli})",
        "description": "参数:(stimuli)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.OnUpdate:": {
        "prefix": "components.projectile:OnUpdate",
        "body": "components.projectile:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.OnEntityWake:": {
        "prefix": "components.projectile:OnEntityWake",
        "body": "components.projectile:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "projectile.SetOnHitFn:": {
        "prefix": "components.projectile:SetOnHitFn",
        "body": "components.projectile:SetOnHitFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.Hit:": {
        "prefix": "components.projectile:Hit",
        "body": "components.projectile:Hit(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.Stop:": {
        "prefix": "components.projectile:Stop",
        "body": "components.projectile:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "projectile.GetDebugString:": {
        "prefix": "components.projectile:GetDebugString",
        "body": "components.projectile:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "projectile.SetRange:": {
        "prefix": "components.projectile:SetRange",
        "body": "components.projectile:SetRange(${1:range})",
        "description": "参数:(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.Catch:": {
        "prefix": "components.projectile:Catch",
        "body": "components.projectile:Catch(${1:catcher})",
        "description": "参数:(catcher)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.Miss:": {
        "prefix": "components.projectile:Miss",
        "body": "components.projectile:Miss(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.Throw:": {
        "prefix": "components.projectile:Throw",
        "body": "components.projectile:Throw(${1:owner},${2:target},${3:attacker})",
        "description": "参数:(owner)<>[],(target)<>[],(attacker)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.SetOnThrownFn:": {
        "prefix": "components.projectile:SetOnThrownFn",
        "body": "components.projectile:SetOnThrownFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.SetOnPreHitFn:": {
        "prefix": "components.projectile:SetOnPreHitFn",
        "body": "components.projectile:SetOnPreHitFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.IsThrown:": {
        "prefix": "components.projectile:IsThrown",
        "body": "components.projectile:IsThrown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "projectile.SetHitDist:": {
        "prefix": "components.projectile:SetHitDist",
        "body": "components.projectile:SetHitDist(${1:dist})",
        "description": "参数:(dist)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.SetOnCaughtFn:": {
        "prefix": "components.projectile:SetOnCaughtFn",
        "body": "components.projectile:SetOnCaughtFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.SetLaunchOffset:": {
        "prefix": "components.projectile:SetLaunchOffset",
        "body": "components.projectile:SetLaunchOffset(${1:offset})",
        "description": "参数:(offset)<>[] 返回值:无返回值 贡献者:@"
    },
    "projectile.SetSpeed:": {
        "prefix": "components.projectile:SetSpeed",
        "body": "components.projectile:SetSpeed(${1:speed})",
        "description": "参数:(speed)<>[] 返回值:无返回值 贡献者:@"
    },
    "propagator.SetOnFlashPoint:": {
        "prefix": "components.propagator:SetOnFlashPoint",
        "body": "components.propagator:SetOnFlashPoint(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "propagator.GetDebugString:": {
        "prefix": "components.propagator:GetDebugString",
        "body": "components.propagator:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "propagator.OnRemoveFromEntity:": {
        "prefix": "components.propagator:OnRemoveFromEntity",
        "body": "components.propagator:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "propagator.CalculateHeatCap:": {
        "prefix": "components.propagator:CalculateHeatCap",
        "body": "components.propagator:CalculateHeatCap()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "propagator.GetHeatResistance:": {
        "prefix": "components.propagator:GetHeatResistance",
        "body": "components.propagator:GetHeatResistance()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "propagator.StartSpreading:": {
        "prefix": "components.propagator:StartSpreading",
        "body": "components.propagator:StartSpreading(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "propagator.StopUpdating:": {
        "prefix": "components.propagator:StopUpdating",
        "body": "components.propagator:StopUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "propagator.OnUpdate:": {
        "prefix": "components.propagator:OnUpdate",
        "body": "components.propagator:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "propagator.AddHeat:": {
        "prefix": "components.propagator:AddHeat",
        "body": "components.propagator:AddHeat(${1:amount},${2:source})",
        "description": "参数:(amount)<>[],(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "propagator.StartUpdating:": {
        "prefix": "components.propagator:StartUpdating",
        "body": "components.propagator:StartUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "propagator.Flash:": {
        "prefix": "components.propagator:Flash",
        "body": "components.propagator:Flash()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "propagator.StopSpreading:": {
        "prefix": "components.propagator:StopSpreading",
        "body": "components.propagator:StopSpreading(${1:reset},${2:heatpct})",
        "description": "参数:(reset)<>[],(heatpct)<>[] 返回值:无返回值 贡献者:@"
    },
    "prophider.ClearHideTask:": {
        "prefix": "components.prophider:ClearHideTask",
        "body": "components.prophider:ClearHideTask()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "prophider.OnSave:": {
        "prefix": "components.prophider:OnSave",
        "body": "components.prophider:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "prophider.OnLoad:": {
        "prefix": "components.prophider:OnLoad",
        "body": "components.prophider:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "prophider.HideWithProp:": {
        "prefix": "components.prophider:HideWithProp",
        "body": "components.prophider:HideWithProp(${1:duration},${2:counter})",
        "description": "参数:(duration)<>[],(counter)<>[] 返回值:无返回值 贡献者:@"
    },
    "prophider.SetWillUnhideFn:": {
        "prefix": "components.prophider:SetWillUnhideFn",
        "body": "components.prophider:SetWillUnhideFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "prophider.GenerateHideTime:": {
        "prefix": "components.prophider:GenerateHideTime",
        "body": "components.prophider:GenerateHideTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "prophider.SetOnVisibleFn:": {
        "prefix": "components.prophider:SetOnVisibleFn",
        "body": "components.prophider:SetOnVisibleFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "prophider.SetPropCreationFn:": {
        "prefix": "components.prophider:SetPropCreationFn",
        "body": "components.prophider:SetPropCreationFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "prophider.GetDebugString:": {
        "prefix": "components.prophider:GetDebugString",
        "body": "components.prophider:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "prophider.OnEntityWake:": {
        "prefix": "components.prophider:OnEntityWake",
        "body": "components.prophider:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "prophider.ShowFromProp:": {
        "prefix": "components.prophider:ShowFromProp",
        "body": "components.prophider:ShowFromProp()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "prophider.SetOnHideFn:": {
        "prefix": "components.prophider:SetOnHideFn",
        "body": "components.prophider:SetOnHideFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "prophider.SetOnUnhideFn:": {
        "prefix": "components.prophider:SetOnUnhideFn",
        "body": "components.prophider:SetOnUnhideFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "prototyper.TurnOn:": {
        "prefix": "components.prototyper:TurnOn",
        "body": "components.prototyper:TurnOn(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "prototyper.TurnOff:": {
        "prefix": "components.prototyper:TurnOff",
        "body": "components.prototyper:TurnOff(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "prototyper.Activate:": {
        "prefix": "components.prototyper:Activate",
        "body": "components.prototyper:Activate(${1:doer},${2:recipe})",
        "description": "参数:(doer)<>[],(recipe)<>[] 返回值:无返回值 贡献者:@"
    },
    "prototyper.OnRemoveFromEntity:": {
        "prefix": "components.prototyper:OnRemoveFromEntity",
        "body": "components.prototyper:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "prototyper.GetTechTrees:": {
        "prefix": "components.prototyper:GetTechTrees",
        "body": "components.prototyper:GetTechTrees()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "questowner.SetOnAbandonQuest:": {
        "prefix": "components.questowner:SetOnAbandonQuest",
        "body": "components.questowner:SetOnAbandonQuest(${1:on_abandon_quest})",
        "description": "参数:(on_abandon_quest)<>[] 返回值:无返回值 贡献者:@"
    },
    "questowner.CanBeginQuest:": {
        "prefix": "components.questowner:CanBeginQuest",
        "body": "components.questowner:CanBeginQuest(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "questowner.OnLoad:": {
        "prefix": "components.questowner:OnLoad",
        "body": "components.questowner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "questowner.CanAbandonQuest:": {
        "prefix": "components.questowner:CanAbandonQuest",
        "body": "components.questowner:CanAbandonQuest(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "questowner.OnRemoveFromEntity:": {
        "prefix": "components.questowner:OnRemoveFromEntity",
        "body": "components.questowner:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "questowner.SetOnCompleteQuest:": {
        "prefix": "components.questowner:SetOnCompleteQuest",
        "body": "components.questowner:SetOnCompleteQuest(${1:on_complete_quest})",
        "description": "参数:(on_complete_quest)<>[] 返回值:无返回值 贡献者:@"
    },
    "questowner.CompleteQuest:": {
        "prefix": "components.questowner:CompleteQuest",
        "body": "components.questowner:CompleteQuest()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "questowner.BeginQuest:": {
        "prefix": "components.questowner:BeginQuest",
        "body": "components.questowner:BeginQuest(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "questowner.SetOnBeginQuest:": {
        "prefix": "components.questowner:SetOnBeginQuest",
        "body": "components.questowner:SetOnBeginQuest(${1:on_begin_quest})",
        "description": "参数:(on_begin_quest)<>[] 返回值:无返回值 贡献者:@"
    },
    "questowner.OnSave:": {
        "prefix": "components.questowner:OnSave",
        "body": "components.questowner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "questowner.AbandonQuest:": {
        "prefix": "components.questowner:AbandonQuest",
        "body": "components.questowner:AbandonQuest(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "raindome.SetActiveRadius_Internal:": {
        "prefix": "components.raindome:SetActiveRadius_Internal",
        "body": "components.raindome:SetActiveRadius_Internal(${1:new},${2:old})",
        "description": "参数:(new)<>[],(old)<>[] 返回值:无返回值 贡献者:@"
    },
    "raindome.GetActiveRadius:": {
        "prefix": "components.raindome:GetActiveRadius",
        "body": "components.raindome:GetActiveRadius()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "raindome.Disable:": {
        "prefix": "components.raindome:Disable",
        "body": "components.raindome:Disable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "raindome.OnRemoveEntity:": {
        "prefix": "components.raindome:OnRemoveEntity",
        "body": "components.raindome:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "raindome.OnUpdate:": {
        "prefix": "components.raindome:OnUpdate",
        "body": "components.raindome:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "raindome.SetRadius:": {
        "prefix": "components.raindome:SetRadius",
        "body": "components.raindome:SetRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "raindome.OnRemoveFromEntity:": {
        "prefix": "components.raindome:OnRemoveFromEntity",
        "body": "components.raindome:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "raindome.Enable:": {
        "prefix": "components.raindome:Enable",
        "body": "components.raindome:Enable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "raindomewatcher.IsUnderRainDome:": {
        "prefix": "components.raindomewatcher:IsUnderRainDome",
        "body": "components.raindomewatcher:IsUnderRainDome()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "raindomewatcher.OnUpdate:": {
        "prefix": "components.raindomewatcher:OnUpdate",
        "body": "components.raindomewatcher:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "rainimmunity.RemoveSource:": {
        "prefix": "components.rainimmunity:RemoveSource",
        "body": "components.rainimmunity:RemoveSource(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "rainimmunity.OnRemoveFromEntity:": {
        "prefix": "components.rainimmunity:OnRemoveFromEntity",
        "body": "components.rainimmunity:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rainimmunity.AddSource:": {
        "prefix": "components.rainimmunity:AddSource",
        "body": "components.rainimmunity:AddSource(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.SpawnEntity:": {
        "prefix": "components.rampingspawner:SpawnEntity",
        "body": "components.rampingspawner:SpawnEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.GetSpawnPos:": {
        "prefix": "components.rampingspawner:GetSpawnPos",
        "body": "components.rampingspawner:GetSpawnPos()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.OnRemoveFromEntity:": {
        "prefix": "components.rampingspawner:OnRemoveFromEntity",
        "body": "components.rampingspawner:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.GetSpawnRot:": {
        "prefix": "components.rampingspawner:GetSpawnRot",
        "body": "components.rampingspawner:GetSpawnRot()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.StopTrackingSpawn:": {
        "prefix": "components.rampingspawner:StopTrackingSpawn",
        "body": "components.rampingspawner:StopTrackingSpawn(${1:spawn})",
        "description": "参数:(spawn)<>[] 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.DoWave:": {
        "prefix": "components.rampingspawner:DoWave",
        "body": "components.rampingspawner:DoWave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.TrackSpawn:": {
        "prefix": "components.rampingspawner:TrackSpawn",
        "body": "components.rampingspawner:TrackSpawn(${1:spawn})",
        "description": "参数:(spawn)<>[] 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.OnSpawnDeath:": {
        "prefix": "components.rampingspawner:OnSpawnDeath",
        "body": "components.rampingspawner:OnSpawnDeath(${1:spawn})",
        "description": "参数:(spawn)<>[] 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.GetCurrentWave:": {
        "prefix": "components.rampingspawner:GetCurrentWave",
        "body": "components.rampingspawner:GetCurrentWave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.Start:": {
        "prefix": "components.rampingspawner:Start",
        "body": "components.rampingspawner:Start()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.Reset:": {
        "prefix": "components.rampingspawner:Reset",
        "body": "components.rampingspawner:Reset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.LoadPostPass:": {
        "prefix": "components.rampingspawner:LoadPostPass",
        "body": "components.rampingspawner:LoadPostPass(${1:ents},${2:data})",
        "description": "参数:(ents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.OnLoad:": {
        "prefix": "components.rampingspawner:OnLoad",
        "body": "components.rampingspawner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.GetWaveSize:": {
        "prefix": "components.rampingspawner:GetWaveSize",
        "body": "components.rampingspawner:GetWaveSize()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.OnSave:": {
        "prefix": "components.rampingspawner:OnSave",
        "body": "components.rampingspawner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.Stop:": {
        "prefix": "components.rampingspawner:Stop",
        "body": "components.rampingspawner:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rampingspawner.IsActive:": {
        "prefix": "components.rampingspawner:IsActive",
        "body": "components.rampingspawner:IsActive()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "reader.SetSanityPenaltyMultiplier:": {
        "prefix": "components.reader:SetSanityPenaltyMultiplier",
        "body": "components.reader:SetSanityPenaltyMultiplier(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "reader.Read:": {
        "prefix": "components.reader:Read",
        "body": "components.reader:Read(${1:book})",
        "description": "参数:(book)<>[] 返回值:无返回值 贡献者:@"
    },
    "reader.SetOnReadFn:": {
        "prefix": "components.reader:SetOnReadFn",
        "body": "components.reader:SetOnReadFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "reader.GetSanityPenaltyMultiplier:": {
        "prefix": "components.reader:GetSanityPenaltyMultiplier",
        "body": "components.reader:GetSanityPenaltyMultiplier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "reader.SetAspiringBookworm:": {
        "prefix": "components.reader:SetAspiringBookworm",
        "body": "components.reader:SetAspiringBookworm(${1:bookworm})",
        "description": "参数:(bookworm)<>[] 返回值:无返回值 贡献者:@"
    },
    "reader.OnRemoveFromEntity:": {
        "prefix": "components.reader:OnRemoveFromEntity",
        "body": "components.reader:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "reader.IsAspiringBookworm:": {
        "prefix": "components.reader:IsAspiringBookworm",
        "body": "components.reader:IsAspiringBookworm()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "recallmark.MarkPosition:": {
        "prefix": "components.recallmark:MarkPosition",
        "body": "components.recallmark:MarkPosition(${1:recall_x},${2:recall_y},${3:recall_z},${4:recall_worldid})",
        "description": "参数:(recall_x)<>[],(recall_y)<>[],(recall_z)<>[],(recall_worldid)<>[] 返回值:无返回值 贡献者:@"
    },
    "recallmark.OnSave:": {
        "prefix": "components.recallmark:OnSave",
        "body": "components.recallmark:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "recallmark.IsMarkedForSameShard:": {
        "prefix": "components.recallmark:IsMarkedForSameShard",
        "body": "components.recallmark:IsMarkedForSameShard()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "recallmark.OnLoad:": {
        "prefix": "components.recallmark:OnLoad",
        "body": "components.recallmark:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "recallmark.GetMarkedPosition:": {
        "prefix": "components.recallmark:GetMarkedPosition",
        "body": "components.recallmark:GetMarkedPosition()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "recallmark.IsMarked:": {
        "prefix": "components.recallmark:IsMarked",
        "body": "components.recallmark:IsMarked()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "recallmark.Copy:": {
        "prefix": "components.recallmark:Copy",
        "body": "components.recallmark:Copy(${1:rhs})",
        "description": "参数:(rhs)<>[] 返回值:无返回值 贡献者:@"
    },
    "rechargeable.OnSave:": {
        "prefix": "components.rechargeable:OnSave",
        "body": "components.rechargeable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rechargeable.SetChargeTime:": {
        "prefix": "components.rechargeable:SetChargeTime",
        "body": "components.rechargeable:SetChargeTime(${1:t})",
        "description": "参数:(t)<>[] 返回值:无返回值 贡献者:@"
    },
    "rechargeable.SetOnDischargedFn:": {
        "prefix": "components.rechargeable:SetOnDischargedFn",
        "body": "components.rechargeable:SetOnDischargedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "rechargeable.OnRemoveFromEntity:": {
        "prefix": "components.rechargeable:OnRemoveFromEntity",
        "body": "components.rechargeable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rechargeable.SetPercent:": {
        "prefix": "components.rechargeable:SetPercent",
        "body": "components.rechargeable:SetPercent(${1:pct})",
        "description": "参数:(pct)<>[] 返回值:无返回值 贡献者:@"
    },
    "rechargeable.SetOnChargedFn:": {
        "prefix": "components.rechargeable:SetOnChargedFn",
        "body": "components.rechargeable:SetOnChargedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "rechargeable.GetRechargeTime:": {
        "prefix": "components.rechargeable:GetRechargeTime",
        "body": "components.rechargeable:GetRechargeTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rechargeable.SetChargeTimeMod:": {
        "prefix": "components.rechargeable:SetChargeTimeMod",
        "body": "components.rechargeable:SetChargeTimeMod(${1:source},${2:key},${3:mod})",
        "description": "参数:(source)<>[],(key)<>[],(mod)<>[] 返回值:无返回值 贡献者:@"
    },
    "rechargeable.GetChargeTime:": {
        "prefix": "components.rechargeable:GetChargeTime",
        "body": "components.rechargeable:GetChargeTime()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rechargeable.OnLoad:": {
        "prefix": "components.rechargeable:OnLoad",
        "body": "components.rechargeable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "rechargeable.GetDebugString:": {
        "prefix": "components.rechargeable:GetDebugString",
        "body": "components.rechargeable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rechargeable.GetTimeToCharge:": {
        "prefix": "components.rechargeable:GetTimeToCharge",
        "body": "components.rechargeable:GetTimeToCharge()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rechargeable.SetCharge:": {
        "prefix": "components.rechargeable:SetCharge",
        "body": "components.rechargeable:SetCharge(${1:val},${2:overtime})",
        "description": "参数:(val)<>[],(overtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "rechargeable.Discharge:": {
        "prefix": "components.rechargeable:Discharge",
        "body": "components.rechargeable:Discharge(${1:chargetime})",
        "description": "参数:(chargetime)<>[] 返回值:无返回值 贡献者:@"
    },
    "rechargeable.GetCharge:": {
        "prefix": "components.rechargeable:GetCharge",
        "body": "components.rechargeable:GetCharge()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rechargeable.OnUpdate:": {
        "prefix": "components.rechargeable:OnUpdate",
        "body": "components.rechargeable:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "rechargeable.GetPercent:": {
        "prefix": "components.rechargeable:GetPercent",
        "body": "components.rechargeable:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rechargeable.IsCharged:": {
        "prefix": "components.rechargeable:IsCharged",
        "body": "components.rechargeable:IsCharged()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rechargeable.RemoveChargeTimeMod:": {
        "prefix": "components.rechargeable:RemoveChargeTimeMod",
        "body": "components.rechargeable:RemoveChargeTimeMod(${1:source},${2:key})",
        "description": "参数:(source)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "rechargeable.SetMaxCharge:": {
        "prefix": "components.rechargeable:SetMaxCharge",
        "body": "components.rechargeable:SetMaxCharge(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "recipescanner.SetOnScannedFn:": {
        "prefix": "components.recipescanner:SetOnScannedFn",
        "body": "components.recipescanner:SetOnScannedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "recipescanner.Scan:": {
        "prefix": "components.recipescanner:Scan",
        "body": "components.recipescanner:Scan(${1:target},${2:doer})",
        "description": "参数:(target)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "recipescanner.OnRemoveFromEntity:": {
        "prefix": "components.recipescanner:OnRemoveFromEntity",
        "body": "components.recipescanner:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "recipestockpile.RemoveStock:": {
        "prefix": "components.recipestockpile:RemoveStock",
        "body": "components.recipestockpile:RemoveStock(${1:recipe},${2:allow_restock})",
        "description": "参数:(recipe)<>[],(allow_restock)<>[] 返回值:无返回值 贡献者:@"
    },
    "recipestockpile.OnSave:": {
        "prefix": "components.recipestockpile:OnSave",
        "body": "components.recipestockpile:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "recipestockpile.OnLoad:": {
        "prefix": "components.recipestockpile:OnLoad",
        "body": "components.recipestockpile:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "recipestockpile.GetDebugString:": {
        "prefix": "components.recipestockpile:GetDebugString",
        "body": "components.recipestockpile:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "recipestockpile.OnRemoveFromEntity:": {
        "prefix": "components.recipestockpile:OnRemoveFromEntity",
        "body": "components.recipestockpile:OnRemoveFromEntity(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "recipestockpile.OnItemCrafted:": {
        "prefix": "components.recipestockpile:OnItemCrafted",
        "body": "components.recipestockpile:OnItemCrafted(${1:recipe})",
        "description": "参数:(recipe)<>[] 返回值:无返回值 贡献者:@"
    },
    "recipestockpile.FullyRestockItem:": {
        "prefix": "components.recipestockpile:FullyRestockItem",
        "body": "components.recipestockpile:FullyRestockItem(${1:recipe})",
        "description": "参数:(recipe)<>[] 返回值:无返回值 贡献者:@"
    },
    "recipestockpile.SetupItem:": {
        "prefix": "components.recipestockpile:SetupItem",
        "body": "components.recipestockpile:SetupItem(${1:data},${2:start_restock_timer})",
        "description": "参数:(data)<>[],(start_restock_timer)<>[] 返回值:无返回值 贡献者:@"
    },
    "recipestockpile.HasAnyStock:": {
        "prefix": "components.recipestockpile:HasAnyStock",
        "body": "components.recipestockpile:HasAnyStock()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "recipestockpile.RemoveAllStock:": {
        "prefix": "components.recipestockpile:RemoveAllStock",
        "body": "components.recipestockpile:RemoveAllStock(${1:allow_restock})",
        "description": "参数:(allow_restock)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.SetOnStopTeleportFn:": {
        "prefix": "components.remoteteleporter:SetOnStopTeleportFn",
        "body": "components.remoteteleporter:SetOnStopTeleportFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.SetOnTeleportedFn:": {
        "prefix": "components.remoteteleporter:SetOnTeleportedFn",
        "body": "components.remoteteleporter:SetOnTeleportedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.SetCanActivateFn:": {
        "prefix": "components.remoteteleporter:SetCanActivateFn",
        "body": "components.remoteteleporter:SetCanActivateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.Teleport_GetNearbyItems:": {
        "prefix": "components.remoteteleporter:Teleport_GetNearbyItems",
        "body": "components.remoteteleporter:Teleport_GetNearbyItems(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.Teleport_Internal:": {
        "prefix": "components.remoteteleporter:Teleport_Internal",
        "body": "components.remoteteleporter:Teleport_Internal(${1:target},${2:from_x},${3:from_z},${4:to_x},${5:to_z},${6:doer})",
        "description": "参数:(target)<>[],(from_x)<>[],(from_z)<>[],(to_x)<>[],(to_z)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.OnStartTeleport:": {
        "prefix": "components.remoteteleporter:OnStartTeleport",
        "body": "components.remoteteleporter:OnStartTeleport(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.SetOnStartTeleportFn:": {
        "prefix": "components.remoteteleporter:SetOnStartTeleportFn",
        "body": "components.remoteteleporter:SetOnStartTeleportFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.SetItemTeleportRadius:": {
        "prefix": "components.remoteteleporter:SetItemTeleportRadius",
        "body": "components.remoteteleporter:SetItemTeleportRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.OnStopTeleport:": {
        "prefix": "components.remoteteleporter:OnStopTeleport",
        "body": "components.remoteteleporter:OnStopTeleport(${1:doer},${2:success})",
        "description": "参数:(doer)<>[],(success)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.SetNearbyItems:": {
        "prefix": "components.remoteteleporter:SetNearbyItems",
        "body": "components.remoteteleporter:SetNearbyItems(${1:nearbyitems})",
        "description": "参数:(nearbyitems)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.CanActivate:": {
        "prefix": "components.remoteteleporter:CanActivate",
        "body": "components.remoteteleporter:CanActivate(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.Teleport:": {
        "prefix": "components.remoteteleporter:Teleport",
        "body": "components.remoteteleporter:Teleport(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "remoteteleporter.SetCheckDestinationFn:": {
        "prefix": "components.remoteteleporter:SetCheckDestinationFn",
        "body": "components.remoteteleporter:SetCheckDestinationFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "repairable.SetHealthRepairable:": {
        "prefix": "components.repairable:SetHealthRepairable",
        "body": "components.repairable:SetHealthRepairable(${1:repairable})",
        "description": "参数:(repairable)<>[] 返回值:无返回值 贡献者:@"
    },
    "repairable.SetFiniteUsesRepairable:": {
        "prefix": "components.repairable:SetFiniteUsesRepairable",
        "body": "components.repairable:SetFiniteUsesRepairable(${1:repairable})",
        "description": "参数:(repairable)<>[] 返回值:无返回值 贡献者:@"
    },
    "repairable.Repair:": {
        "prefix": "components.repairable:Repair",
        "body": "components.repairable:Repair(${1:doer},${2:repair_item})",
        "description": "参数:(doer)<>[],(repair_item)<>[] 返回值:无返回值 贡献者:@"
    },
    "repairable.SetWorkRepairable:": {
        "prefix": "components.repairable:SetWorkRepairable",
        "body": "components.repairable:SetWorkRepairable(${1:repairable})",
        "description": "参数:(repairable)<>[] 返回值:无返回值 贡献者:@"
    },
    "repairable.OnRemoveFromEntity:": {
        "prefix": "components.repairable:OnRemoveFromEntity",
        "body": "components.repairable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "repairable.NeedsRepairs:": {
        "prefix": "components.repairable:NeedsRepairs",
        "body": "components.repairable:NeedsRepairs()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "repairer.OnRemoveFromEntity:": {
        "prefix": "components.repairer:OnRemoveFromEntity",
        "body": "components.repairer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "repellent.SetOnRepelFollowerFn:": {
        "prefix": "components.repellent:SetOnRepelFollowerFn",
        "body": "components.repellent:SetOnRepelFollowerFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "repellent.AddRepelTag:": {
        "prefix": "components.repellent:AddRepelTag",
        "body": "components.repellent:AddRepelTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "repellent.AddIgnoreTag:": {
        "prefix": "components.repellent:AddIgnoreTag",
        "body": "components.repellent:AddIgnoreTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "repellent.RemoveIgnoreTag:": {
        "prefix": "components.repellent:RemoveIgnoreTag",
        "body": "components.repellent:RemoveIgnoreTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "repellent.Repel:": {
        "prefix": "components.repellent:Repel",
        "body": "components.repellent:Repel(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "repellent.SetOnlyRepelsFollowers:": {
        "prefix": "components.repellent:SetOnlyRepelsFollowers",
        "body": "components.repellent:SetOnlyRepelsFollowers(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "repellent.SetUseAmount:": {
        "prefix": "components.repellent:SetUseAmount",
        "body": "components.repellent:SetUseAmount(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "repellent.RemoveRepelTag:": {
        "prefix": "components.repellent:RemoveRepelTag",
        "body": "components.repellent:RemoveRepelTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "repellent.SetRadius:": {
        "prefix": "components.repellent:SetRadius",
        "body": "components.repellent:SetRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "replayproxy.SetRealEntityPrefabName:": {
        "prefix": "components.replayproxy:SetRealEntityPrefabName",
        "body": "components.replayproxy:SetRealEntityPrefabName(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "replayproxy.GetRealEntityPrefabName:": {
        "prefix": "components.replayproxy:GetRealEntityPrefabName",
        "body": "components.replayproxy:GetRealEntityPrefabName()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "replayproxy.GetRealEntityGUID:": {
        "prefix": "components.replayproxy:GetRealEntityGUID",
        "body": "components.replayproxy:GetRealEntityGUID()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "replayproxy.SetRealEntityGUID:": {
        "prefix": "components.replayproxy:SetRealEntityGUID",
        "body": "components.replayproxy:SetRealEntityGUID(${1:guid})",
        "description": "参数:(guid)<>[] 返回值:无返回值 贡献者:@"
    },
    "researchpointconverter.Activate:": {
        "prefix": "components.researchpointconverter:Activate",
        "body": "components.researchpointconverter:Activate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "researchpointconverter.TurnOn:": {
        "prefix": "components.researchpointconverter:TurnOn",
        "body": "components.researchpointconverter:TurnOn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "researchpointconverter.TurnOff:": {
        "prefix": "components.researchpointconverter:TurnOff",
        "body": "components.researchpointconverter:TurnOff()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "resistance.RemoveResistance:": {
        "prefix": "components.resistance:RemoveResistance",
        "body": "components.resistance:RemoveResistance(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "resistance.AddResistance:": {
        "prefix": "components.resistance:AddResistance",
        "body": "components.resistance:AddResistance(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "resistance.GetDebugString:": {
        "prefix": "components.resistance:GetDebugString",
        "body": "components.resistance:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "resistance.HasResistanceToTag:": {
        "prefix": "components.resistance:HasResistanceToTag",
        "body": "components.resistance:HasResistanceToTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "resistance.ResistDamage:": {
        "prefix": "components.resistance:ResistDamage",
        "body": "components.resistance:ResistDamage(${1:damage_amount})",
        "description": "参数:(damage_amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "resistance.SetOnResistDamageFn:": {
        "prefix": "components.resistance:SetOnResistDamageFn",
        "body": "components.resistance:SetOnResistDamageFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "resistance.HasResistance:": {
        "prefix": "components.resistance:HasResistance",
        "body": "components.resistance:HasResistance(${1:attacker},${2:weapon})",
        "description": "参数:(attacker)<>[],(weapon)<>[] 返回值:无返回值 贡献者:@"
    },
    "resistance.ShouldResistDamage:": {
        "prefix": "components.resistance:ShouldResistDamage",
        "body": "components.resistance:ShouldResistDamage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "resistance.SetShouldResistFn:": {
        "prefix": "components.resistance:SetShouldResistFn",
        "body": "components.resistance:SetShouldResistFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "reticule.DestroyReticule:": {
        "prefix": "components.reticule:DestroyReticule",
        "body": "components.reticule:DestroyReticule()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "reticule.ShouldHide:": {
        "prefix": "components.reticule:ShouldHide",
        "body": "components.reticule:ShouldHide()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "reticule.ClearTwinStickOverrides:": {
        "prefix": "components.reticule:ClearTwinStickOverrides",
        "body": "components.reticule:ClearTwinStickOverrides()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "reticule.UpdateTwinStickMode2:": {
        "prefix": "components.reticule:UpdateTwinStickMode2",
        "body": "components.reticule:UpdateTwinStickMode2()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "reticule.Blip:": {
        "prefix": "components.reticule:Blip",
        "body": "components.reticule:Blip()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "reticule.UpdateTwinStickMode1:": {
        "prefix": "components.reticule:UpdateTwinStickMode1",
        "body": "components.reticule:UpdateTwinStickMode1()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "reticule.OnCameraUpdate:": {
        "prefix": "components.reticule:OnCameraUpdate",
        "body": "components.reticule:OnCameraUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "reticule.OnUpdate:": {
        "prefix": "components.reticule:OnUpdate",
        "body": "components.reticule:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "reticule.UpdatePosition:": {
        "prefix": "components.reticule:UpdatePosition",
        "body": "components.reticule:UpdatePosition(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "reticule.CreateReticule:": {
        "prefix": "components.reticule:CreateReticule",
        "body": "components.reticule:CreateReticule()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "reticule.UpdateColour:": {
        "prefix": "components.reticule:UpdateColour",
        "body": "components.reticule:UpdateColour()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "reticule.PingReticuleAt:": {
        "prefix": "components.reticule:PingReticuleAt",
        "body": "components.reticule:PingReticuleAt(${1:pos})",
        "description": "参数:(pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "revivablecorpse.SetCanBeRevivedByFn:": {
        "prefix": "components.revivablecorpse:SetCanBeRevivedByFn",
        "body": "components.revivablecorpse:SetCanBeRevivedByFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "revivablecorpse.Revive:": {
        "prefix": "components.revivablecorpse:Revive",
        "body": "components.revivablecorpse:Revive(${1:reviver})",
        "description": "参数:(reviver)<>[] 返回值:无返回值 贡献者:@"
    },
    "revivablecorpse.SetReviveHealthPercent:": {
        "prefix": "components.revivablecorpse:SetReviveHealthPercent",
        "body": "components.revivablecorpse:SetReviveHealthPercent(${1:percent})",
        "description": "参数:(percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "revivablecorpse.SetCorpse:": {
        "prefix": "components.revivablecorpse:SetCorpse",
        "body": "components.revivablecorpse:SetCorpse(${1:corpse})",
        "description": "参数:(corpse)<>[] 返回值:无返回值 贡献者:@"
    },
    "revivablecorpse.GetReviveHealthPercent:": {
        "prefix": "components.revivablecorpse:GetReviveHealthPercent",
        "body": "components.revivablecorpse:GetReviveHealthPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "revivablecorpse.SetReviveSpeedMult:": {
        "prefix": "components.revivablecorpse:SetReviveSpeedMult",
        "body": "components.revivablecorpse:SetReviveSpeedMult(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "revivablecorpse.CanBeRevivedBy:": {
        "prefix": "components.revivablecorpse:CanBeRevivedBy",
        "body": "components.revivablecorpse:CanBeRevivedBy(${1:reviver})",
        "description": "参数:(reviver)<>[] 返回值:无返回值 贡献者:@"
    },
    "revivablecorpse.SetReviveSpeedMultForTag:": {
        "prefix": "components.revivablecorpse:SetReviveSpeedMultForTag",
        "body": "components.revivablecorpse:SetReviveSpeedMultForTag(${1:tag},${2:mult})",
        "description": "参数:(tag)<>[],(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "revivablecorpse.GetReviveSpeedMult:": {
        "prefix": "components.revivablecorpse:GetReviveSpeedMult",
        "body": "components.revivablecorpse:GetReviveSpeedMult(${1:reviver})",
        "description": "参数:(reviver)<>[] 返回值:无返回值 贡献者:@"
    },
    "rideable.SetCustomRiderTest:": {
        "prefix": "components.rideable:SetCustomRiderTest",
        "body": "components.rideable:SetCustomRiderTest(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "rideable.OnRemoveFromEntity:": {
        "prefix": "components.rideable:OnRemoveFromEntity",
        "body": "components.rideable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rideable.Buck:": {
        "prefix": "components.rideable:Buck",
        "body": "components.rideable:Buck(${1:gentle})",
        "description": "参数:(gentle)<>[] 返回值:无返回值 贡献者:@"
    },
    "rideable.SetRequiredObedience:": {
        "prefix": "components.rideable:SetRequiredObedience",
        "body": "components.rideable:SetRequiredObedience(${1:required})",
        "description": "参数:(required)<>[] 返回值:无返回值 贡献者:@"
    },
    "rideable.TimeSinceLastRide:": {
        "prefix": "components.rideable:TimeSinceLastRide",
        "body": "components.rideable:TimeSinceLastRide()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rideable.TestRider:": {
        "prefix": "components.rideable:TestRider",
        "body": "components.rideable:TestRider(${1:potential_rider})",
        "description": "参数:(potential_rider)<>[] 返回值:无返回值 贡献者:@"
    },
    "rideable.IsBeingRidden:": {
        "prefix": "components.rideable:IsBeingRidden",
        "body": "components.rideable:IsBeingRidden()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rideable.GetDebugString:": {
        "prefix": "components.rideable:GetDebugString",
        "body": "components.rideable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rideable.OnLoadDomesticatable:": {
        "prefix": "components.rideable:OnLoadDomesticatable",
        "body": "components.rideable:OnLoadDomesticatable(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "rideable.OnSaveDomesticatable:": {
        "prefix": "components.rideable:OnSaveDomesticatable",
        "body": "components.rideable:OnSaveDomesticatable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rideable.GetRider:": {
        "prefix": "components.rideable:GetRider",
        "body": "components.rideable:GetRider()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rideable.SetRider:": {
        "prefix": "components.rideable:SetRider",
        "body": "components.rideable:SetRider(${1:rider})",
        "description": "参数:(rider)<>[] 返回值:无返回值 贡献者:@"
    },
    "rideable.TestObedience:": {
        "prefix": "components.rideable:TestObedience",
        "body": "components.rideable:TestObedience()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rideable.SetShouldSave:": {
        "prefix": "components.rideable:SetShouldSave",
        "body": "components.rideable:SetShouldSave(${1:shouldsave})",
        "description": "参数:(shouldsave)<>[] 返回值:无返回值 贡献者:@"
    },
    "rideable.ShouldSave:": {
        "prefix": "components.rideable:ShouldSave",
        "body": "components.rideable:ShouldSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rideable.IsSaddled:": {
        "prefix": "components.rideable:IsSaddled",
        "body": "components.rideable:IsSaddled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rideable.SetSaddleable:": {
        "prefix": "components.rideable:SetSaddleable",
        "body": "components.rideable:SetSaddleable(${1:saddleable})",
        "description": "参数:(saddleable)<>[] 返回值:无返回值 贡献者:@"
    },
    "rideable.SetSaddle:": {
        "prefix": "components.rideable:SetSaddle",
        "body": "components.rideable:SetSaddle(${1:doer},${2:newsaddle})",
        "description": "参数:(doer)<>[],(newsaddle)<>[] 返回值:无返回值 贡献者:@"
    },
    "rider.Mount:": {
        "prefix": "components.rider:Mount",
        "body": "components.rider:Mount(${1:target},${2:instant})",
        "description": "参数:(target)<>[],(instant)<>[] 返回值:无返回值 贡献者:@"
    },
    "rider.GetSaddle:": {
        "prefix": "components.rider:GetSaddle",
        "body": "components.rider:GetSaddle()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rider.OnLoad:": {
        "prefix": "components.rider:OnLoad",
        "body": "components.rider:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "rider.ActualDismount:": {
        "prefix": "components.rider:ActualDismount",
        "body": "components.rider:ActualDismount()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rider.OnRemoveFromEntity:": {
        "prefix": "components.rider:OnRemoveFromEntity",
        "body": "components.rider:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rider.StartTracking:": {
        "prefix": "components.rider:StartTracking",
        "body": "components.rider:StartTracking(${1:mount})",
        "description": "参数:(mount)<>[] 返回值:无返回值 贡献者:@"
    },
    "rider.OnSave:": {
        "prefix": "components.rider:OnSave",
        "body": "components.rider:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rider.GetMount:": {
        "prefix": "components.rider:GetMount",
        "body": "components.rider:GetMount()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rider.IsRiding:": {
        "prefix": "components.rider:IsRiding",
        "body": "components.rider:IsRiding()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rider.Dismount:": {
        "prefix": "components.rider:Dismount",
        "body": "components.rider:Dismount()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rider.StopTracking:": {
        "prefix": "components.rider:StopTracking",
        "body": "components.rider:StopTracking(${1:mount})",
        "description": "参数:(mount)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.DebugHighlightRifts:": {
        "prefix": "components.riftspawner:DebugHighlightRifts",
        "body": "components.riftspawner:DebugHighlightRifts()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.GetShadowRiftsEnabled:": {
        "prefix": "components.riftspawner:GetShadowRiftsEnabled",
        "body": "components.riftspawner:GetShadowRiftsEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.IsLunarPortalActive:": {
        "prefix": "components.riftspawner:IsLunarPortalActive",
        "body": "components.riftspawner:IsLunarPortalActive()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.GetDebugString:": {
        "prefix": "components.riftspawner:GetDebugString",
        "body": "components.riftspawner:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.IsPointNearPreviousSpawn:": {
        "prefix": "components.riftspawner:IsPointNearPreviousSpawn",
        "body": "components.riftspawner:IsPointNearPreviousSpawn(${1:x},${2:z})",
        "description": "参数:(x)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.OnLoad:": {
        "prefix": "components.riftspawner:OnLoad",
        "body": "components.riftspawner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.SpawnRift:": {
        "prefix": "components.riftspawner:SpawnRift",
        "body": "components.riftspawner:SpawnRift(${1:forced_pos})",
        "description": "参数:(forced_pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.SetDifficulty:": {
        "prefix": "components.riftspawner:SetDifficulty",
        "body": "components.riftspawner:SetDifficulty(${1:src},${2:difficulty})",
        "description": "参数:(src)<>[],(difficulty)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.GetNextRiftPrefab:": {
        "prefix": "components.riftspawner:GetNextRiftPrefab",
        "body": "components.riftspawner:GetNextRiftPrefab()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.LoadPostPass:": {
        "prefix": "components.riftspawner:LoadPostPass",
        "body": "components.riftspawner:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.TryToSpawnRift:": {
        "prefix": "components.riftspawner:TryToSpawnRift",
        "body": "components.riftspawner:TryToSpawnRift(${1:forced_pos})",
        "description": "参数:(forced_pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.GetRifts:": {
        "prefix": "components.riftspawner:GetRifts",
        "body": "components.riftspawner:GetRifts()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.OnSave:": {
        "prefix": "components.riftspawner:OnSave",
        "body": "components.riftspawner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.OnRiftTimerDone:": {
        "prefix": "components.riftspawner:OnRiftTimerDone",
        "body": "components.riftspawner:OnRiftTimerDone()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.GetEnabled:": {
        "prefix": "components.riftspawner:GetEnabled",
        "body": "components.riftspawner:GetEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.EnableShadowRifts:": {
        "prefix": "components.riftspawner:EnableShadowRifts",
        "body": "components.riftspawner:EnableShadowRifts(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.IsXPortalActive:": {
        "prefix": "components.riftspawner:IsXPortalActive",
        "body": "components.riftspawner:IsXPortalActive()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.OnShadowRiftMaxSize:": {
        "prefix": "components.riftspawner:OnShadowRiftMaxSize",
        "body": "components.riftspawner:OnShadowRiftMaxSize(${1:src},${2:rift})",
        "description": "参数:(src)<>[],(rift)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.TryToStartTimer:": {
        "prefix": "components.riftspawner:TryToStartTimer",
        "body": "components.riftspawner:TryToStartTimer(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.OnRiftRemoved:": {
        "prefix": "components.riftspawner:OnRiftRemoved",
        "body": "components.riftspawner:OnRiftRemoved(${1:rift})",
        "description": "参数:(rift)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.IsShadowPortalActive:": {
        "prefix": "components.riftspawner:IsShadowPortalActive",
        "body": "components.riftspawner:IsShadowPortalActive()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.GetDebugRiftString:": {
        "prefix": "components.riftspawner:GetDebugRiftString",
        "body": "components.riftspawner:GetDebugRiftString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.AddRiftToPool:": {
        "prefix": "components.riftspawner:AddRiftToPool",
        "body": "components.riftspawner:AddRiftToPool(${1:rift},${2:rift_prefab})",
        "description": "参数:(rift)<>[],(rift_prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.GetLunarRiftsEnabled:": {
        "prefix": "components.riftspawner:GetLunarRiftsEnabled",
        "body": "components.riftspawner:GetLunarRiftsEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.OnLunarRiftMaxSize:": {
        "prefix": "components.riftspawner:OnLunarRiftMaxSize",
        "body": "components.riftspawner:OnLunarRiftMaxSize(${1:src},${2:rift})",
        "description": "参数:(src)<>[],(rift)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.GetRiftsOfPrefab:": {
        "prefix": "components.riftspawner:GetRiftsOfPrefab",
        "body": "components.riftspawner:GetRiftsOfPrefab(${1:prefab})",
        "description": "参数:(prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.GetXRiftsEnabled:": {
        "prefix": "components.riftspawner:GetXRiftsEnabled",
        "body": "components.riftspawner:GetXRiftsEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "riftspawner.SetEnabledSettingCave:": {
        "prefix": "components.riftspawner:SetEnabledSettingCave",
        "body": "components.riftspawner:SetEnabledSettingCave(${1:src},${2:enabled_difficulty})",
        "description": "参数:(src)<>[],(enabled_difficulty)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.SetEnabledSetting:": {
        "prefix": "components.riftspawner:SetEnabledSetting",
        "body": "components.riftspawner:SetEnabledSetting(${1:src},${2:enabled_difficulty})",
        "description": "参数:(src)<>[],(enabled_difficulty)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.EnableXRifts:": {
        "prefix": "components.riftspawner:EnableXRifts",
        "body": "components.riftspawner:EnableXRifts(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "riftspawner.EnableLunarRifts:": {
        "prefix": "components.riftspawner:EnableLunarRifts",
        "body": "components.riftspawner:EnableLunarRifts(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "rooted.RemoveSource:": {
        "prefix": "components.rooted:RemoveSource",
        "body": "components.rooted:RemoveSource(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "rooted.OnRemoveFromEntity:": {
        "prefix": "components.rooted:OnRemoveFromEntity",
        "body": "components.rooted:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "rooted.AddSource:": {
        "prefix": "components.rooted:AddSource",
        "body": "components.rooted:AddSource(${1:src})",
        "description": "参数:(src)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectable.HookupResidue:": {
        "prefix": "components.roseinspectable:HookupResidue",
        "body": "components.roseinspectable:HookupResidue(${1:residueowner},${2:residue})",
        "description": "参数:(residueowner)<>[],(residue)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectable.SetOnResidueActivated:": {
        "prefix": "components.roseinspectable:SetOnResidueActivated",
        "body": "components.roseinspectable:SetOnResidueActivated(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectable.SetOnResidueCreated:": {
        "prefix": "components.roseinspectable:SetOnResidueCreated",
        "body": "components.roseinspectable:SetOnResidueCreated(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectable.CanResidueBeSpawnedBy:": {
        "prefix": "components.roseinspectable:CanResidueBeSpawnedBy",
        "body": "components.roseinspectable:CanResidueBeSpawnedBy(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectable.WillInduceCooldownOnActivate:": {
        "prefix": "components.roseinspectable:WillInduceCooldownOnActivate",
        "body": "components.roseinspectable:WillInduceCooldownOnActivate(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectable.SetWillInduceCooldownOnActivate:": {
        "prefix": "components.roseinspectable:SetWillInduceCooldownOnActivate",
        "body": "components.roseinspectable:SetWillInduceCooldownOnActivate(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectable.DoRoseInspection:": {
        "prefix": "components.roseinspectable:DoRoseInspection",
        "body": "components.roseinspectable:DoRoseInspection(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectable.SetForcedInduceCooldownOnActivate:": {
        "prefix": "components.roseinspectable:SetForcedInduceCooldownOnActivate",
        "body": "components.roseinspectable:SetForcedInduceCooldownOnActivate(${1:bool})",
        "description": "参数:(bool)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectable.SetCanResidueBeSpawnedBy:": {
        "prefix": "components.roseinspectable:SetCanResidueBeSpawnedBy",
        "body": "components.roseinspectable:SetCanResidueBeSpawnedBy(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.SpawnResidue:": {
        "prefix": "components.roseinspectableuser:SpawnResidue",
        "body": "components.roseinspectableuser:SpawnResidue()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.OnSave:": {
        "prefix": "components.roseinspectableuser:OnSave",
        "body": "components.roseinspectableuser:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.DoQuip:": {
        "prefix": "components.roseinspectableuser:DoQuip",
        "body": "components.roseinspectableuser:DoQuip(${1:reason},${2:failed})",
        "description": "参数:(reason)<>[],(failed)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.LongUpdate:": {
        "prefix": "components.roseinspectableuser:LongUpdate",
        "body": "components.roseinspectableuser:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.OnRemoveFromEntity:": {
        "prefix": "components.roseinspectableuser:OnRemoveFromEntity",
        "body": "components.roseinspectableuser:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.SetRoseInpectionOnTarget:": {
        "prefix": "components.roseinspectableuser:SetRoseInpectionOnTarget",
        "body": "components.roseinspectableuser:SetRoseInpectionOnTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.IsInCooldown:": {
        "prefix": "components.roseinspectableuser:IsInCooldown",
        "body": "components.roseinspectableuser:IsInCooldown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.SetRoseInpectionOnPoint:": {
        "prefix": "components.roseinspectableuser:SetRoseInpectionOnPoint",
        "body": "components.roseinspectableuser:SetRoseInpectionOnPoint(${1:point})",
        "description": "参数:(point)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.ForceDecayResidue:": {
        "prefix": "components.roseinspectableuser:ForceDecayResidue",
        "body": "components.roseinspectableuser:ForceDecayResidue()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.OnCharlieResidueActivated:": {
        "prefix": "components.roseinspectableuser:OnCharlieResidueActivated",
        "body": "components.roseinspectableuser:OnCharlieResidueActivated(${1:residue})",
        "description": "参数:(residue)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.TryToDoRoseInspectionOnTarget:": {
        "prefix": "components.roseinspectableuser:TryToDoRoseInspectionOnTarget",
        "body": "components.roseinspectableuser:TryToDoRoseInspectionOnTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.SetCooldownTime:": {
        "prefix": "components.roseinspectableuser:SetCooldownTime",
        "body": "components.roseinspectableuser:SetCooldownTime(${1:cooldowntime})",
        "description": "参数:(cooldowntime)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.GoOnCooldown:": {
        "prefix": "components.roseinspectableuser:GoOnCooldown",
        "body": "components.roseinspectableuser:GoOnCooldown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.OnLoad:": {
        "prefix": "components.roseinspectableuser:OnLoad",
        "body": "components.roseinspectableuser:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.GetDebugString:": {
        "prefix": "components.roseinspectableuser:GetDebugString",
        "body": "components.roseinspectableuser:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.ApplyCooldown:": {
        "prefix": "components.roseinspectableuser:ApplyCooldown",
        "body": "components.roseinspectableuser:ApplyCooldown(${1:duration})",
        "description": "参数:(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.DoRoseInspectionOnPoint:": {
        "prefix": "components.roseinspectableuser:DoRoseInspectionOnPoint",
        "body": "components.roseinspectableuser:DoRoseInspectionOnPoint()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.TryToDoRoseInspectionOnPoint:": {
        "prefix": "components.roseinspectableuser:TryToDoRoseInspectionOnPoint",
        "body": "components.roseinspectableuser:TryToDoRoseInspectionOnPoint(${1:pt})",
        "description": "参数:(pt)<>[] 返回值:无返回值 贡献者:@"
    },
    "roseinspectableuser.OnCooldown:": {
        "prefix": "components.roseinspectableuser:OnCooldown",
        "body": "components.roseinspectableuser:OnCooldown()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "ruinsshadelingspawner.TrySpawnShadeling:": {
        "prefix": "components.ruinsshadelingspawner:TrySpawnShadeling",
        "body": "components.ruinsshadelingspawner:TrySpawnShadeling(${1:chair})",
        "description": "参数:(chair)<>[] 返回值:无返回值 贡献者:@"
    },
    "ruinsshadelingspawner.LongUpdate:": {
        "prefix": "components.ruinsshadelingspawner:LongUpdate",
        "body": "components.ruinsshadelingspawner:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "saddler.ApplyDamage:": {
        "prefix": "components.saddler:ApplyDamage",
        "body": "components.saddler:ApplyDamage(${1:damage},${2:attacker},${3:weapon},${4:spdamage})",
        "description": "参数:(damage)<>[],(attacker)<>[],(weapon)<>[],(spdamage)<>[] 返回值:无返回值 贡献者:@"
    },
    "saddler.SetSwaps:": {
        "prefix": "components.saddler:SetSwaps",
        "body": "components.saddler:SetSwaps(${1:build},${2:symbol},${3:skin_guid})",
        "description": "参数:(build)<>[],(symbol)<>[],(skin_guid)<>[] 返回值:无返回值 贡献者:@"
    },
    "saddler.SetBonusSpeedMult:": {
        "prefix": "components.saddler:SetBonusSpeedMult",
        "body": "components.saddler:SetBonusSpeedMult(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "saddler.SetAbsorption:": {
        "prefix": "components.saddler:SetAbsorption",
        "body": "components.saddler:SetAbsorption(${1:percent})",
        "description": "参数:(percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "saddler.GetBonusSpeedMult:": {
        "prefix": "components.saddler:GetBonusSpeedMult",
        "body": "components.saddler:GetBonusSpeedMult()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "saddler.SetBonusDamage:": {
        "prefix": "components.saddler:SetBonusDamage",
        "body": "components.saddler:SetBonusDamage(${1:damage})",
        "description": "参数:(damage)<>[] 返回值:无返回值 贡献者:@"
    },
    "saddler.SetDiscardedCallback:": {
        "prefix": "components.saddler:SetDiscardedCallback",
        "body": "components.saddler:SetDiscardedCallback(${1:cb})",
        "description": "参数:(cb)<>[] 返回值:无返回值 贡献者:@"
    },
    "saddler.GetAbsorption:": {
        "prefix": "components.saddler:GetAbsorption",
        "body": "components.saddler:GetAbsorption()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "saddler.GetBonusDamage:": {
        "prefix": "components.saddler:GetBonusDamage",
        "body": "components.saddler:GetBonusDamage(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "saltlicker.SetUp:": {
        "prefix": "components.saltlicker:SetUp",
        "body": "components.saltlicker:SetUp(${1:uses_per_lick})",
        "description": "参数:(uses_per_lick)<>[] 返回值:无返回值 贡献者:@"
    },
    "saltlicker.OnSave:": {
        "prefix": "components.saltlicker:OnSave",
        "body": "components.saltlicker:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "saltlicker.GetDebugString:": {
        "prefix": "components.saltlicker:GetDebugString",
        "body": "components.saltlicker:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "saltlicker.SetSalted:": {
        "prefix": "components.saltlicker:SetSalted",
        "body": "components.saltlicker:SetSalted(${1:salted})",
        "description": "参数:(salted)<>[] 返回值:无返回值 贡献者:@"
    },
    "saltlicker.LoadPostPass:": {
        "prefix": "components.saltlicker:LoadPostPass",
        "body": "components.saltlicker:LoadPostPass()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "saltlicker.Stop:": {
        "prefix": "components.saltlicker:Stop",
        "body": "components.saltlicker:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "saltlicker.OnRemoveFromEntity:": {
        "prefix": "components.saltlicker:OnRemoveFromEntity",
        "body": "components.saltlicker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sandstormwatcher.UpdateSandstormWalkSpeed_Internal:": {
        "prefix": "components.sandstormwatcher:UpdateSandstormWalkSpeed_Internal",
        "body": "components.sandstormwatcher:UpdateSandstormWalkSpeed_Internal(${1:level})",
        "description": "参数:(level)<>[] 返回值:无返回值 贡献者:@"
    },
    "sandstormwatcher.GetSandstormLevel:": {
        "prefix": "components.sandstormwatcher:GetSandstormLevel",
        "body": "components.sandstormwatcher:GetSandstormLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sandstormwatcher.UpdateSandstormWalkSpeed:": {
        "prefix": "components.sandstormwatcher:UpdateSandstormWalkSpeed",
        "body": "components.sandstormwatcher:UpdateSandstormWalkSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sandstormwatcher.ToggleSandstorms:": {
        "prefix": "components.sandstormwatcher:ToggleSandstorms",
        "body": "components.sandstormwatcher:ToggleSandstorms(${1:active})",
        "description": "参数:(active)<>[] 返回值:无返回值 贡献者:@"
    },
    "sandstormwatcher.UpdateSandstormLevel:": {
        "prefix": "components.sandstormwatcher:UpdateSandstormLevel",
        "body": "components.sandstormwatcher:UpdateSandstormLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sandstormwatcher.OnRemoveFromEntity:": {
        "prefix": "components.sandstormwatcher:OnRemoveFromEntity",
        "body": "components.sandstormwatcher:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sandstormwatcher.SetSandstormSpeedMultiplier:": {
        "prefix": "components.sandstormwatcher:SetSandstormSpeedMultiplier",
        "body": "components.sandstormwatcher:SetSandstormSpeedMultiplier(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.SetMax:": {
        "prefix": "components.sanity:SetMax",
        "body": "components.sanity:SetMax(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.IsSane:": {
        "prefix": "components.sanity:IsSane",
        "body": "components.sanity:IsSane()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.RemoveSanityAuraImmunity:": {
        "prefix": "components.sanity:RemoveSanityAuraImmunity",
        "body": "components.sanity:RemoveSanityAuraImmunity(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.GetSanityMode:": {
        "prefix": "components.sanity:GetSanityMode",
        "body": "components.sanity:GetSanityMode()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.IsCrazy:": {
        "prefix": "components.sanity:IsCrazy",
        "body": "components.sanity:IsCrazy()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.Recalc:": {
        "prefix": "components.sanity:Recalc",
        "body": "components.sanity:Recalc(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.AddSanityPenalty:": {
        "prefix": "components.sanity:AddSanityPenalty",
        "body": "components.sanity:AddSanityPenalty(${1:key},${2:mod})",
        "description": "参数:(key)<>[],(mod)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.IsInsane:": {
        "prefix": "components.sanity:IsInsane",
        "body": "components.sanity:IsInsane()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.GetPercentWithPenalty:": {
        "prefix": "components.sanity:GetPercentWithPenalty",
        "body": "components.sanity:GetPercentWithPenalty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.GetRealPercent:": {
        "prefix": "components.sanity:GetRealPercent",
        "body": "components.sanity:GetRealPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.IsInsanityMode:": {
        "prefix": "components.sanity:IsInsanityMode",
        "body": "components.sanity:IsInsanityMode()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.GetMaxWithPenalty:": {
        "prefix": "components.sanity:GetMaxWithPenalty",
        "body": "components.sanity:GetMaxWithPenalty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.SetLightDrainImmune:": {
        "prefix": "components.sanity:SetLightDrainImmune",
        "body": "components.sanity:SetLightDrainImmune(${1:immunity})",
        "description": "参数:(immunity)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.TransferComponent:": {
        "prefix": "components.sanity:TransferComponent",
        "body": "components.sanity:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.DoDelta:": {
        "prefix": "components.sanity:DoDelta",
        "body": "components.sanity:DoDelta(${1:delta},${2:overtime})",
        "description": "参数:(delta)<>[],(overtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.IsLunacyMode:": {
        "prefix": "components.sanity:IsLunacyMode",
        "body": "components.sanity:IsLunacyMode()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.SetInducedInsanity:": {
        "prefix": "components.sanity:SetInducedInsanity",
        "body": "components.sanity:SetInducedInsanity(${1:src},${2:val})",
        "description": "参数:(src)<>[],(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.SetPercent:": {
        "prefix": "components.sanity:SetPercent",
        "body": "components.sanity:SetPercent(${1:per},${2:overtime})",
        "description": "参数:(per)<>[],(overtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.AddSanityAuraImmunity:": {
        "prefix": "components.sanity:AddSanityAuraImmunity",
        "body": "components.sanity:AddSanityAuraImmunity(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.SetFullAuraImmunity:": {
        "prefix": "components.sanity:SetFullAuraImmunity",
        "body": "components.sanity:SetFullAuraImmunity(${1:immunity})",
        "description": "参数:(immunity)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.GetAuraMultipliers:": {
        "prefix": "components.sanity:GetAuraMultipliers",
        "body": "components.sanity:GetAuraMultipliers()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.SetSanityMode:": {
        "prefix": "components.sanity:SetSanityMode",
        "body": "components.sanity:SetSanityMode(${1:mode})",
        "description": "参数:(mode)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.RemoveSanityPenalty:": {
        "prefix": "components.sanity:RemoveSanityPenalty",
        "body": "components.sanity:RemoveSanityPenalty(${1:key})",
        "description": "参数:(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.OnLoad:": {
        "prefix": "components.sanity:OnLoad",
        "body": "components.sanity:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.GetDebugString:": {
        "prefix": "components.sanity:GetDebugString",
        "body": "components.sanity:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.GetRateScale:": {
        "prefix": "components.sanity:GetRateScale",
        "body": "components.sanity:GetRateScale()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.RecalcGhostDrain:": {
        "prefix": "components.sanity:RecalcGhostDrain",
        "body": "components.sanity:RecalcGhostDrain()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.GetPenaltyPercent:": {
        "prefix": "components.sanity:GetPenaltyPercent",
        "body": "components.sanity:GetPenaltyPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.OnSave:": {
        "prefix": "components.sanity:OnSave",
        "body": "components.sanity:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.EnableLunacy:": {
        "prefix": "components.sanity:EnableLunacy",
        "body": "components.sanity:EnableLunacy(${1:enable},${2:source})",
        "description": "参数:(enable)<>[],(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.IsEnlightened:": {
        "prefix": "components.sanity:IsEnlightened",
        "body": "components.sanity:IsEnlightened()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.OnUpdate:": {
        "prefix": "components.sanity:OnUpdate",
        "body": "components.sanity:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.GetPercent:": {
        "prefix": "components.sanity:GetPercent",
        "body": "components.sanity:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanity.SetPlayerGhostImmunity:": {
        "prefix": "components.sanity:SetPlayerGhostImmunity",
        "body": "components.sanity:SetPlayerGhostImmunity(${1:immunity})",
        "description": "参数:(immunity)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.SetNegativeAuraImmunity:": {
        "prefix": "components.sanity:SetNegativeAuraImmunity",
        "body": "components.sanity:SetNegativeAuraImmunity(${1:immunity})",
        "description": "参数:(immunity)<>[] 返回值:无返回值 贡献者:@"
    },
    "sanity.RecalculatePenalty:": {
        "prefix": "components.sanity:RecalculatePenalty",
        "body": "components.sanity:RecalculatePenalty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanityaura.OnRemoveFromEntity:": {
        "prefix": "components.sanityaura:OnRemoveFromEntity",
        "body": "components.sanityaura:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sanityaura.GetAura:": {
        "prefix": "components.sanityaura:GetAura",
        "body": "components.sanityaura:GetAura(${1:observer})",
        "description": "参数:(observer)<>[] 返回值:无返回值 贡献者:@"
    },
    "savedrotation.OnSave:": {
        "prefix": "components.savedrotation:OnSave",
        "body": "components.savedrotation:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "savedrotation.LoadPostPass:": {
        "prefix": "components.savedrotation:LoadPostPass",
        "body": "components.savedrotation:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "savedscale.OnSave:": {
        "prefix": "components.savedscale:OnSave",
        "body": "components.savedscale:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "savedscale.OnLoad:": {
        "prefix": "components.savedscale:OnLoad",
        "body": "components.savedscale:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "scaler.SetScale:": {
        "prefix": "components.scaler:SetScale",
        "body": "components.scaler:SetScale(${1:scale})",
        "description": "参数:(scale)<>[] 返回值:无返回值 贡献者:@"
    },
    "scaler.OnSave:": {
        "prefix": "components.scaler:OnSave",
        "body": "components.scaler:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "scaler.ApplyScale:": {
        "prefix": "components.scaler:ApplyScale",
        "body": "components.scaler:ApplyScale()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "scaler.OnLoad:": {
        "prefix": "components.scaler:OnLoad",
        "body": "components.scaler:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "scenariorunner.Reset:": {
        "prefix": "components.scenariorunner:Reset",
        "body": "components.scenariorunner:Reset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "scenariorunner.OnSave:": {
        "prefix": "components.scenariorunner:OnSave",
        "body": "components.scenariorunner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "scenariorunner.OnLoad:": {
        "prefix": "components.scenariorunner:OnLoad",
        "body": "components.scenariorunner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "scenariorunner.SetScript:": {
        "prefix": "components.scenariorunner:SetScript",
        "body": "components.scenariorunner:SetScript(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "scenariorunner.ClearScenario:": {
        "prefix": "components.scenariorunner:ClearScenario",
        "body": "components.scenariorunner:ClearScenario()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "scenariorunner.Run:": {
        "prefix": "components.scenariorunner:Run",
        "body": "components.scenariorunner:Run()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "scrapbookable.SetOnTeachFn:": {
        "prefix": "components.scrapbookable:SetOnTeachFn",
        "body": "components.scrapbookable:SetOnTeachFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "scrapbookable.Teach:": {
        "prefix": "components.scrapbookable:Teach",
        "body": "components.scrapbookable:Teach(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "seamlessplayerswapper.OnLoad:": {
        "prefix": "components.seamlessplayerswapper:OnLoad",
        "body": "components.seamlessplayerswapper:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "seamlessplayerswapper.SwapBackToMainCharacter:": {
        "prefix": "components.seamlessplayerswapper:SwapBackToMainCharacter",
        "body": "components.seamlessplayerswapper:SwapBackToMainCharacter()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "seamlessplayerswapper.OnSave:": {
        "prefix": "components.seamlessplayerswapper:OnSave",
        "body": "components.seamlessplayerswapper:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "seamlessplayerswapper.DoMonkeyChange:": {
        "prefix": "components.seamlessplayerswapper:DoMonkeyChange",
        "body": "components.seamlessplayerswapper:DoMonkeyChange()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "seamlessplayerswapper.SaveForReroll:": {
        "prefix": "components.seamlessplayerswapper:SaveForReroll",
        "body": "components.seamlessplayerswapper:SaveForReroll()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "seamlessplayerswapper.PostTransformSetup:": {
        "prefix": "components.seamlessplayerswapper:PostTransformSetup",
        "body": "components.seamlessplayerswapper:PostTransformSetup()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "seamlessplayerswapper._StartSwap:": {
        "prefix": "components.seamlessplayerswapper:_StartSwap",
        "body": "components.seamlessplayerswapper:_StartSwap(${1:new_prefab})",
        "description": "参数:(new_prefab)<>[] 返回值:无返回值 贡献者:@"
    },
    "seamlessplayerswapper.OnSeamlessCharacterSwap:": {
        "prefix": "components.seamlessplayerswapper:OnSeamlessCharacterSwap",
        "body": "components.seamlessplayerswapper:OnSeamlessCharacterSwap(${1:old_player})",
        "description": "参数:(old_player)<>[] 返回值:无返回值 贡献者:@"
    },
    "searchable.OnSave:": {
        "prefix": "components.searchable:OnSave",
        "body": "components.searchable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "searchable.OnRemoveEntity:": {
        "prefix": "components.searchable:OnRemoveEntity",
        "body": "components.searchable:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "searchable.GetDebugString:": {
        "prefix": "components.searchable:GetDebugString",
        "body": "components.searchable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "searchable.OnLoad:": {
        "prefix": "components.searchable:OnLoad",
        "body": "components.searchable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "searchable.Search:": {
        "prefix": "components.searchable:Search",
        "body": "components.searchable:Search(${1:searcher})",
        "description": "参数:(searcher)<>[] 返回值:无返回值 贡献者:@"
    },
    "selfstacker.FindItemToStackWith:": {
        "prefix": "components.selfstacker:FindItemToStackWith",
        "body": "components.selfstacker:FindItemToStackWith()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "selfstacker.DoStack:": {
        "prefix": "components.selfstacker:DoStack",
        "body": "components.selfstacker:DoStack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "selfstacker.SetIgnoreMovingFast:": {
        "prefix": "components.selfstacker:SetIgnoreMovingFast",
        "body": "components.selfstacker:SetIgnoreMovingFast(${1:ignorespeedcheck})",
        "description": "参数:(ignorespeedcheck)<>[] 返回值:无返回值 贡献者:@"
    },
    "selfstacker.OnRemoveEntity:": {
        "prefix": "components.selfstacker:OnRemoveEntity",
        "body": "components.selfstacker:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "selfstacker.CanSelfStack:": {
        "prefix": "components.selfstacker:CanSelfStack",
        "body": "components.selfstacker:CanSelfStack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "selfstacker.OnEntityWake:": {
        "prefix": "components.selfstacker:OnEntityWake",
        "body": "components.selfstacker:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sentientaxe.OnWereEaterChanged:": {
        "prefix": "components.sentientaxe:OnWereEaterChanged",
        "body": "components.sentientaxe:OnWereEaterChanged(${1:old},${2:new},${3:istransforming})",
        "description": "参数:(old)<>[],(new)<>[],(istransforming)<>[] 返回值:无返回值 贡献者:@"
    },
    "sentientaxe.OnBuildItem:": {
        "prefix": "components.sentientaxe:OnBuildItem",
        "body": "components.sentientaxe:OnBuildItem(${1:recipename})",
        "description": "参数:(recipename)<>[] 返回值:无返回值 贡献者:@"
    },
    "sentientaxe.OnBecomeWere:": {
        "prefix": "components.sentientaxe:OnBecomeWere",
        "body": "components.sentientaxe:OnBecomeWere()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sentientaxe.OnFinishedWork:": {
        "prefix": "components.sentientaxe:OnFinishedWork",
        "body": "components.sentientaxe:OnFinishedWork(${1:target},${2:action})",
        "description": "参数:(target)<>[],(action)<>[] 返回值:无返回值 贡献者:@"
    },
    "sentientaxe.OnBecomeHuman:": {
        "prefix": "components.sentientaxe:OnBecomeHuman",
        "body": "components.sentientaxe:OnBecomeHuman()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sentientaxe.ScheduleConversation:": {
        "prefix": "components.sentientaxe:ScheduleConversation",
        "body": "components.sentientaxe:ScheduleConversation(${1:delay})",
        "description": "参数:(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "sentientaxe.ShouldMakeConversation:": {
        "prefix": "components.sentientaxe:ShouldMakeConversation",
        "body": "components.sentientaxe:ShouldMakeConversation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sentientaxe.SetOwner:": {
        "prefix": "components.sentientaxe:SetOwner",
        "body": "components.sentientaxe:SetOwner(${1:owner})",
        "description": "参数:(owner)<>[] 返回值:无返回值 贡献者:@"
    },
    "sentientaxe.Say:": {
        "prefix": "components.sentientaxe:Say",
        "body": "components.sentientaxe:Say(${1:list},${2:sound_override},${3:delay})",
        "description": "参数:(list)<>[],(sound_override)<>[],(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "sentientaxe.MakeConversation:": {
        "prefix": "components.sentientaxe:MakeConversation",
        "body": "components.sentientaxe:MakeConversation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "setbonus.GetDebugString:": {
        "prefix": "components.setbonus:GetDebugString",
        "body": "components.setbonus:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "setbonus._HasSetBonus:": {
        "prefix": "components.setbonus:_HasSetBonus",
        "body": "components.setbonus:_HasSetBonus(${1:inventory})",
        "description": "参数:(inventory)<>[] 返回值:无返回值 贡献者:@"
    },
    "setbonus.OnRemoveFromEntity:": {
        "prefix": "components.setbonus:OnRemoveFromEntity",
        "body": "components.setbonus:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "setbonus.SetOnDisabledFn:": {
        "prefix": "components.setbonus:SetOnDisabledFn",
        "body": "components.setbonus:SetOnDisabledFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "setbonus.IsEnabled:": {
        "prefix": "components.setbonus:IsEnabled",
        "body": "components.setbonus:IsEnabled(${1:setname})",
        "description": "参数:(setname)<>[] 返回值:无返回值 贡献者:@"
    },
    "setbonus.SetOnEnabledFn:": {
        "prefix": "components.setbonus:SetOnEnabledFn",
        "body": "components.setbonus:SetOnEnabledFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "setbonus.UpdateSetBonus:": {
        "prefix": "components.setbonus:UpdateSetBonus",
        "body": "components.setbonus:UpdateSetBonus(${1:inventory},${2:isequipping})",
        "description": "参数:(inventory)<>[],(isequipping)<>[] 返回值:无返回值 贡献者:@"
    },
    "sewing.DoSewing:": {
        "prefix": "components.sewing:DoSewing",
        "body": "components.sewing:DoSewing(${1:target},${2:doer})",
        "description": "参数:(target)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "shadowdominance.OnRemoveFromEntity:": {
        "prefix": "components.shadowdominance:OnRemoveFromEntity",
        "body": "components.shadowdominance:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shadowlevel.GetCurrentLevel:": {
        "prefix": "components.shadowlevel:GetCurrentLevel",
        "body": "components.shadowlevel:GetCurrentLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shadowlevel.SetLevelFn:": {
        "prefix": "components.shadowlevel:SetLevelFn",
        "body": "components.shadowlevel:SetLevelFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "shadowlevel.OnRemoveFromEntity:": {
        "prefix": "components.shadowlevel:OnRemoveFromEntity",
        "body": "components.shadowlevel:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shadowlevel.SetDefaultLevel:": {
        "prefix": "components.shadowlevel:SetDefaultLevel",
        "body": "components.shadowlevel:SetDefaultLevel(${1:level})",
        "description": "参数:(level)<>[] 返回值:无返回值 贡献者:@"
    },
    "shadowsubmissive.ShouldSubmitToTarget:": {
        "prefix": "components.shadowsubmissive:ShouldSubmitToTarget",
        "body": "components.shadowsubmissive:ShouldSubmitToTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "shadowsubmissive.OnRemoveFromEntity:": {
        "prefix": "components.shadowsubmissive:OnRemoveFromEntity",
        "body": "components.shadowsubmissive:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shadowsubmissive.TargetHasDominance:": {
        "prefix": "components.shadowsubmissive:TargetHasDominance",
        "body": "components.shadowsubmissive:TargetHasDominance(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "shatterfx.SetLevel:": {
        "prefix": "components.shatterfx:SetLevel",
        "body": "components.shatterfx:SetLevel(${1:level})",
        "description": "参数:(level)<>[] 返回值:无返回值 贡献者:@"
    },
    "shaveable.OnSave:": {
        "prefix": "components.shaveable:OnSave",
        "body": "components.shaveable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shaveable.SetPrize:": {
        "prefix": "components.shaveable:SetPrize",
        "body": "components.shaveable:SetPrize(${1:prize_prefab},${2:prize_count})",
        "description": "参数:(prize_prefab)<>[],(prize_count)<>[] 返回值:无返回值 贡献者:@"
    },
    "shaveable.OnLoad:": {
        "prefix": "components.shaveable:OnLoad",
        "body": "components.shaveable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "shaveable.GetDebugString:": {
        "prefix": "components.shaveable:GetDebugString",
        "body": "components.shaveable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shaveable.Shave:": {
        "prefix": "components.shaveable:Shave",
        "body": "components.shaveable:Shave(${1:shaver},${2:shaving_implement})",
        "description": "参数:(shaver)<>[],(shaving_implement)<>[] 返回值:无返回值 贡献者:@"
    },
    "shaveable.OnRemoveFromEntity:": {
        "prefix": "components.shaveable:OnRemoveFromEntity",
        "body": "components.shaveable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shaveable.CanShave:": {
        "prefix": "components.shaveable:CanShave",
        "body": "components.shaveable:CanShave(${1:shaver},${2:shaving_implement})",
        "description": "参数:(shaver)<>[],(shaving_implement)<>[] 返回值:无返回值 贡献者:@"
    },
    "shedder.DoSingleShed:": {
        "prefix": "components.shedder:DoSingleShed",
        "body": "components.shedder:DoSingleShed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shedder.DoMultiShed:": {
        "prefix": "components.shedder:DoMultiShed",
        "body": "components.shedder:DoMultiShed(${1:max},${2:random})",
        "description": "参数:(max)<>[],(random)<>[] 返回值:无返回值 贡献者:@"
    },
    "shedder.StopShedding:": {
        "prefix": "components.shedder:StopShedding",
        "body": "components.shedder:StopShedding()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shedder.StartShedding:": {
        "prefix": "components.shedder:StartShedding",
        "body": "components.shedder:StartShedding(${1:interval})",
        "description": "参数:(interval)<>[] 返回值:无返回值 贡献者:@"
    },
    "shelf.SetOnTakeItem:": {
        "prefix": "components.shelf:SetOnTakeItem",
        "body": "components.shelf:SetOnTakeItem(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "shelf.SetOnShelfItem:": {
        "prefix": "components.shelf:SetOnShelfItem",
        "body": "components.shelf:SetOnShelfItem(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "shelf.TakeItem:": {
        "prefix": "components.shelf:TakeItem",
        "body": "components.shelf:TakeItem(${1:taker})",
        "description": "参数:(taker)<>[] 返回值:无返回值 贡献者:@"
    },
    "shelf.GetDebugString:": {
        "prefix": "components.shelf:GetDebugString",
        "body": "components.shelf:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shelf.OnRemoveFromEntity:": {
        "prefix": "components.shelf:OnRemoveFromEntity",
        "body": "components.shelf:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shelf.PutItemOnShelf:": {
        "prefix": "components.shelf:PutItemOnShelf",
        "body": "components.shelf:PutItemOnShelf(${1:item})",
        "description": "参数:(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "sheltered.Start:": {
        "prefix": "components.sheltered:Start",
        "body": "components.sheltered:Start()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sheltered.SetSheltered:": {
        "prefix": "components.sheltered:SetSheltered",
        "body": "components.sheltered:SetSheltered(${1:issheltered},${2:level})",
        "description": "参数:(issheltered)<>[],(level)<>[] 返回值:无返回值 贡献者:@"
    },
    "sheltered.OnUpdate:": {
        "prefix": "components.sheltered:OnUpdate",
        "body": "components.sheltered:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "sheltered.GetDebugString:": {
        "prefix": "components.sheltered:GetDebugString",
        "body": "components.sheltered:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sheltered.OnRemoveFromEntity:": {
        "prefix": "components.sheltered:OnRemoveFromEntity",
        "body": "components.sheltered:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sheltered.Stop:": {
        "prefix": "components.sheltered:Stop",
        "body": "components.sheltered:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "shop.DeliverItems:": {
        "prefix": "components.shop:DeliverItems",
        "body": "components.shop:DeliverItems(${1:items})",
        "description": "参数:(items)<>[] 返回值:无返回值 贡献者:@"
    },
    "shop.SetStartTab:": {
        "prefix": "components.shop:SetStartTab",
        "body": "components.shop:SetStartTab(${1:tab})",
        "description": "参数:(tab)<>[] 返回值:无返回值 贡献者:@"
    },
    "shop.SetTitle:": {
        "prefix": "components.shop:SetTitle",
        "body": "components.shop:SetTitle(${1:title})",
        "description": "参数:(title)<>[] 返回值:无返回值 贡献者:@"
    },
    "simplebook.OnRemoveFromEntity:": {
        "prefix": "components.simplebook:OnRemoveFromEntity",
        "body": "components.simplebook:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "simplebook.Read:": {
        "prefix": "components.simplebook:Read",
        "body": "components.simplebook:Read(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "simplemagicgrower.SetLastStage:": {
        "prefix": "components.simplemagicgrower:SetLastStage",
        "body": "components.simplemagicgrower:SetLastStage(${1:last_stage})",
        "description": "参数:(last_stage)<>[] 返回值:无返回值 贡献者:@"
    },
    "simplemagicgrower.Grow:": {
        "prefix": "components.simplemagicgrower:Grow",
        "body": "components.simplemagicgrower:Grow()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "simplemagicgrower.StartGrowing:": {
        "prefix": "components.simplemagicgrower:StartGrowing",
        "body": "components.simplemagicgrower:StartGrowing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singable.SetOnSing:": {
        "prefix": "components.singable:SetOnSing",
        "body": "components.singable:SetOnSing(${1:onsingfn})",
        "description": "参数:(onsingfn)<>[] 返回值:无返回值 贡献者:@"
    },
    "singable.Sing:": {
        "prefix": "components.singable:Sing",
        "body": "components.singable:Sing(${1:singer})",
        "description": "参数:(singer)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.IsSinging:": {
        "prefix": "components.singinginspiration:IsSinging",
        "body": "components.singinginspiration:IsSinging()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.GetDetachRadius:": {
        "prefix": "components.singinginspiration:GetDetachRadius",
        "body": "components.singinginspiration:GetDetachRadius()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.DoDelta:": {
        "prefix": "components.singinginspiration:DoDelta",
        "body": "components.singinginspiration:DoDelta(${1:delta},${2:forceupdate})",
        "description": "参数:(delta)<>[],(forceupdate)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.SetMaxInspiration:": {
        "prefix": "components.singinginspiration:SetMaxInspiration",
        "body": "components.singinginspiration:SetMaxInspiration(${1:max})",
        "description": "参数:(max)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.CanAddSong:": {
        "prefix": "components.singinginspiration:CanAddSong",
        "body": "components.singinginspiration:CanAddSong(${1:songdata},${2:inst})",
        "description": "参数:(songdata)<>[],(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.SetPercent:": {
        "prefix": "components.singinginspiration:SetPercent",
        "body": "components.singinginspiration:SetPercent(${1:percent})",
        "description": "参数:(percent)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.GetMaxInspiration:": {
        "prefix": "components.singinginspiration:GetMaxInspiration",
        "body": "components.singinginspiration:GetMaxInspiration()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.SetValidVictimFn:": {
        "prefix": "components.singinginspiration:SetValidVictimFn",
        "body": "components.singinginspiration:SetValidVictimFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.SetCalcAvailableSlotsForInspirationFn:": {
        "prefix": "components.singinginspiration:SetCalcAvailableSlotsForInspirationFn",
        "body": "components.singinginspiration:SetCalcAvailableSlotsForInspirationFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.GetDebugString:": {
        "prefix": "components.singinginspiration:GetDebugString",
        "body": "components.singinginspiration:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.OnRidingTick:": {
        "prefix": "components.singinginspiration:OnRidingTick",
        "body": "components.singinginspiration:OnRidingTick(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.OnSave:": {
        "prefix": "components.singinginspiration:OnSave",
        "body": "components.singinginspiration:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.GetActiveSong:": {
        "prefix": "components.singinginspiration:GetActiveSong",
        "body": "components.singinginspiration:GetActiveSong(${1:slot_num})",
        "description": "参数:(slot_num)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.OnLoad:": {
        "prefix": "components.singinginspiration:OnLoad",
        "body": "components.singinginspiration:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.AddSong:": {
        "prefix": "components.singinginspiration:AddSong",
        "body": "components.singinginspiration:AddSong(${1:songdata},${2:skip_inspire},${3:inst})",
        "description": "参数:(songdata)<>[],(skip_inspire)<>[],(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.PopSong:": {
        "prefix": "components.singinginspiration:PopSong",
        "body": "components.singinginspiration:PopSong()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.DisplayFx:": {
        "prefix": "components.singinginspiration:DisplayFx",
        "body": "components.singinginspiration:DisplayFx()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.Inspire:": {
        "prefix": "components.singinginspiration:Inspire",
        "body": "components.singinginspiration:Inspire()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.OnAddInstantSong:": {
        "prefix": "components.singinginspiration:OnAddInstantSong",
        "body": "components.singinginspiration:OnAddInstantSong(${1:songdata},${2:inst})",
        "description": "参数:(songdata)<>[],(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.InstantInspire:": {
        "prefix": "components.singinginspiration:InstantInspire",
        "body": "components.singinginspiration:InstantInspire(${1:songdata})",
        "description": "参数:(songdata)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.IsSongActive:": {
        "prefix": "components.singinginspiration:IsSongActive",
        "body": "components.singinginspiration:IsSongActive(${1:songdata})",
        "description": "参数:(songdata)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.OnUpdate:": {
        "prefix": "components.singinginspiration:OnUpdate",
        "body": "components.singinginspiration:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.GetPercent:": {
        "prefix": "components.singinginspiration:GetPercent",
        "body": "components.singinginspiration:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.OnHitOther:": {
        "prefix": "components.singinginspiration:OnHitOther",
        "body": "components.singinginspiration:OnHitOther(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.OnAttacked:": {
        "prefix": "components.singinginspiration:OnAttacked",
        "body": "components.singinginspiration:OnAttacked(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "singinginspiration.SetInspiration:": {
        "prefix": "components.singinginspiration:SetInspiration",
        "body": "components.singinginspiration:SetInspiration(${1:value})",
        "description": "参数:(value)<>[] 返回值:无返回值 贡献者:@"
    },
    "singingshelltrigger.StopUpdating:": {
        "prefix": "components.singingshelltrigger:StopUpdating",
        "body": "components.singingshelltrigger:StopUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singingshelltrigger.StartUpdating:": {
        "prefix": "components.singingshelltrigger:StartUpdating",
        "body": "components.singingshelltrigger:StartUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singingshelltrigger.OnRemoveFromEntity:": {
        "prefix": "components.singingshelltrigger:OnRemoveFromEntity",
        "body": "components.singingshelltrigger:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "singingshelltrigger.OnUpdate:": {
        "prefix": "components.singingshelltrigger:OnUpdate",
        "body": "components.singingshelltrigger:OnUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sinkholespawner.DoTargetAttack:": {
        "prefix": "components.sinkholespawner:DoTargetAttack",
        "body": "components.sinkholespawner:DoTargetAttack(${1:targetinfo})",
        "description": "参数:(targetinfo)<>[] 返回值:无返回值 贡献者:@"
    },
    "sinkholespawner.UpdateTarget:": {
        "prefix": "components.sinkholespawner:UpdateTarget",
        "body": "components.sinkholespawner:UpdateTarget(${1:targetinfo})",
        "description": "参数:(targetinfo)<>[] 返回值:无返回值 贡献者:@"
    },
    "sinkholespawner.OnLoad:": {
        "prefix": "components.sinkholespawner:OnLoad",
        "body": "components.sinkholespawner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "sinkholespawner.GetDebugString:": {
        "prefix": "components.sinkholespawner:GetDebugString",
        "body": "components.sinkholespawner:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sinkholespawner.DoTargetWarning:": {
        "prefix": "components.sinkholespawner:DoTargetWarning",
        "body": "components.sinkholespawner:DoTargetWarning(${1:targetinfo})",
        "description": "参数:(targetinfo)<>[] 返回值:无返回值 贡献者:@"
    },
    "sinkholespawner.PushRemoteTargets:": {
        "prefix": "components.sinkholespawner:PushRemoteTargets",
        "body": "components.sinkholespawner:PushRemoteTargets()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sinkholespawner.StopSinkholes:": {
        "prefix": "components.sinkholespawner:StopSinkholes",
        "body": "components.sinkholespawner:StopSinkholes()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sinkholespawner.OnUpdate:": {
        "prefix": "components.sinkholespawner:OnUpdate",
        "body": "components.sinkholespawner:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "sinkholespawner.OnSave:": {
        "prefix": "components.sinkholespawner:OnSave",
        "body": "components.sinkholespawner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sinkholespawner.SpawnSinkhole:": {
        "prefix": "components.sinkholespawner:SpawnSinkhole",
        "body": "components.sinkholespawner:SpawnSinkhole(${1:spawnpt})",
        "description": "参数:(spawnpt)<>[] 返回值:无返回值 贡献者:@"
    },
    "sittable.OnRemoveFromEntity:": {
        "prefix": "components.sittable:OnRemoveFromEntity",
        "body": "components.sittable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sittable.IsOccupied:": {
        "prefix": "components.sittable:IsOccupied",
        "body": "components.sittable:IsOccupied()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sittable.SetOccupier:": {
        "prefix": "components.sittable:SetOccupier",
        "body": "components.sittable:SetOccupier(${1:occupier})",
        "description": "参数:(occupier)<>[] 返回值:无返回值 贡献者:@"
    },
    "sittable.IsOccupiedBy:": {
        "prefix": "components.sittable:IsOccupiedBy",
        "body": "components.sittable:IsOccupiedBy(${1:occupier})",
        "description": "参数:(occupier)<>[] 返回值:无返回值 贡献者:@"
    },
    "sizetweener.EndTween:": {
        "prefix": "components.sizetweener:EndTween",
        "body": "components.sizetweener:EndTween()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sizetweener.OnUpdate:": {
        "prefix": "components.sizetweener:OnUpdate",
        "body": "components.sizetweener:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "sizetweener.StartTween:": {
        "prefix": "components.sizetweener:StartTween",
        "body": "components.sizetweener:StartTween(${1:size},${2:time},${3:callback})",
        "description": "参数:(size)<>[],(time)<>[],(callback)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.OnSave:": {
        "prefix": "components.skilltreeupdater:OnSave",
        "body": "components.skilltreeupdater:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.DeactivateSkill_Client:": {
        "prefix": "components.skilltreeupdater:DeactivateSkill_Client",
        "body": "components.skilltreeupdater:DeactivateSkill_Client(${1:skill})",
        "description": "参数:(skill)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.IsActivated:": {
        "prefix": "components.skilltreeupdater:IsActivated",
        "body": "components.skilltreeupdater:IsActivated(${1:skill})",
        "description": "参数:(skill)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.SetSilent:": {
        "prefix": "components.skilltreeupdater:SetSilent",
        "body": "components.skilltreeupdater:SetSilent(${1:silent})",
        "description": "参数:(silent)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.SendFromSkillTreeBlob:": {
        "prefix": "components.skilltreeupdater:SendFromSkillTreeBlob",
        "body": "components.skilltreeupdater:SendFromSkillTreeBlob(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.SetPlayerSkillSelection:": {
        "prefix": "components.skilltreeupdater:SetPlayerSkillSelection",
        "body": "components.skilltreeupdater:SetPlayerSkillSelection(${1:skillselection})",
        "description": "参数:(skillselection)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.ActivateSkill_Server:": {
        "prefix": "components.skilltreeupdater:ActivateSkill_Server",
        "body": "components.skilltreeupdater:ActivateSkill_Server(${1:skill})",
        "description": "参数:(skill)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.ActivateSkill_Client:": {
        "prefix": "components.skilltreeupdater:ActivateSkill_Client",
        "body": "components.skilltreeupdater:ActivateSkill_Client(${1:skill})",
        "description": "参数:(skill)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.HasSkillTag:": {
        "prefix": "components.skilltreeupdater:HasSkillTag",
        "body": "components.skilltreeupdater:HasSkillTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.GetAvailableSkillPoints:": {
        "prefix": "components.skilltreeupdater:GetAvailableSkillPoints",
        "body": "components.skilltreeupdater:GetAvailableSkillPoints()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.GetActivatedSkills:": {
        "prefix": "components.skilltreeupdater:GetActivatedSkills",
        "body": "components.skilltreeupdater:GetActivatedSkills()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.ActivateSkill:": {
        "prefix": "components.skilltreeupdater:ActivateSkill",
        "body": "components.skilltreeupdater:ActivateSkill(${1:skill},${2:prefab},${3:fromrpc})",
        "description": "参数:(skill)<>[],(prefab)<>[],(fromrpc)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.CountSkillTag:": {
        "prefix": "components.skilltreeupdater:CountSkillTag",
        "body": "components.skilltreeupdater:CountSkillTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.OnLoad:": {
        "prefix": "components.skilltreeupdater:OnLoad",
        "body": "components.skilltreeupdater:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.SetSkipValidation:": {
        "prefix": "components.skilltreeupdater:SetSkipValidation",
        "body": "components.skilltreeupdater:SetSkipValidation(${1:skip})",
        "description": "参数:(skip)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.IsValidSkill:": {
        "prefix": "components.skilltreeupdater:IsValidSkill",
        "body": "components.skilltreeupdater:IsValidSkill(${1:skill})",
        "description": "参数:(skill)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.GetSkillXP:": {
        "prefix": "components.skilltreeupdater:GetSkillXP",
        "body": "components.skilltreeupdater:GetSkillXP()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.GetPlayerSkillSelection:": {
        "prefix": "components.skilltreeupdater:GetPlayerSkillSelection",
        "body": "components.skilltreeupdater:GetPlayerSkillSelection()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.AddSkillXP_Server:": {
        "prefix": "components.skilltreeupdater:AddSkillXP_Server",
        "body": "components.skilltreeupdater:AddSkillXP_Server(${1:amount},${2:total})",
        "description": "参数:(amount)<>[],(total)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.AddSkillXP_Client:": {
        "prefix": "components.skilltreeupdater:AddSkillXP_Client",
        "body": "components.skilltreeupdater:AddSkillXP_Client(${1:amount},${2:total})",
        "description": "参数:(amount)<>[],(total)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.GetNamesFromSkillSelection:": {
        "prefix": "components.skilltreeupdater:GetNamesFromSkillSelection",
        "body": "components.skilltreeupdater:GetNamesFromSkillSelection(${1:skillselection})",
        "description": "参数:(skillselection)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.DeactivateSkill:": {
        "prefix": "components.skilltreeupdater:DeactivateSkill",
        "body": "components.skilltreeupdater:DeactivateSkill(${1:skill},${2:prefab},${3:fromrpc})",
        "description": "参数:(skill)<>[],(prefab)<>[],(fromrpc)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.AddSkillXP:": {
        "prefix": "components.skilltreeupdater:AddSkillXP",
        "body": "components.skilltreeupdater:AddSkillXP(${1:amount},${2:prefab},${3:fromrpc})",
        "description": "参数:(amount)<>[],(prefab)<>[],(fromrpc)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.DeactivateSkill_Server:": {
        "prefix": "components.skilltreeupdater:DeactivateSkill_Server",
        "body": "components.skilltreeupdater:DeactivateSkill_Server(${1:skill})",
        "description": "参数:(skill)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.GetPointsForSkillXP:": {
        "prefix": "components.skilltreeupdater:GetPointsForSkillXP",
        "body": "components.skilltreeupdater:GetPointsForSkillXP(${1:skillxp})",
        "description": "参数:(skillxp)<>[] 返回值:无返回值 贡献者:@"
    },
    "skilltreeupdater.TransferComponent:": {
        "prefix": "components.skilltreeupdater:TransferComponent",
        "body": "components.skilltreeupdater:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner.SetSkinMode:": {
        "prefix": "components.skinner:SetSkinMode",
        "body": "components.skinner:SetSkinMode(${1:skintype},${2:default_build})",
        "description": "参数:(skintype)<>[],(default_build)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner.OnSave:": {
        "prefix": "components.skinner:OnSave",
        "body": "components.skinner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skinner.SetMonkeyCurse:": {
        "prefix": "components.skinner:SetMonkeyCurse",
        "body": "components.skinner:SetMonkeyCurse(${1:monkey_curse})",
        "description": "参数:(monkey_curse)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner.OnLoad:": {
        "prefix": "components.skinner:OnLoad",
        "body": "components.skinner:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner.SetSkinName:": {
        "prefix": "components.skinner:SetSkinName",
        "body": "components.skinner:SetSkinName(${1:skin_name},${2:skip_beard_setup},${3:skip_skins_set})",
        "description": "参数:(skin_name)<>[],(skip_beard_setup)<>[],(skip_skins_set)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner.HideAllClothing:": {
        "prefix": "components.skinner:HideAllClothing",
        "body": "components.skinner:HideAllClothing(${1:anim_state})",
        "description": "参数:(anim_state)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner.SetupNonPlayerData:": {
        "prefix": "components.skinner:SetupNonPlayerData",
        "body": "components.skinner:SetupNonPlayerData()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skinner.ClearClothing:": {
        "prefix": "components.skinner:ClearClothing",
        "body": "components.skinner:ClearClothing(${1:type})",
        "description": "参数:(type)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner.ClearMonkeyCurse:": {
        "prefix": "components.skinner:ClearMonkeyCurse",
        "body": "components.skinner:ClearMonkeyCurse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skinner.ClearAllClothing:": {
        "prefix": "components.skinner:ClearAllClothing",
        "body": "components.skinner:ClearAllClothing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skinner.SetClothing:": {
        "prefix": "components.skinner:SetClothing",
        "body": "components.skinner:SetClothing(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner.GetSkinMode:": {
        "prefix": "components.skinner:GetSkinMode",
        "body": "components.skinner:GetSkinMode()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skinner.GetClothing:": {
        "prefix": "components.skinner:GetClothing",
        "body": "components.skinner:GetClothing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skinner.GetMonkeyCurse:": {
        "prefix": "components.skinner:GetMonkeyCurse",
        "body": "components.skinner:GetMonkeyCurse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skinner.CopySkinsFromPlayer:": {
        "prefix": "components.skinner:CopySkinsFromPlayer",
        "body": "components.skinner:CopySkinsFromPlayer(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner_beefalo.ClearAllClothing:": {
        "prefix": "components.skinner_beefalo:ClearAllClothing",
        "body": "components.skinner_beefalo:ClearAllClothing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skinner_beefalo.reloadclothing:": {
        "prefix": "components.skinner_beefalo:reloadclothing",
        "body": "components.skinner_beefalo:reloadclothing(${1:clothing})",
        "description": "参数:(clothing)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner_beefalo.OnSave:": {
        "prefix": "components.skinner_beefalo:OnSave",
        "body": "components.skinner_beefalo:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "skinner_beefalo.SetClothing:": {
        "prefix": "components.skinner_beefalo:SetClothing",
        "body": "components.skinner_beefalo:SetClothing(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner_beefalo.ApplyTargetSkins:": {
        "prefix": "components.skinner_beefalo:ApplyTargetSkins",
        "body": "components.skinner_beefalo:ApplyTargetSkins(${1:skins},${2:player})",
        "description": "参数:(skins)<>[],(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner_beefalo.ClearClothing:": {
        "prefix": "components.skinner_beefalo:ClearClothing",
        "body": "components.skinner_beefalo:ClearClothing(${1:type})",
        "description": "参数:(type)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner_beefalo.HideAllClothing:": {
        "prefix": "components.skinner_beefalo:HideAllClothing",
        "body": "components.skinner_beefalo:HideAllClothing(${1:anim_state})",
        "description": "参数:(anim_state)<>[] 返回值:无返回值 贡献者:@"
    },
    "skinner_beefalo.GetClothing:": {
        "prefix": "components.skinner_beefalo:GetClothing",
        "body": "components.skinner_beefalo:GetClothing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.StopTesting:": {
        "prefix": "components.sleeper:StopTesting",
        "body": "components.sleeper:StopTesting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.OnEntitySleep:": {
        "prefix": "components.sleeper:OnEntitySleep",
        "body": "components.sleeper:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.SetTest:": {
        "prefix": "components.sleeper:SetTest",
        "body": "components.sleeper:SetTest(${1:fn},${2:time})",
        "description": "参数:(fn)<>[],(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleeper.OnRemoveFromEntity:": {
        "prefix": "components.sleeper:OnRemoveFromEntity",
        "body": "components.sleeper:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.SetResistance:": {
        "prefix": "components.sleeper:SetResistance",
        "body": "components.sleeper:SetResistance(${1:resist})",
        "description": "参数:(resist)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleeper.WakeUp:": {
        "prefix": "components.sleeper:WakeUp",
        "body": "components.sleeper:WakeUp()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.SetWakeTest:": {
        "prefix": "components.sleeper:SetWakeTest",
        "body": "components.sleeper:SetWakeTest(${1:fn},${2:time})",
        "description": "参数:(fn)<>[],(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleeper.AddSleepiness:": {
        "prefix": "components.sleeper:AddSleepiness",
        "body": "components.sleeper:AddSleepiness(${1:sleepiness},${2:sleeptime})",
        "description": "参数:(sleepiness)<>[],(sleeptime)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleeper.GetTimeAsleep:": {
        "prefix": "components.sleeper:GetTimeAsleep",
        "body": "components.sleeper:GetTimeAsleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.GetSleepTimeMultiplier:": {
        "prefix": "components.sleeper:GetSleepTimeMultiplier",
        "body": "components.sleeper:GetSleepTimeMultiplier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.StartTesting:": {
        "prefix": "components.sleeper:StartTesting",
        "body": "components.sleeper:StartTesting(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleeper.IsHibernating:": {
        "prefix": "components.sleeper:IsHibernating",
        "body": "components.sleeper:IsHibernating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.OnLoad:": {
        "prefix": "components.sleeper:OnLoad",
        "body": "components.sleeper:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleeper.OnEntityWake:": {
        "prefix": "components.sleeper:OnEntityWake",
        "body": "components.sleeper:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.SetDefaultTests:": {
        "prefix": "components.sleeper:SetDefaultTests",
        "body": "components.sleeper:SetDefaultTests()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.SetNocturnal:": {
        "prefix": "components.sleeper:SetNocturnal",
        "body": "components.sleeper:SetNocturnal(${1:b})",
        "description": "参数:(b)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleeper.GetTimeAwake:": {
        "prefix": "components.sleeper:GetTimeAwake",
        "body": "components.sleeper:GetTimeAwake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.GoToSleep:": {
        "prefix": "components.sleeper:GoToSleep",
        "body": "components.sleeper:GoToSleep(${1:sleeptime})",
        "description": "参数:(sleeptime)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleeper.OnSave:": {
        "prefix": "components.sleeper:OnSave",
        "body": "components.sleeper:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.SetExtraResist:": {
        "prefix": "components.sleeper:SetExtraResist",
        "body": "components.sleeper:SetExtraResist(${1:resist})",
        "description": "参数:(resist)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleeper.GetDebugString:": {
        "prefix": "components.sleeper:GetDebugString",
        "body": "components.sleeper:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.IsInDeepSleep:": {
        "prefix": "components.sleeper:IsInDeepSleep",
        "body": "components.sleeper:IsInDeepSleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.IsAsleep:": {
        "prefix": "components.sleeper:IsAsleep",
        "body": "components.sleeper:IsAsleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleeper.SetSleepTest:": {
        "prefix": "components.sleeper:SetSleepTest",
        "body": "components.sleeper:SetSleepTest(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleepingbag.SetSleepPhase:": {
        "prefix": "components.sleepingbag:SetSleepPhase",
        "body": "components.sleepingbag:SetSleepPhase(${1:phase})",
        "description": "参数:(phase)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleepingbag.DoSleep:": {
        "prefix": "components.sleepingbag:DoSleep",
        "body": "components.sleepingbag:DoSleep(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleepingbag.SetTemperatureTickFn:": {
        "prefix": "components.sleepingbag:SetTemperatureTickFn",
        "body": "components.sleepingbag:SetTemperatureTickFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleepingbag.GetSleepPhase:": {
        "prefix": "components.sleepingbag:GetSleepPhase",
        "body": "components.sleepingbag:GetSleepPhase()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleepingbag.DoWakeUp:": {
        "prefix": "components.sleepingbag:DoWakeUp",
        "body": "components.sleepingbag:DoWakeUp(${1:nostatechange})",
        "description": "参数:(nostatechange)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleepingbag.InUse:": {
        "prefix": "components.sleepingbag:InUse",
        "body": "components.sleepingbag:InUse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleepingbaguser.SleepTick:": {
        "prefix": "components.sleepingbaguser:SleepTick",
        "body": "components.sleepingbaguser:SleepTick()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleepingbaguser.DoSleep:": {
        "prefix": "components.sleepingbaguser:DoSleep",
        "body": "components.sleepingbaguser:DoSleep(${1:bed})",
        "description": "参数:(bed)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleepingbaguser.SetCanSleepFn:": {
        "prefix": "components.sleepingbaguser:SetCanSleepFn",
        "body": "components.sleepingbaguser:SetCanSleepFn(${1:cansleepfn})",
        "description": "参数:(cansleepfn)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleepingbaguser.ShouldSleep:": {
        "prefix": "components.sleepingbaguser:ShouldSleep",
        "body": "components.sleepingbaguser:ShouldSleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "sleepingbaguser.SetSanityBonusMult:": {
        "prefix": "components.sleepingbaguser:SetSanityBonusMult",
        "body": "components.sleepingbaguser:SetSanityBonusMult(${1:bonus})",
        "description": "参数:(bonus)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleepingbaguser.SetHungerBonusMult:": {
        "prefix": "components.sleepingbaguser:SetHungerBonusMult",
        "body": "components.sleepingbaguser:SetHungerBonusMult(${1:bonus})",
        "description": "参数:(bonus)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleepingbaguser.DoWakeUp:": {
        "prefix": "components.sleepingbaguser:DoWakeUp",
        "body": "components.sleepingbaguser:DoWakeUp(${1:nostatechange})",
        "description": "参数:(nostatechange)<>[] 返回值:无返回值 贡献者:@"
    },
    "sleepingbaguser.SetHealthBonusMult:": {
        "prefix": "components.sleepingbaguser:SetHealthBonusMult",
        "body": "components.sleepingbaguser:SetHealthBonusMult(${1:bonus})",
        "description": "参数:(bonus)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.DoDecay:": {
        "prefix": "components.slipperyfeet:DoDecay",
        "body": "components.slipperyfeet:DoDecay(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.DoDelta:": {
        "prefix": "components.slipperyfeet:DoDelta",
        "body": "components.slipperyfeet:DoDelta(${1:delta})",
        "description": "参数:(delta)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.SetAccumulating_Internal:": {
        "prefix": "components.slipperyfeet:SetAccumulating_Internal",
        "body": "components.slipperyfeet:SetAccumulating_Internal(${1:accumulating})",
        "description": "参数:(accumulating)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.OnRemoveFromEntity:": {
        "prefix": "components.slipperyfeet:OnRemoveFromEntity",
        "body": "components.slipperyfeet:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.CalcAccumulatingSpeed:": {
        "prefix": "components.slipperyfeet:CalcAccumulatingSpeed",
        "body": "components.slipperyfeet:CalcAccumulatingSpeed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.Stop_Internal:": {
        "prefix": "components.slipperyfeet:Stop_Internal",
        "body": "components.slipperyfeet:Stop_Internal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.StartUpdating_Internal:": {
        "prefix": "components.slipperyfeet:StartUpdating_Internal",
        "body": "components.slipperyfeet:StartUpdating_Internal(${1:reason})",
        "description": "参数:(reason)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.OnLoad:": {
        "prefix": "components.slipperyfeet:OnLoad",
        "body": "components.slipperyfeet:OnLoad()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.GetDebugString:": {
        "prefix": "components.slipperyfeet:GetDebugString",
        "body": "components.slipperyfeet:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.Start_Internal:": {
        "prefix": "components.slipperyfeet:Start_Internal",
        "body": "components.slipperyfeet:Start_Internal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.StopSlipperySource:": {
        "prefix": "components.slipperyfeet:StopSlipperySource",
        "body": "components.slipperyfeet:StopSlipperySource(${1:src},${2:key})",
        "description": "参数:(src)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.SetCurrent:": {
        "prefix": "components.slipperyfeet:SetCurrent",
        "body": "components.slipperyfeet:SetCurrent(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.OnUpdate:": {
        "prefix": "components.slipperyfeet:OnUpdate",
        "body": "components.slipperyfeet:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.StartSlipperySource:": {
        "prefix": "components.slipperyfeet:StartSlipperySource",
        "body": "components.slipperyfeet:StartSlipperySource(${1:src},${2:key})",
        "description": "参数:(src)<>[],(key)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.LongUpdate:": {
        "prefix": "components.slipperyfeet:LongUpdate",
        "body": "components.slipperyfeet:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.GetSlipperyAndNearbyEnts:": {
        "prefix": "components.slipperyfeet:GetSlipperyAndNearbyEnts",
        "body": "components.slipperyfeet:GetSlipperyAndNearbyEnts()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "slipperyfeet.StopUpdating_Internal:": {
        "prefix": "components.slipperyfeet:StopUpdating_Internal",
        "body": "components.slipperyfeet:StopUpdating_Internal(${1:reason})",
        "description": "参数:(reason)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeettarget.SetSlipperyRate:": {
        "prefix": "components.slipperyfeettarget:SetSlipperyRate",
        "body": "components.slipperyfeettarget:SetSlipperyRate(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeettarget.SetIsSlipperyAtPoint:": {
        "prefix": "components.slipperyfeettarget:SetIsSlipperyAtPoint",
        "body": "components.slipperyfeettarget:SetIsSlipperyAtPoint(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeettarget.GetSlipperyRate:": {
        "prefix": "components.slipperyfeettarget:GetSlipperyRate",
        "body": "components.slipperyfeettarget:GetSlipperyRate(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "slipperyfeettarget.OnRemoveFromEntity:": {
        "prefix": "components.slipperyfeettarget:OnRemoveFromEntity",
        "body": "components.slipperyfeettarget:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "slipperyfeettarget.IsSlipperyAtPosition:": {
        "prefix": "components.slipperyfeettarget:IsSlipperyAtPosition",
        "body": "components.slipperyfeettarget:IsSlipperyAtPosition(${1:x},${2:y},${3:z})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "souleater.EatSoul:": {
        "prefix": "components.souleater:EatSoul",
        "body": "components.souleater:EatSoul(${1:soul})",
        "description": "参数:(soul)<>[] 返回值:无返回值 贡献者:@"
    },
    "souleater.SetOnEatSoulFn:": {
        "prefix": "components.souleater:SetOnEatSoulFn",
        "body": "components.souleater:SetOnEatSoulFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.SetQueueSpawning:": {
        "prefix": "components.spawner:SetQueueSpawning",
        "body": "components.spawner:SetQueueSpawning(${1:queued},${2:retryperiod})",
        "description": "参数:(queued)<>[],(retryperiod)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.SetWaterSpawning:": {
        "prefix": "components.spawner:SetWaterSpawning",
        "body": "components.spawner:SetWaterSpawning(${1:spawn_in_water},${2:spawn_on_boats})",
        "description": "参数:(spawn_in_water)<>[],(spawn_on_boats)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.IsOccupied:": {
        "prefix": "components.spawner:IsOccupied",
        "body": "components.spawner:IsOccupied()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spawner.OnRemoveFromEntity:": {
        "prefix": "components.spawner:OnRemoveFromEntity",
        "body": "components.spawner:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spawner.Configure:": {
        "prefix": "components.spawner:Configure",
        "body": "components.spawner:Configure(${1:childname},${2:delay},${3:startdelay})",
        "description": "参数:(childname)<>[],(delay)<>[],(startdelay)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.LoadPostPass:": {
        "prefix": "components.spawner:LoadPostPass",
        "body": "components.spawner:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.IsSpawnPending:": {
        "prefix": "components.spawner:IsSpawnPending",
        "body": "components.spawner:IsSpawnPending()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spawner.CancelSpawning:": {
        "prefix": "components.spawner:CancelSpawning",
        "body": "components.spawner:CancelSpawning()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spawner.SpawnWithDelay:": {
        "prefix": "components.spawner:SpawnWithDelay",
        "body": "components.spawner:SpawnWithDelay(${1:delay})",
        "description": "参数:(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.OnLoad:": {
        "prefix": "components.spawner:OnLoad",
        "body": "components.spawner:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.GetDebugString:": {
        "prefix": "components.spawner:GetDebugString",
        "body": "components.spawner:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spawner.SetOnOccupiedFn:": {
        "prefix": "components.spawner:SetOnOccupiedFn",
        "body": "components.spawner:SetOnOccupiedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.OnChildKilled:": {
        "prefix": "components.spawner:OnChildKilled",
        "body": "components.spawner:OnChildKilled(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.SetOnVacateFn:": {
        "prefix": "components.spawner:SetOnVacateFn",
        "body": "components.spawner:SetOnVacateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.ReleaseChild:": {
        "prefix": "components.spawner:ReleaseChild",
        "body": "components.spawner:ReleaseChild()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spawner.OnSave:": {
        "prefix": "components.spawner:OnSave",
        "body": "components.spawner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spawner.TakeOwnership:": {
        "prefix": "components.spawner:TakeOwnership",
        "body": "components.spawner:TakeOwnership(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.SetOnlySpawnOffscreen:": {
        "prefix": "components.spawner:SetOnlySpawnOffscreen",
        "body": "components.spawner:SetOnlySpawnOffscreen(${1:offscreen})",
        "description": "参数:(offscreen)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawner.GoHome:": {
        "prefix": "components.spawner:GoHome",
        "body": "components.spawner:GoHome(${1:child})",
        "description": "参数:(child)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawnfader.OnUpdate:": {
        "prefix": "components.spawnfader:OnUpdate",
        "body": "components.spawnfader:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "spawnfader.Cancel:": {
        "prefix": "components.spawnfader:Cancel",
        "body": "components.spawnfader:Cancel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spawnfader.OnRemoveFromEntity:": {
        "prefix": "components.spawnfader:OnRemoveFromEntity",
        "body": "components.spawnfader:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spawnfader.FadeIn:": {
        "prefix": "components.spawnfader:FadeIn",
        "body": "components.spawnfader:FadeIn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spectatorcorpse.OnUpdate:": {
        "prefix": "components.spectatorcorpse:OnUpdate",
        "body": "components.spectatorcorpse:OnUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spell.OnTarget:": {
        "prefix": "components.spell:OnTarget",
        "body": "components.spell:OnTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spell.OnSave:": {
        "prefix": "components.spell:OnSave",
        "body": "components.spell:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spell.OnStart:": {
        "prefix": "components.spell:OnStart",
        "body": "components.spell:OnStart()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spell.StartSpell:": {
        "prefix": "components.spell:StartSpell",
        "body": "components.spell:StartSpell()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spell.SetTarget:": {
        "prefix": "components.spell:SetTarget",
        "body": "components.spell:SetTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "spell.LoadPostPass:": {
        "prefix": "components.spell:LoadPostPass",
        "body": "components.spell:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "spell.OnFinish:": {
        "prefix": "components.spell:OnFinish",
        "body": "components.spell:OnFinish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spell.SetVariables:": {
        "prefix": "components.spell:SetVariables",
        "body": "components.spell:SetVariables(${1:variables})",
        "description": "参数:(variables)<>[] 返回值:无返回值 贡献者:@"
    },
    "spell.ResumeSpell:": {
        "prefix": "components.spell:ResumeSpell",
        "body": "components.spell:ResumeSpell()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spell.OnLoad:": {
        "prefix": "components.spell:OnLoad",
        "body": "components.spell:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "spell.OnUpdate:": {
        "prefix": "components.spell:OnUpdate",
        "body": "components.spell:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.SetBgData:": {
        "prefix": "components.spellbook:SetBgData",
        "body": "components.spellbook:SetBgData(${1:bgdata})",
        "description": "参数:(bgdata)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.HasSpellFn:": {
        "prefix": "components.spellbook:HasSpellFn",
        "body": "components.spellbook:HasSpellFn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spellbook.CanBeUsedBy:": {
        "prefix": "components.spellbook:CanBeUsedBy",
        "body": "components.spellbook:CanBeUsedBy(${1:user})",
        "description": "参数:(user)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.CastSpell:": {
        "prefix": "components.spellbook:CastSpell",
        "body": "components.spellbook:CastSpell(${1:user})",
        "description": "参数:(user)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.SetOnOpenFn:": {
        "prefix": "components.spellbook:SetOnOpenFn",
        "body": "components.spellbook:SetOnOpenFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.SetSpellFn:": {
        "prefix": "components.spellbook:SetSpellFn",
        "body": "components.spellbook:SetSpellFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.SetRadius:": {
        "prefix": "components.spellbook:SetRadius",
        "body": "components.spellbook:SetRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.SetOnCloseFn:": {
        "prefix": "components.spellbook:SetOnCloseFn",
        "body": "components.spellbook:SetOnCloseFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.GetSelectedSpell:": {
        "prefix": "components.spellbook:GetSelectedSpell",
        "body": "components.spellbook:GetSelectedSpell()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spellbook.SetSpellName:": {
        "prefix": "components.spellbook:SetSpellName",
        "body": "components.spellbook:SetSpellName(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.SetRequiredTag:": {
        "prefix": "components.spellbook:SetRequiredTag",
        "body": "components.spellbook:SetRequiredTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.GetSpellName:": {
        "prefix": "components.spellbook:GetSpellName",
        "body": "components.spellbook:GetSpellName()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spellbook.SelectSpell:": {
        "prefix": "components.spellbook:SelectSpell",
        "body": "components.spellbook:SelectSpell(${1:id})",
        "description": "参数:(id)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.SetItems:": {
        "prefix": "components.spellbook:SetItems",
        "body": "components.spellbook:SetItems(${1:items})",
        "description": "参数:(items)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.OpenSpellBook:": {
        "prefix": "components.spellbook:OpenSpellBook",
        "body": "components.spellbook:OpenSpellBook(${1:user})",
        "description": "参数:(user)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbook.SetFocusRadius:": {
        "prefix": "components.spellbook:SetFocusRadius",
        "body": "components.spellbook:SetFocusRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbookcooldowns.RestartSpellCooldown:": {
        "prefix": "components.spellbookcooldowns:RestartSpellCooldown",
        "body": "components.spellbookcooldowns:RestartSpellCooldown(${1:spellname},${2:duration})",
        "description": "参数:(spellname)<>[],(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbookcooldowns.GetDebugString:": {
        "prefix": "components.spellbookcooldowns:GetDebugString",
        "body": "components.spellbookcooldowns:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spellbookcooldowns.GetSpellCooldownPercent:": {
        "prefix": "components.spellbookcooldowns:GetSpellCooldownPercent",
        "body": "components.spellbookcooldowns:GetSpellCooldownPercent(${1:spellname})",
        "description": "参数:(spellname)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbookcooldowns.StopSpellCooldown:": {
        "prefix": "components.spellbookcooldowns:StopSpellCooldown",
        "body": "components.spellbookcooldowns:StopSpellCooldown(${1:spellname})",
        "description": "参数:(spellname)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellbookcooldowns.RegisterSpellbookCooldown:": {
        "prefix": "components.spellbookcooldowns:RegisterSpellbookCooldown",
        "body": "components.spellbookcooldowns:RegisterSpellbookCooldown(${1:cd})",
        "description": "参数:(cd)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellcaster.SetSpellType:": {
        "prefix": "components.spellcaster:SetSpellType",
        "body": "components.spellcaster:SetSpellType(${1:type})",
        "description": "参数:(type)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellcaster.CastSpell:": {
        "prefix": "components.spellcaster:CastSpell",
        "body": "components.spellcaster:CastSpell(${1:target},${2:pos},${3:doer})",
        "description": "参数:(target)<>[],(pos)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellcaster.SetOnSpellCastFn:": {
        "prefix": "components.spellcaster:SetOnSpellCastFn",
        "body": "components.spellcaster:SetOnSpellCastFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellcaster.SetCanCastFn:": {
        "prefix": "components.spellcaster:SetCanCastFn",
        "body": "components.spellcaster:SetCanCastFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "spellcaster.OnRemoveFromEntity:": {
        "prefix": "components.spellcaster:OnRemoveFromEntity",
        "body": "components.spellcaster:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spellcaster.SetSpellFn:": {
        "prefix": "components.spellcaster:SetSpellFn",
        "body": "components.spellcaster:SetSpellFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "spidermutator.Mutate:": {
        "prefix": "components.spidermutator:Mutate",
        "body": "components.spidermutator:Mutate(${1:spider},${2:skip_event},${3:giver})",
        "description": "参数:(spider)<>[],(skip_event)<>[],(giver)<>[] 返回值:无返回值 贡献者:@"
    },
    "spidermutator.SetMutationTarget:": {
        "prefix": "components.spidermutator:SetMutationTarget",
        "body": "components.spidermutator:SetMutationTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "spidermutator.CanMutate:": {
        "prefix": "components.spidermutator:CanMutate",
        "body": "components.spidermutator:CanMutate(${1:spider})",
        "description": "参数:(spider)<>[] 返回值:无返回值 贡献者:@"
    },
    "spooked.GetDebugString:": {
        "prefix": "components.spooked:GetDebugString",
        "body": "components.spooked:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spooked.ShouldSpook:": {
        "prefix": "components.spooked:ShouldSpook",
        "body": "components.spooked:ShouldSpook()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "spooked.Spook:": {
        "prefix": "components.spooked:Spook",
        "body": "components.spooked:Spook(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "squadmember.JoinSquad:": {
        "prefix": "components.squadmember:JoinSquad",
        "body": "components.squadmember:JoinSquad(${1:squadname})",
        "description": "参数:(squadname)<>[] 返回值:无返回值 贡献者:@"
    },
    "squadmember.GetSquadName:": {
        "prefix": "components.squadmember:GetSquadName",
        "body": "components.squadmember:GetSquadName()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "squadmember.IsInSquad:": {
        "prefix": "components.squadmember:IsInSquad",
        "body": "components.squadmember:IsInSquad()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "squadmember.GetDebugString:": {
        "prefix": "components.squadmember:GetDebugString",
        "body": "components.squadmember:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "squadmember.LeaveSquad:": {
        "prefix": "components.squadmember:LeaveSquad",
        "body": "components.squadmember:LeaveSquad()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "squadmember.GetOtherMembers:": {
        "prefix": "components.squadmember:GetOtherMembers",
        "body": "components.squadmember:GetOtherMembers()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stackable.IsOverStacked:": {
        "prefix": "components.stackable:IsOverStacked",
        "body": "components.stackable:IsOverStacked()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stackable.Put:": {
        "prefix": "components.stackable:Put",
        "body": "components.stackable:Put(${1:item},${2:source_pos})",
        "description": "参数:(item)<>[],(source_pos)<>[] 返回值:无返回值 贡献者:@"
    },
    "stackable.OnSave:": {
        "prefix": "components.stackable:OnSave",
        "body": "components.stackable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stackable.OnLoad:": {
        "prefix": "components.stackable:OnLoad",
        "body": "components.stackable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "stackable.GetDebugString:": {
        "prefix": "components.stackable:GetDebugString",
        "body": "components.stackable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stackable.RoomLeft:": {
        "prefix": "components.stackable:RoomLeft",
        "body": "components.stackable:RoomLeft()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stackable.SetOnDeStack:": {
        "prefix": "components.stackable:SetOnDeStack",
        "body": "components.stackable:SetOnDeStack(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "stackable.IsFull:": {
        "prefix": "components.stackable:IsFull",
        "body": "components.stackable:IsFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stackable.SetIgnoreMaxSize:": {
        "prefix": "components.stackable:SetIgnoreMaxSize",
        "body": "components.stackable:SetIgnoreMaxSize(${1:ignoremaxsize})",
        "description": "参数:(ignoremaxsize)<>[] 返回值:无返回值 贡献者:@"
    },
    "stackable.StackSize:": {
        "prefix": "components.stackable:StackSize",
        "body": "components.stackable:StackSize()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stackable.IsStack:": {
        "prefix": "components.stackable:IsStack",
        "body": "components.stackable:IsStack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stackable.Get:": {
        "prefix": "components.stackable:Get",
        "body": "components.stackable:Get(${1:num})",
        "description": "参数:(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "stackable.SetStackSize:": {
        "prefix": "components.stackable:SetStackSize",
        "body": "components.stackable:SetStackSize(${1:sz})",
        "description": "参数:(sz)<>[] 返回值:无返回值 贡献者:@"
    },
    "staffsanity.DoCastingDelta:": {
        "prefix": "components.staffsanity:DoCastingDelta",
        "body": "components.staffsanity:DoCastingDelta(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "staffsanity.SetMultiplier:": {
        "prefix": "components.staffsanity:SetMultiplier",
        "body": "components.staffsanity:SetMultiplier(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.CheckCostume:": {
        "prefix": "components.stageactingprop:CheckCostume",
        "body": "components.stageactingprop:CheckCostume(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.EnableProp:": {
        "prefix": "components.stageactingprop:EnableProp",
        "body": "components.stageactingprop:EnableProp()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.FinishAct:": {
        "prefix": "components.stageactingprop:FinishAct",
        "body": "components.stageactingprop:FinishAct(${1:next_act})",
        "description": "参数:(next_act)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.DoPerformance:": {
        "prefix": "components.stageactingprop:DoPerformance",
        "body": "components.stageactingprop:DoPerformance(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.LongUpdate:": {
        "prefix": "components.stageactingprop:LongUpdate",
        "body": "components.stageactingprop:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.OnRemoveFromEntity:": {
        "prefix": "components.stageactingprop:OnRemoveFromEntity",
        "body": "components.stageactingprop:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.SetEnabledFn:": {
        "prefix": "components.stageactingprop:SetEnabledFn",
        "body": "components.stageactingprop:SetEnabledFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.SpawnBirds:": {
        "prefix": "components.stageactingprop:SpawnBirds",
        "body": "components.stageactingprop:SpawnBirds(${1:arch})",
        "description": "参数:(arch)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.LoadPostPass:": {
        "prefix": "components.stageactingprop:LoadPostPass",
        "body": "components.stageactingprop:LoadPostPass(${1:newents},${2:data})",
        "description": "参数:(newents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.CollectCast:": {
        "prefix": "components.stageactingprop:CollectCast",
        "body": "components.stageactingprop:CollectCast(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.FindScript:": {
        "prefix": "components.stageactingprop:FindScript",
        "body": "components.stageactingprop:FindScript(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.AddGeneralScript:": {
        "prefix": "components.stageactingprop:AddGeneralScript",
        "body": "components.stageactingprop:AddGeneralScript(${1:script_name},${2:script_content})",
        "description": "参数:(script_name)<>[],(script_content)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.DisableProp:": {
        "prefix": "components.stageactingprop:DisableProp",
        "body": "components.stageactingprop:DisableProp(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.EndPerformance:": {
        "prefix": "components.stageactingprop:EndPerformance",
        "body": "components.stageactingprop:EndPerformance(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.ClearPerformance:": {
        "prefix": "components.stageactingprop:ClearPerformance",
        "body": "components.stageactingprop:ClearPerformance(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.OnUpdate:": {
        "prefix": "components.stageactingprop:OnUpdate",
        "body": "components.stageactingprop:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.AddPlay:": {
        "prefix": "components.stageactingprop:AddPlay",
        "body": "components.stageactingprop:AddPlay(${1:playdata})",
        "description": "参数:(playdata)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.OnSave:": {
        "prefix": "components.stageactingprop:OnSave",
        "body": "components.stageactingprop:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.SetDisabledFn:": {
        "prefix": "components.stageactingprop:SetDisabledFn",
        "body": "components.stageactingprop:SetDisabledFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactingprop.FindCostume:": {
        "prefix": "components.stageactingprop:FindCostume",
        "body": "components.stageactingprop:FindCostume(${1:head},${2:body})",
        "description": "参数:(head)<>[],(body)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactor.IsTellingStory:": {
        "prefix": "components.stageactor:IsTellingStory",
        "body": "components.stageactor:IsTellingStory()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stageactor.SetOnStoryOverFn:": {
        "prefix": "components.stageactor:SetOnStoryOverFn",
        "body": "components.stageactor:SetOnStoryOverFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactor.OnDone:": {
        "prefix": "components.stageactor:OnDone",
        "body": "components.stageactor:OnDone()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stageactor.performplay:": {
        "prefix": "components.stageactor:performplay",
        "body": "components.stageactor:performplay()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stageactor.performedplay:": {
        "prefix": "components.stageactor:performedplay",
        "body": "components.stageactor:performedplay(${1:story_id})",
        "description": "参数:(story_id)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactor.OnRemoveFromEntity:": {
        "prefix": "components.stageactor:OnRemoveFromEntity",
        "body": "components.stageactor:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stageactor.OnLoad:": {
        "prefix": "components.stageactor:OnLoad",
        "body": "components.stageactor:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactor.TellStory:": {
        "prefix": "components.stageactor:TellStory",
        "body": "components.stageactor:TellStory(${1:storyprop},${2:story})",
        "description": "参数:(storyprop)<>[],(story)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactor.OnSave:": {
        "prefix": "components.stageactor:OnSave",
        "body": "components.stageactor:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stageactor.OnStoryTick:": {
        "prefix": "components.stageactor:OnStoryTick",
        "body": "components.stageactor:OnStoryTick()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stageactor.GetStage:": {
        "prefix": "components.stageactor:GetStage",
        "body": "components.stageactor:GetStage(${1:stage})",
        "description": "参数:(stage)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactor.SetStage:": {
        "prefix": "components.stageactor:SetStage",
        "body": "components.stageactor:SetStage(${1:stage})",
        "description": "参数:(stage)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactor.AbortStory:": {
        "prefix": "components.stageactor:AbortStory",
        "body": "components.stageactor:AbortStory(${1:reason})",
        "description": "参数:(reason)<>[] 返回值:无返回值 贡献者:@"
    },
    "stageactor.SetOnStoryBeginFn:": {
        "prefix": "components.stageactor:SetOnStoryBeginFn",
        "body": "components.stageactor:SetOnStoryBeginFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "steeringwheel.StopSteering:": {
        "prefix": "components.steeringwheel:StopSteering",
        "body": "components.steeringwheel:StopSteering()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "steeringwheel.GetDebugString:": {
        "prefix": "components.steeringwheel:GetDebugString",
        "body": "components.steeringwheel:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "steeringwheel.SetOnStartSteeringFn:": {
        "prefix": "components.steeringwheel:SetOnStartSteeringFn",
        "body": "components.steeringwheel:SetOnStartSteeringFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "steeringwheel.SetOnStopSteeringFn:": {
        "prefix": "components.steeringwheel:SetOnStopSteeringFn",
        "body": "components.steeringwheel:SetOnStopSteeringFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "steeringwheel.StartSteering:": {
        "prefix": "components.steeringwheel:StartSteering",
        "body": "components.steeringwheel:StartSteering(${1:sailor})",
        "description": "参数:(sailor)<>[] 返回值:无返回值 贡献者:@"
    },
    "steeringwheel.OnRemoveFromEntity:": {
        "prefix": "components.steeringwheel:OnRemoveFromEntity",
        "body": "components.steeringwheel:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "steeringwheeluser.SetSteeringWheel:": {
        "prefix": "components.steeringwheeluser:SetSteeringWheel",
        "body": "components.steeringwheeluser:SetSteeringWheel(${1:steering_wheel})",
        "description": "参数:(steering_wheel)<>[] 返回值:无返回值 贡献者:@"
    },
    "steeringwheeluser.SteerInDir:": {
        "prefix": "components.steeringwheeluser:SteerInDir",
        "body": "components.steeringwheeluser:SteerInDir(${1:dir_x},${2:dir_z})",
        "description": "参数:(dir_x)<>[],(dir_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "steeringwheeluser.GetBoat:": {
        "prefix": "components.steeringwheeluser:GetBoat",
        "body": "components.steeringwheeluser:GetBoat()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "steeringwheeluser.OnUpdate:": {
        "prefix": "components.steeringwheeluser:OnUpdate",
        "body": "components.steeringwheeluser:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "steeringwheeluser.Steer:": {
        "prefix": "components.steeringwheeluser:Steer",
        "body": "components.steeringwheeluser:Steer(${1:pos_x},${2:pos_z})",
        "description": "参数:(pos_x)<>[],(pos_z)<>[] 返回值:无返回值 贡献者:@"
    },
    "stewer.IsCooking:": {
        "prefix": "components.stewer:IsCooking",
        "body": "components.stewer:IsCooking()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stewer.IsSpoiling:": {
        "prefix": "components.stewer:IsSpoiling",
        "body": "components.stewer:IsSpoiling()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stewer.OnLoad:": {
        "prefix": "components.stewer:OnLoad",
        "body": "components.stewer:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "stewer.GetDebugString:": {
        "prefix": "components.stewer:GetDebugString",
        "body": "components.stewer:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stewer.IsDone:": {
        "prefix": "components.stewer:IsDone",
        "body": "components.stewer:IsDone()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stewer.OnRemoveFromEntity:": {
        "prefix": "components.stewer:OnRemoveFromEntity",
        "body": "components.stewer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stewer.LongUpdate:": {
        "prefix": "components.stewer:LongUpdate",
        "body": "components.stewer:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "stewer.Harvest:": {
        "prefix": "components.stewer:Harvest",
        "body": "components.stewer:Harvest(${1:harvester})",
        "description": "参数:(harvester)<>[] 返回值:无返回值 贡献者:@"
    },
    "stewer.GetTimeToSpoil:": {
        "prefix": "components.stewer:GetTimeToSpoil",
        "body": "components.stewer:GetTimeToSpoil()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stewer.OnSave:": {
        "prefix": "components.stewer:OnSave",
        "body": "components.stewer:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stewer.StopCooking:": {
        "prefix": "components.stewer:StopCooking",
        "body": "components.stewer:StopCooking(${1:reason})",
        "description": "参数:(reason)<>[] 返回值:无返回值 贡献者:@"
    },
    "stewer.GetTimeToCook:": {
        "prefix": "components.stewer:GetTimeToCook",
        "body": "components.stewer:GetTimeToCook()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stewer.StartCooking:": {
        "prefix": "components.stewer:StartCooking",
        "body": "components.stewer:StartCooking(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "stewer.GetRecipeForProduct:": {
        "prefix": "components.stewer:GetRecipeForProduct",
        "body": "components.stewer:GetRecipeForProduct()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stewer.CanCook:": {
        "prefix": "components.stewer:CanCook",
        "body": "components.stewer:CanCook()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stormwatcher.GetCurrentStorm:": {
        "prefix": "components.stormwatcher:GetCurrentStorm",
        "body": "components.stormwatcher:GetCurrentStorm(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "stormwatcher.CheckStorms:": {
        "prefix": "components.stormwatcher:CheckStorms",
        "body": "components.stormwatcher:CheckStorms(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "stormwatcher.GetStormLevel:": {
        "prefix": "components.stormwatcher:GetStormLevel",
        "body": "components.stormwatcher:GetStormLevel(${1:stormtype})",
        "description": "参数:(stormtype)<>[] 返回值:无返回值 贡献者:@"
    },
    "stormwatcher.UpdateStorms:": {
        "prefix": "components.stormwatcher:UpdateStorms",
        "body": "components.stormwatcher:UpdateStorms(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "stormwatcher.OnUpdate:": {
        "prefix": "components.stormwatcher:OnUpdate",
        "body": "components.stormwatcher:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "stormwatcher.UpdateStormLevel:": {
        "prefix": "components.stormwatcher:UpdateStormLevel",
        "body": "components.stormwatcher:UpdateStormLevel()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "storyteller.IsTellingStory:": {
        "prefix": "components.storyteller:IsTellingStory",
        "body": "components.storyteller:IsTellingStory()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "storyteller.SetOnStoryOverFn:": {
        "prefix": "components.storyteller:SetOnStoryOverFn",
        "body": "components.storyteller:SetOnStoryOverFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "storyteller.OnDone:": {
        "prefix": "components.storyteller:OnDone",
        "body": "components.storyteller:OnDone()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "storyteller.SetOnStoryBeginFn:": {
        "prefix": "components.storyteller:SetOnStoryBeginFn",
        "body": "components.storyteller:SetOnStoryBeginFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "storyteller.OnRemoveFromEntity:": {
        "prefix": "components.storyteller:OnRemoveFromEntity",
        "body": "components.storyteller:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "storyteller.SetStoryToTellFn:": {
        "prefix": "components.storyteller:SetStoryToTellFn",
        "body": "components.storyteller:SetStoryToTellFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "storyteller.OnStoryTick:": {
        "prefix": "components.storyteller:OnStoryTick",
        "body": "components.storyteller:OnStoryTick()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "storyteller.TellStory:": {
        "prefix": "components.storyteller:TellStory",
        "body": "components.storyteller:TellStory(${1:storyprop})",
        "description": "参数:(storyprop)<>[] 返回值:无返回值 贡献者:@"
    },
    "storyteller.AbortStory:": {
        "prefix": "components.storyteller:AbortStory",
        "body": "components.storyteller:AbortStory(${1:reason})",
        "description": "参数:(reason)<>[] 返回值:无返回值 贡献者:@"
    },
    "storytellingprop.OnRemoveFromEntity:": {
        "prefix": "components.storytellingprop:OnRemoveFromEntity",
        "body": "components.storytellingprop:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "strafer.OnRemoveFromEntity:": {
        "prefix": "components.strafer:OnRemoveFromEntity",
        "body": "components.strafer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "strafer.IsAiming:": {
        "prefix": "components.strafer:IsAiming",
        "body": "components.strafer:IsAiming()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "strafer.OnUpdate:": {
        "prefix": "components.strafer:OnUpdate",
        "body": "components.strafer:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "stretcher.OnUpdate:": {
        "prefix": "components.stretcher:OnUpdate",
        "body": "components.stretcher:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "stretcher.OnEntitySleep:": {
        "prefix": "components.stretcher:OnEntitySleep",
        "body": "components.stretcher:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stretcher.OnEntityWake:": {
        "prefix": "components.stretcher:OnEntityWake",
        "body": "components.stretcher:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stretcher.SetRestingLength:": {
        "prefix": "components.stretcher:SetRestingLength",
        "body": "components.stretcher:SetRestingLength(${1:length})",
        "description": "参数:(length)<>[] 返回值:无返回值 贡献者:@"
    },
    "stretcher.SetWidthRatio:": {
        "prefix": "components.stretcher:SetWidthRatio",
        "body": "components.stretcher:SetWidthRatio(${1:ratio})",
        "description": "参数:(ratio)<>[] 返回值:无返回值 贡献者:@"
    },
    "stretcher.SetStretchTarget:": {
        "prefix": "components.stretcher:SetStretchTarget",
        "body": "components.stretcher:SetStretchTarget(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "strongman.DoWorkout:": {
        "prefix": "components.strongman:DoWorkout",
        "body": "components.strongman:DoWorkout(${1:gym})",
        "description": "参数:(gym)<>[] 返回值:无返回值 贡献者:@"
    },
    "strongman.StopWorkout:": {
        "prefix": "components.strongman:StopWorkout",
        "body": "components.strongman:StopWorkout()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stuckdetection.SetTimeToStuck:": {
        "prefix": "components.stuckdetection:SetTimeToStuck",
        "body": "components.stuckdetection:SetTimeToStuck(${1:t})",
        "description": "参数:(t)<>[] 返回值:无返回值 贡献者:@"
    },
    "stuckdetection.Reset:": {
        "prefix": "components.stuckdetection:Reset",
        "body": "components.stuckdetection:Reset()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stuckdetection.IsStuck:": {
        "prefix": "components.stuckdetection:IsStuck",
        "body": "components.stuckdetection:IsStuck()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stunnable.GetDamageInPeriod:": {
        "prefix": "components.stunnable:GetDamageInPeriod",
        "body": "components.stunnable:GetDamageInPeriod()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "stunnable.TakeDamage:": {
        "prefix": "components.stunnable:TakeDamage",
        "body": "components.stunnable:TakeDamage(${1:damage})",
        "description": "参数:(damage)<>[] 返回值:无返回值 贡献者:@"
    },
    "stunnable.Stun:": {
        "prefix": "components.stunnable:Stun",
        "body": "components.stunnable:Stun()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "submersible.OnLanded:": {
        "prefix": "components.submersible:OnLanded",
        "body": "components.submersible:OnLanded()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "submersible.GetUnderwaterObject:": {
        "prefix": "components.submersible:GetUnderwaterObject",
        "body": "components.submersible:GetUnderwaterObject()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "submersible.OnLoad:": {
        "prefix": "components.submersible:OnLoad",
        "body": "components.submersible:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "submersible.MakeSunken:": {
        "prefix": "components.submersible:MakeSunken",
        "body": "components.submersible:MakeSunken(${1:x},${2:z},${3:ignore_boats},${4:nosplash})",
        "description": "参数:(x)<>[],(z)<>[],(ignore_boats)<>[],(nosplash)<>[] 返回值:无返回值 贡献者:@"
    },
    "submersible.Submerge:": {
        "prefix": "components.submersible:Submerge",
        "body": "components.submersible:Submerge()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "submersible.OnRemoveFromEntity:": {
        "prefix": "components.submersible:OnRemoveFromEntity",
        "body": "components.submersible:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "submersible.OnSave:": {
        "prefix": "components.submersible:OnSave",
        "body": "components.submersible:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "symbolswapdata.GetDebugString:": {
        "prefix": "components.symbolswapdata:GetDebugString",
        "body": "components.symbolswapdata:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "symbolswapdata.SetData:": {
        "prefix": "components.symbolswapdata:SetData",
        "body": "components.symbolswapdata:SetData(${1:build},${2:symbol},${3:is_skinned})",
        "description": "参数:(build)<>[],(symbol)<>[],(is_skinned)<>[] 返回值:无返回值 贡献者:@"
    },
    "tackler.SetStructureDamageMultiplier:": {
        "prefix": "components.tackler:SetStructureDamageMultiplier",
        "body": "components.tackler:SetStructureDamageMultiplier(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "tackler.SetOnStartTackleFn:": {
        "prefix": "components.tackler:SetOnStartTackleFn",
        "body": "components.tackler:SetOnStartTackleFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "tackler.SetOnCollideFn:": {
        "prefix": "components.tackler:SetOnCollideFn",
        "body": "components.tackler:SetOnCollideFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "tackler.AddWorkAction:": {
        "prefix": "components.tackler:AddWorkAction",
        "body": "components.tackler:AddWorkAction(${1:action},${2:amount})",
        "description": "参数:(action)<>[],(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "tackler.StartTackle:": {
        "prefix": "components.tackler:StartTackle",
        "body": "components.tackler:StartTackle()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "tackler.SetRadius:": {
        "prefix": "components.tackler:SetRadius",
        "body": "components.tackler:SetRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "tackler.SetEdgeDistance:": {
        "prefix": "components.tackler:SetEdgeDistance",
        "body": "components.tackler:SetEdgeDistance(${1:distance})",
        "description": "参数:(distance)<>[] 返回值:无返回值 贡献者:@"
    },
    "tackler.CheckEdge:": {
        "prefix": "components.tackler:CheckEdge",
        "body": "components.tackler:CheckEdge()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "tackler.CheckCollision:": {
        "prefix": "components.tackler:CheckCollision",
        "body": "components.tackler:CheckCollision(${1:ignores})",
        "description": "参数:(ignores)<>[] 返回值:无返回值 贡献者:@"
    },
    "tackler.SetOnTrampleFn:": {
        "prefix": "components.tackler:SetOnTrampleFn",
        "body": "components.tackler:SetOnTrampleFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "tackler.SetDistance:": {
        "prefix": "components.tackler:SetDistance",
        "body": "components.tackler:SetDistance(${1:distance})",
        "description": "参数:(distance)<>[] 返回值:无返回值 贡献者:@"
    },
    "tacklesketch.OnRemoveFromEntity:": {
        "prefix": "components.tacklesketch:OnRemoveFromEntity",
        "body": "components.tacklesketch:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "tacklesketch.Teach:": {
        "prefix": "components.tacklesketch:Teach",
        "body": "components.tacklesketch:Teach(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "talker.StopIgnoringAll:": {
        "prefix": "components.talker:StopIgnoringAll",
        "body": "components.talker:StopIgnoringAll(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "talker.ShutUp:": {
        "prefix": "components.talker:ShutUp",
        "body": "components.talker:ShutUp()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "talker.SetOffsetFn:": {
        "prefix": "components.talker:SetOffsetFn",
        "body": "components.talker:SetOffsetFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "talker.Say:": {
        "prefix": "components.talker:Say",
        "body": "components.talker:Say(${1:script},${2:time},${3:noanim},${4:force},${5:nobroadcast},${6:colour},${7:text_filter_context},${8:original_author_netid},${9:onfinishedlinesfn},${10:sgparam})",
        "description": "参数:(script)<>[],(time)<>[],(noanim)<>[],(force)<>[],(nobroadcast)<>[],(colour)<>[],(text_filter_context)<>[],(original_author_netid)<>[],(onfinishedlinesfn)<>[],(sgparam)<>[] 返回值:无返回值 贡献者:@"
    },
    "talker.IgnoreAll:": {
        "prefix": "components.talker:IgnoreAll",
        "body": "components.talker:IgnoreAll(${1:source})",
        "description": "参数:(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "talker.OnRemoveFromEntity:": {
        "prefix": "components.talker:OnRemoveFromEntity",
        "body": "components.talker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "talker.Chatter:": {
        "prefix": "components.talker:Chatter",
        "body": "components.talker:Chatter(${1:strtbl},${2:strid},${3:time},${4:forcetext},${5:echotochatpriority})",
        "description": "参数:(strtbl)<>[],(strid)<>[],(time)<>[],(forcetext)<>[],(echotochatpriority)<>[] 返回值:无返回值 贡献者:@"
    },
    "talker.MakeChatter:": {
        "prefix": "components.talker:MakeChatter",
        "body": "components.talker:MakeChatter()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "targettracker.Pause:": {
        "prefix": "components.targettracker:Pause",
        "body": "components.targettracker:Pause(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "targettracker.SetShouldKeepTrackingFn:": {
        "prefix": "components.targettracker:SetShouldKeepTrackingFn",
        "body": "components.targettracker:SetShouldKeepTrackingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "targettracker.SetOnPauseFn:": {
        "prefix": "components.targettracker:SetOnPauseFn",
        "body": "components.targettracker:SetOnPauseFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "targettracker.SetOnTimeUpdateFn:": {
        "prefix": "components.targettracker:SetOnTimeUpdateFn",
        "body": "components.targettracker:SetOnTimeUpdateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "targettracker.SetOnResetTarget:": {
        "prefix": "components.targettracker:SetOnResetTarget",
        "body": "components.targettracker:SetOnResetTarget(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "targettracker.GetTimeTracking:": {
        "prefix": "components.targettracker:GetTimeTracking",
        "body": "components.targettracker:GetTimeTracking()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "targettracker.HasTarget:": {
        "prefix": "components.targettracker:HasTarget",
        "body": "components.targettracker:HasTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "targettracker.IsCloningTarget:": {
        "prefix": "components.targettracker:IsCloningTarget",
        "body": "components.targettracker:IsCloningTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "targettracker.IsPaused:": {
        "prefix": "components.targettracker:IsPaused",
        "body": "components.targettracker:IsPaused()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "targettracker.GetDebugString:": {
        "prefix": "components.targettracker:GetDebugString",
        "body": "components.targettracker:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "targettracker.TrackTarget:": {
        "prefix": "components.targettracker:TrackTarget",
        "body": "components.targettracker:TrackTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "targettracker.SetOnResumeFn:": {
        "prefix": "components.targettracker:SetOnResumeFn",
        "body": "components.targettracker:SetOnResumeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "targettracker.CloneTargetFrom:": {
        "prefix": "components.targettracker:CloneTargetFrom",
        "body": "components.targettracker:CloneTargetFrom(${1:item},${2:pausetime})",
        "description": "参数:(item)<>[],(pausetime)<>[] 返回值:无返回值 贡献者:@"
    },
    "targettracker.OnUpdate:": {
        "prefix": "components.targettracker:OnUpdate",
        "body": "components.targettracker:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "targettracker.StopTracking:": {
        "prefix": "components.targettracker:StopTracking",
        "body": "components.targettracker:StopTracking(${1:reset})",
        "description": "参数:(reset)<>[] 返回值:无返回值 贡献者:@"
    },
    "targettracker.SetTimeTracking:": {
        "prefix": "components.targettracker:SetTimeTracking",
        "body": "components.targettracker:SetTimeTracking(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "targettracker.IsTracking:": {
        "prefix": "components.targettracker:IsTracking",
        "body": "components.targettracker:IsTracking(${1:testtarget})",
        "description": "参数:(testtarget)<>[] 返回值:无返回值 贡献者:@"
    },
    "teacher.Teach:": {
        "prefix": "components.teacher:Teach",
        "body": "components.teacher:Teach(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "teacher.SetRecipe:": {
        "prefix": "components.teacher:SetRecipe",
        "body": "components.teacher:SetRecipe(${1:recipe})",
        "description": "参数:(recipe)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamattacker.ShouldGoHome:": {
        "prefix": "components.teamattacker:ShouldGoHome",
        "body": "components.teamattacker:ShouldGoHome()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamattacker.OnEntitySleep:": {
        "prefix": "components.teamattacker:OnEntitySleep",
        "body": "components.teamattacker:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamattacker.GetDebugString:": {
        "prefix": "components.teamattacker:GetDebugString",
        "body": "components.teamattacker:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamattacker.SearchForTeam:": {
        "prefix": "components.teamattacker:SearchForTeam",
        "body": "components.teamattacker:SearchForTeam()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamattacker.GetOrders:": {
        "prefix": "components.teamattacker:GetOrders",
        "body": "components.teamattacker:GetOrders()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamattacker.OnUpdate:": {
        "prefix": "components.teamattacker:OnUpdate",
        "body": "components.teamattacker:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamattacker.OnEntityWake:": {
        "prefix": "components.teamattacker:OnEntityWake",
        "body": "components.teamattacker:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamattacker.LeaveFormation:": {
        "prefix": "components.teamattacker:LeaveFormation",
        "body": "components.teamattacker:LeaveFormation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamattacker.LeaveTeam:": {
        "prefix": "components.teamattacker:LeaveTeam",
        "body": "components.teamattacker:LeaveTeam()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamattacker.JoinFormation:": {
        "prefix": "components.teamattacker:JoinFormation",
        "body": "components.teamattacker:JoinFormation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamleader.GetTheta:": {
        "prefix": "components.teamleader:GetTheta",
        "body": "components.teamleader:GetTheta(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.DisbandTeam:": {
        "prefix": "components.teamleader:DisbandTeam",
        "body": "components.teamleader:DisbandTeam()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamleader.GiveOrdersToAllWithOrder:": {
        "prefix": "components.teamleader:GiveOrdersToAllWithOrder",
        "body": "components.teamleader:GiveOrdersToAllWithOrder(${1:order},${2:oldorder})",
        "description": "参数:(order)<>[],(oldorder)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.GetTeamSize:": {
        "prefix": "components.teamleader:GetTeamSize",
        "body": "components.teamleader:GetTeamSize()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamleader.ValidMember:": {
        "prefix": "components.teamleader:ValidMember",
        "body": "components.teamleader:ValidMember(${1:member})",
        "description": "参数:(member)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.GiveOrders:": {
        "prefix": "components.teamleader:GiveOrders",
        "body": "components.teamleader:GiveOrders(${1:order},${2:num})",
        "description": "参数:(order)<>[],(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.SetNewThreat:": {
        "prefix": "components.teamleader:SetNewThreat",
        "body": "components.teamleader:SetNewThreat(${1:threat})",
        "description": "参数:(threat)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.IsTeamEmpty:": {
        "prefix": "components.teamleader:IsTeamEmpty",
        "body": "components.teamleader:IsTeamEmpty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamleader.ManageChase:": {
        "prefix": "components.teamleader:ManageChase",
        "body": "components.teamleader:ManageChase(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.SetUp:": {
        "prefix": "components.teamleader:SetUp",
        "body": "components.teamleader:SetUp(${1:target},${2:first_member})",
        "description": "参数:(target)<>[],(first_member)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.TeamSizeControl:": {
        "prefix": "components.teamleader:TeamSizeControl",
        "body": "components.teamleader:TeamSizeControl()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamleader.SetAttackGrpSize:": {
        "prefix": "components.teamleader:SetAttackGrpSize",
        "body": "components.teamleader:SetAttackGrpSize(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.IsTeamFull:": {
        "prefix": "components.teamleader:IsTeamFull",
        "body": "components.teamleader:IsTeamFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamleader.NewTeammate:": {
        "prefix": "components.teamleader:NewTeammate",
        "body": "components.teamleader:NewTeammate(${1:member})",
        "description": "参数:(member)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.CanAttack:": {
        "prefix": "components.teamleader:CanAttack",
        "body": "components.teamleader:CanAttack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamleader.ValidateTeam:": {
        "prefix": "components.teamleader:ValidateTeam",
        "body": "components.teamleader:ValidateTeam()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamleader.NumberToAttack:": {
        "prefix": "components.teamleader:NumberToAttack",
        "body": "components.teamleader:NumberToAttack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamleader.AllInState:": {
        "prefix": "components.teamleader:AllInState",
        "body": "components.teamleader:AllInState(${1:state})",
        "description": "参数:(state)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.OnUpdate:": {
        "prefix": "components.teamleader:OnUpdate",
        "body": "components.teamleader:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.OnLostTeammate:": {
        "prefix": "components.teamleader:OnLostTeammate",
        "body": "components.teamleader:OnLostTeammate(${1:member})",
        "description": "参数:(member)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.GetFormationPositions:": {
        "prefix": "components.teamleader:GetFormationPositions",
        "body": "components.teamleader:GetFormationPositions()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teamleader.BroadcastDistress:": {
        "prefix": "components.teamleader:BroadcastDistress",
        "body": "components.teamleader:BroadcastDistress(${1:member})",
        "description": "参数:(member)<>[] 返回值:无返回值 贡献者:@"
    },
    "teamleader.CenterLeader:": {
        "prefix": "components.teamleader:CenterLeader",
        "body": "components.teamleader:CenterLeader()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teleportedoverride.GetDestPosition:": {
        "prefix": "components.teleportedoverride:GetDestPosition",
        "body": "components.teleportedoverride:GetDestPosition()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teleportedoverride.SetDestPositionFn:": {
        "prefix": "components.teleportedoverride:SetDestPositionFn",
        "body": "components.teleportedoverride:SetDestPositionFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleportedoverride.SetDestTargetFn:": {
        "prefix": "components.teleportedoverride:SetDestTargetFn",
        "body": "components.teleportedoverride:SetDestTargetFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleportedoverride.GetDestTarget:": {
        "prefix": "components.teleportedoverride:GetDestTarget",
        "body": "components.teleportedoverride:GetDestTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teleporter.OnSave:": {
        "prefix": "components.teleporter:OnSave",
        "body": "components.teleporter:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teleporter.OnRemoveFromEntity:": {
        "prefix": "components.teleporter:OnRemoveFromEntity",
        "body": "components.teleporter:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teleporter.IsBusy:": {
        "prefix": "components.teleporter:IsBusy",
        "body": "components.teleporter:IsBusy()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teleporter.Target:": {
        "prefix": "components.teleporter:Target",
        "body": "components.teleporter:Target(${1:otherTeleporter})",
        "description": "参数:(otherTeleporter)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.MigrationTarget:": {
        "prefix": "components.teleporter:MigrationTarget",
        "body": "components.teleporter:MigrationTarget(${1:worldid},${2:x},${3:y},${4:z})",
        "description": "参数:(worldid)<>[],(x)<>[],(y)<>[],(z)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.UnregisterTeleportee:": {
        "prefix": "components.teleporter:UnregisterTeleportee",
        "body": "components.teleporter:UnregisterTeleportee(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.Teleport:": {
        "prefix": "components.teleporter:Teleport",
        "body": "components.teleporter:Teleport(${1:obj})",
        "description": "参数:(obj)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.GetEnabled:": {
        "prefix": "components.teleporter:GetEnabled",
        "body": "components.teleporter:GetEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teleporter.ReceivePlayer:": {
        "prefix": "components.teleporter:ReceivePlayer",
        "body": "components.teleporter:ReceivePlayer(${1:doer},${2:source})",
        "description": "参数:(doer)<>[],(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.IsTargetBusy:": {
        "prefix": "components.teleporter:IsTargetBusy",
        "body": "components.teleporter:IsTargetBusy()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teleporter.IsActive:": {
        "prefix": "components.teleporter:IsActive",
        "body": "components.teleporter:IsActive()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teleporter.GetDebugString:": {
        "prefix": "components.teleporter:GetDebugString",
        "body": "components.teleporter:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teleporter.RegisterTeleportee:": {
        "prefix": "components.teleporter:RegisterTeleportee",
        "body": "components.teleporter:RegisterTeleportee(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.LoadPostPass:": {
        "prefix": "components.teleporter:LoadPostPass",
        "body": "components.teleporter:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.OnLoad:": {
        "prefix": "components.teleporter:OnLoad",
        "body": "components.teleporter:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.ReceiveItem:": {
        "prefix": "components.teleporter:ReceiveItem",
        "body": "components.teleporter:ReceiveItem(${1:item},${2:source})",
        "description": "参数:(item)<>[],(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.PushDoneTeleporting:": {
        "prefix": "components.teleporter:PushDoneTeleporting",
        "body": "components.teleporter:PushDoneTeleporting(${1:obj})",
        "description": "参数:(obj)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.SetEnabled:": {
        "prefix": "components.teleporter:SetEnabled",
        "body": "components.teleporter:SetEnabled(${1:enabled})",
        "description": "参数:(enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.Activate:": {
        "prefix": "components.teleporter:Activate",
        "body": "components.teleporter:Activate(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "teleporter.GetTarget:": {
        "prefix": "components.teleporter:GetTarget",
        "body": "components.teleporter:GetTarget()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "teleporter.UseTemporaryExit:": {
        "prefix": "components.teleporter:UseTemporaryExit",
        "body": "components.teleporter:UseTemporaryExit(${1:doer},${2:temporaryexit})",
        "description": "参数:(doer)<>[],(temporaryexit)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.IsOverheating:": {
        "prefix": "components.temperature:IsOverheating",
        "body": "components.temperature:IsOverheating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperature.GetMoisturePenalty:": {
        "prefix": "components.temperature:GetMoisturePenalty",
        "body": "components.temperature:GetMoisturePenalty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperature.DoDelta:": {
        "prefix": "components.temperature:DoDelta",
        "body": "components.temperature:DoDelta(${1:delta})",
        "description": "参数:(delta)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.GetInsulation:": {
        "prefix": "components.temperature:GetInsulation",
        "body": "components.temperature:GetInsulation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperature.OnRemoveFromEntity:": {
        "prefix": "components.temperature:OnRemoveFromEntity",
        "body": "components.temperature:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperature.SetTemperature:": {
        "prefix": "components.temperature:SetTemperature",
        "body": "components.temperature:SetTemperature(${1:value})",
        "description": "参数:(value)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.SetTemp:": {
        "prefix": "components.temperature:SetTemp",
        "body": "components.temperature:SetTemp(${1:temp})",
        "description": "参数:(temp)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.IsFreezing:": {
        "prefix": "components.temperature:IsFreezing",
        "body": "components.temperature:IsFreezing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperature.SetOverheatHurtRate:": {
        "prefix": "components.temperature:SetOverheatHurtRate",
        "body": "components.temperature:SetOverheatHurtRate(${1:rate})",
        "description": "参数:(rate)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.OnLoad:": {
        "prefix": "components.temperature:OnLoad",
        "body": "components.temperature:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.GetMax:": {
        "prefix": "components.temperature:GetMax",
        "body": "components.temperature:GetMax()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperature.SetFreezingHurtRate:": {
        "prefix": "components.temperature:SetFreezingHurtRate",
        "body": "components.temperature:SetFreezingHurtRate(${1:rate})",
        "description": "参数:(rate)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.OnSave:": {
        "prefix": "components.temperature:OnSave",
        "body": "components.temperature:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperature.SetModifier:": {
        "prefix": "components.temperature:SetModifier",
        "body": "components.temperature:SetModifier(${1:name},${2:value})",
        "description": "参数:(name)<>[],(value)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.SetTemperatureInBelly:": {
        "prefix": "components.temperature:SetTemperatureInBelly",
        "body": "components.temperature:SetTemperatureInBelly(${1:delta},${2:duration})",
        "description": "参数:(delta)<>[],(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.IgnoreTags:": {
        "prefix": "components.temperature:IgnoreTags",
        "body": "components.temperature:IgnoreTags(${1:...})",
        "description": "参数:(...)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.GetCurrent:": {
        "prefix": "components.temperature:GetCurrent",
        "body": "components.temperature:GetCurrent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperature.OnUpdate:": {
        "prefix": "components.temperature:OnUpdate",
        "body": "components.temperature:OnUpdate(${1:dt},${2:applyhealthdelta})",
        "description": "参数:(dt)<>[],(applyhealthdelta)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.RemoveModifier:": {
        "prefix": "components.temperature:RemoveModifier",
        "body": "components.temperature:RemoveModifier(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperature.GetDebugString:": {
        "prefix": "components.temperature:GetDebugString",
        "body": "components.temperature:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperature.TransferComponent:": {
        "prefix": "components.temperature:TransferComponent",
        "body": "components.temperature:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperatureoverrider.GetActiveRadius:": {
        "prefix": "components.temperatureoverrider:GetActiveRadius",
        "body": "components.temperatureoverrider:GetActiveRadius()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperatureoverrider.Disable:": {
        "prefix": "components.temperatureoverrider:Disable",
        "body": "components.temperatureoverrider:Disable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperatureoverrider.OnRemoveEntity:": {
        "prefix": "components.temperatureoverrider:OnRemoveEntity",
        "body": "components.temperatureoverrider:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperatureoverrider.GetTemperature:": {
        "prefix": "components.temperatureoverrider:GetTemperature",
        "body": "components.temperatureoverrider:GetTemperature()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperatureoverrider.OnRemoveFromEntity:": {
        "prefix": "components.temperatureoverrider:OnRemoveFromEntity",
        "body": "components.temperatureoverrider:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "temperatureoverrider.SetActiveRadius_Internal:": {
        "prefix": "components.temperatureoverrider:SetActiveRadius_Internal",
        "body": "components.temperatureoverrider:SetActiveRadius_Internal(${1:new},${2:old})",
        "description": "参数:(new)<>[],(old)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperatureoverrider.SetTemperature:": {
        "prefix": "components.temperatureoverrider:SetTemperature",
        "body": "components.temperatureoverrider:SetTemperature(${1:temperature})",
        "description": "参数:(temperature)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperatureoverrider.SetRadius:": {
        "prefix": "components.temperatureoverrider:SetRadius",
        "body": "components.temperatureoverrider:SetRadius(${1:radius})",
        "description": "参数:(radius)<>[] 返回值:无返回值 贡献者:@"
    },
    "temperatureoverrider.Enable:": {
        "prefix": "components.temperatureoverrider:Enable",
        "body": "components.temperatureoverrider:Enable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "terraformer.Terraform:": {
        "prefix": "components.terraformer:Terraform",
        "body": "components.terraformer:Terraform(${1:pt},${2:doer})",
        "description": "参数:(pt)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "thief.StealItem:": {
        "prefix": "components.thief:StealItem",
        "body": "components.thief:StealItem(${1:victim},${2:itemtosteal},${3:attack})",
        "description": "参数:(victim)<>[],(itemtosteal)<>[],(attack)<>[] 返回值:无返回值 贡献者:@"
    },
    "thief.SetOnStolenFn:": {
        "prefix": "components.thief:SetOnStolenFn",
        "body": "components.thief:SetOnStolenFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.TransferComponent:": {
        "prefix": "components.timer:TransferComponent",
        "body": "components.timer:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.IsPaused:": {
        "prefix": "components.timer:IsPaused",
        "body": "components.timer:IsPaused(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.SetTimeLeft:": {
        "prefix": "components.timer:SetTimeLeft",
        "body": "components.timer:SetTimeLeft(${1:name},${2:time})",
        "description": "参数:(name)<>[],(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.GetDebugString:": {
        "prefix": "components.timer:GetDebugString",
        "body": "components.timer:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "timer.StopTimer:": {
        "prefix": "components.timer:StopTimer",
        "body": "components.timer:StopTimer(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.OnRemoveFromEntity:": {
        "prefix": "components.timer:OnRemoveFromEntity",
        "body": "components.timer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "timer.PauseTimer:": {
        "prefix": "components.timer:PauseTimer",
        "body": "components.timer:PauseTimer(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.LongUpdate:": {
        "prefix": "components.timer:LongUpdate",
        "body": "components.timer:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.OnLoad:": {
        "prefix": "components.timer:OnLoad",
        "body": "components.timer:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.StartTimer:": {
        "prefix": "components.timer:StartTimer",
        "body": "components.timer:StartTimer(${1:name},${2:time},${3:paused},${4:initialtime_override})",
        "description": "参数:(name)<>[],(time)<>[],(paused)<>[],(initialtime_override)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.OnSave:": {
        "prefix": "components.timer:OnSave",
        "body": "components.timer:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "timer.ResumeTimer:": {
        "prefix": "components.timer:ResumeTimer",
        "body": "components.timer:ResumeTimer(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.GetTimeLeft:": {
        "prefix": "components.timer:GetTimeLeft",
        "body": "components.timer:GetTimeLeft(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.GetTimeElapsed:": {
        "prefix": "components.timer:GetTimeElapsed",
        "body": "components.timer:GetTimeElapsed(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "timer.TimerExists:": {
        "prefix": "components.timer:TimerExists",
        "body": "components.timer:TimerExists(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "toggleableitem.CanInteract:": {
        "prefix": "components.toggleableitem:CanInteract",
        "body": "components.toggleableitem:CanInteract(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "toggleableitem.ToggleItem:": {
        "prefix": "components.toggleableitem:ToggleItem",
        "body": "components.toggleableitem:ToggleItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "toggleableitem.SetOnToggleFn:": {
        "prefix": "components.toggleableitem:SetOnToggleFn",
        "body": "components.toggleableitem:SetOnToggleFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "tool.CanDoAction:": {
        "prefix": "components.tool:CanDoAction",
        "body": "components.tool:CanDoAction(${1:action})",
        "description": "参数:(action)<>[] 返回值:无返回值 贡献者:@"
    },
    "tool.EnableToughWork:": {
        "prefix": "components.tool:EnableToughWork",
        "body": "components.tool:EnableToughWork(${1:tough})",
        "description": "参数:(tough)<>[] 返回值:无返回值 贡献者:@"
    },
    "tool.CanDoToughWork:": {
        "prefix": "components.tool:CanDoToughWork",
        "body": "components.tool:CanDoToughWork()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "tool.SetAction:": {
        "prefix": "components.tool:SetAction",
        "body": "components.tool:SetAction(${1:action},${2:effectiveness})",
        "description": "参数:(action)<>[],(effectiveness)<>[] 返回值:无返回值 贡献者:@"
    },
    "tool.OnRemoveFromEntity:": {
        "prefix": "components.tool:OnRemoveFromEntity",
        "body": "components.tool:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "tool.GetEffectiveness:": {
        "prefix": "components.tool:GetEffectiveness",
        "body": "components.tool:GetEffectiveness(${1:action})",
        "description": "参数:(action)<>[] 返回值:无返回值 贡献者:@"
    },
    "touchstonetracker.OnSave:": {
        "prefix": "components.touchstonetracker:OnSave",
        "body": "components.touchstonetracker:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "touchstonetracker.OnLoad:": {
        "prefix": "components.touchstonetracker:OnLoad",
        "body": "components.touchstonetracker:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "touchstonetracker.GetDebugString:": {
        "prefix": "components.touchstonetracker:GetDebugString",
        "body": "components.touchstonetracker:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "touchstonetracker.IsUsed:": {
        "prefix": "components.touchstonetracker:IsUsed",
        "body": "components.touchstonetracker:IsUsed(${1:touchstone})",
        "description": "参数:(touchstone)<>[] 返回值:无返回值 贡献者:@"
    },
    "touchstonetracker.OnRemoveFromEntity:": {
        "prefix": "components.touchstonetracker:OnRemoveFromEntity",
        "body": "components.touchstonetracker:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "touchstonetracker.TransferComponent:": {
        "prefix": "components.touchstonetracker:TransferComponent",
        "body": "components.touchstonetracker:TransferComponent(${1:newinst})",
        "description": "参数:(newinst)<>[] 返回值:无返回值 贡献者:@"
    },
    "trader.SetAcceptStacks:": {
        "prefix": "components.trader:SetAcceptStacks",
        "body": "components.trader:SetAcceptStacks()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trader.IsTryingToTradeWithMe:": {
        "prefix": "components.trader:IsTryingToTradeWithMe",
        "body": "components.trader:IsTryingToTradeWithMe(${1:inst})",
        "description": "参数:(inst)<>[] 返回值:无返回值 贡献者:@"
    },
    "trader.Disable:": {
        "prefix": "components.trader:Disable",
        "body": "components.trader:Disable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trader.GetDebugString:": {
        "prefix": "components.trader:GetDebugString",
        "body": "components.trader:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trader.OnRemoveFromEntity:": {
        "prefix": "components.trader:OnRemoveFromEntity",
        "body": "components.trader:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trader.AcceptGift:": {
        "prefix": "components.trader:AcceptGift",
        "body": "components.trader:AcceptGift(${1:giver},${2:item},${3:count})",
        "description": "参数:(giver)<>[],(item)<>[],(count)<>[] 返回值:无返回值 贡献者:@"
    },
    "trader.SetOnAccept:": {
        "prefix": "components.trader:SetOnAccept",
        "body": "components.trader:SetOnAccept(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "trader.WantsToAccept:": {
        "prefix": "components.trader:WantsToAccept",
        "body": "components.trader:WantsToAccept(${1:item},${2:giver},${3:count})",
        "description": "参数:(item)<>[],(giver)<>[],(count)<>[] 返回值:无返回值 贡献者:@"
    },
    "trader.AbleToAccept:": {
        "prefix": "components.trader:AbleToAccept",
        "body": "components.trader:AbleToAccept(${1:item},${2:giver},${3:count})",
        "description": "参数:(item)<>[],(giver)<>[],(count)<>[] 返回值:无返回值 贡献者:@"
    },
    "trader.SetAcceptTest:": {
        "prefix": "components.trader:SetAcceptTest",
        "body": "components.trader:SetAcceptTest(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "trader.SetOnRefuse:": {
        "prefix": "components.trader:SetOnRefuse",
        "body": "components.trader:SetOnRefuse(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "trader.IsAcceptingStacks:": {
        "prefix": "components.trader:IsAcceptingStacks",
        "body": "components.trader:IsAcceptingStacks()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trader.SetAbleToAcceptTest:": {
        "prefix": "components.trader:SetAbleToAcceptTest",
        "body": "components.trader:SetAbleToAcceptTest(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "trader.Enable:": {
        "prefix": "components.trader:Enable",
        "body": "components.trader:Enable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transformer.StartTransform:": {
        "prefix": "components.transformer:StartTransform",
        "body": "components.transformer:StartTransform()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transformer.GetObjectData:": {
        "prefix": "components.transformer:GetObjectData",
        "body": "components.transformer:GetObjectData()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transformer.SetOnTransformFn:": {
        "prefix": "components.transformer:SetOnTransformFn",
        "body": "components.transformer:SetOnTransformFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "transformer.SetOnRevertFn:": {
        "prefix": "components.transformer:SetOnRevertFn",
        "body": "components.transformer:SetOnRevertFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "transformer.Transform:": {
        "prefix": "components.transformer:Transform",
        "body": "components.transformer:Transform()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transformer.SetObjectData:": {
        "prefix": "components.transformer:SetObjectData",
        "body": "components.transformer:SetObjectData(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "transformer.RemoveSleepEvents:": {
        "prefix": "components.transformer:RemoveSleepEvents",
        "body": "components.transformer:RemoveSleepEvents()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transformer.OnLoad:": {
        "prefix": "components.transformer:OnLoad",
        "body": "components.transformer:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "transformer.GetDebugString:": {
        "prefix": "components.transformer:GetDebugString",
        "body": "components.transformer:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transformer.LoadPostPass:": {
        "prefix": "components.transformer:LoadPostPass",
        "body": "components.transformer:LoadPostPass(${1:ents},${2:data})",
        "description": "参数:(ents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "transformer.OnSave:": {
        "prefix": "components.transformer:OnSave",
        "body": "components.transformer:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transformer.SetRevertWorldEvent:": {
        "prefix": "components.transformer:SetRevertWorldEvent",
        "body": "components.transformer:SetRevertWorldEvent(${1:event},${2:value})",
        "description": "参数:(event)<>[],(value)<>[] 返回值:无返回值 贡献者:@"
    },
    "transformer.StartRevert:": {
        "prefix": "components.transformer:StartRevert",
        "body": "components.transformer:StartRevert()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transformer.RevertOnSleep:": {
        "prefix": "components.transformer:RevertOnSleep",
        "body": "components.transformer:RevertOnSleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transformer.SetTransformEvent:": {
        "prefix": "components.transformer:SetTransformEvent",
        "body": "components.transformer:SetTransformEvent(${1:event},${2:target})",
        "description": "参数:(event)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "transformer.Revert:": {
        "prefix": "components.transformer:Revert",
        "body": "components.transformer:Revert()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transformer.SetOnLoadCheck:": {
        "prefix": "components.transformer:SetOnLoadCheck",
        "body": "components.transformer:SetOnLoadCheck(${1:check})",
        "description": "参数:(check)<>[] 返回值:无返回值 贡献者:@"
    },
    "transformer.TransformOnSleep:": {
        "prefix": "components.transformer:TransformOnSleep",
        "body": "components.transformer:TransformOnSleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transformer.SetTransformWorldEvent:": {
        "prefix": "components.transformer:SetTransformWorldEvent",
        "body": "components.transformer:SetTransformWorldEvent(${1:event},${2:value})",
        "description": "参数:(event)<>[],(value)<>[] 返回值:无返回值 贡献者:@"
    },
    "transformer.SetRevertEvent:": {
        "prefix": "components.transformer:SetRevertEvent",
        "body": "components.transformer:SetRevertEvent(${1:event},${2:target})",
        "description": "参数:(event)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "transparentonsanity.CalcaulteTargetAlpha:": {
        "prefix": "components.transparentonsanity:CalcaulteTargetAlpha",
        "body": "components.transparentonsanity:CalcaulteTargetAlpha()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transparentonsanity.GetDebugString:": {
        "prefix": "components.transparentonsanity:GetDebugString",
        "body": "components.transparentonsanity:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transparentonsanity.OnEntitySleep:": {
        "prefix": "components.transparentonsanity:OnEntitySleep",
        "body": "components.transparentonsanity:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transparentonsanity.OnEntityWake:": {
        "prefix": "components.transparentonsanity:OnEntityWake",
        "body": "components.transparentonsanity:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transparentonsanity.DoUpdate:": {
        "prefix": "components.transparentonsanity:DoUpdate",
        "body": "components.transparentonsanity:DoUpdate(${1:dt},${2:force})",
        "description": "参数:(dt)<>[],(force)<>[] 返回值:无返回值 贡献者:@"
    },
    "transparentonsanity.ForceUpdate:": {
        "prefix": "components.transparentonsanity:ForceUpdate",
        "body": "components.transparentonsanity:ForceUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "transparentonsanity.OnUpdate:": {
        "prefix": "components.transparentonsanity:OnUpdate",
        "body": "components.transparentonsanity:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "trap.OnSave:": {
        "prefix": "components.trap:OnSave",
        "body": "components.trap:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.StartUpdate:": {
        "prefix": "components.trap:StartUpdate",
        "body": "components.trap:StartUpdate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.OnRemoveFromEntity:": {
        "prefix": "components.trap:OnRemoveFromEntity",
        "body": "components.trap:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.OnTrappedStarve:": {
        "prefix": "components.trap:OnTrappedStarve",
        "body": "components.trap:OnTrappedStarve()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.HasLoot:": {
        "prefix": "components.trap:HasLoot",
        "body": "components.trap:HasLoot()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.OnLoad:": {
        "prefix": "components.trap:OnLoad",
        "body": "components.trap:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "trap.LoadPostPass:": {
        "prefix": "components.trap:LoadPostPass",
        "body": "components.trap:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "trap.OnEntitySleep:": {
        "prefix": "components.trap:OnEntitySleep",
        "body": "components.trap:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.StopStarvation:": {
        "prefix": "components.trap:StopStarvation",
        "body": "components.trap:StopStarvation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.SetOnSpringFn:": {
        "prefix": "components.trap:SetOnSpringFn",
        "body": "components.trap:SetOnSpringFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "trap.IsSprung:": {
        "prefix": "components.trap:IsSprung",
        "body": "components.trap:IsSprung()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.IsFree:": {
        "prefix": "components.trap:IsFree",
        "body": "components.trap:IsFree()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.IsBaited:": {
        "prefix": "components.trap:IsBaited",
        "body": "components.trap:IsBaited()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.SetBait:": {
        "prefix": "components.trap:SetBait",
        "body": "components.trap:SetBait(${1:bait})",
        "description": "参数:(bait)<>[] 返回值:无返回值 贡献者:@"
    },
    "trap.SetOnBaitedFn:": {
        "prefix": "components.trap:SetOnBaitedFn",
        "body": "components.trap:SetOnBaitedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "trap.DoSpring:": {
        "prefix": "components.trap:DoSpring",
        "body": "components.trap:DoSpring()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.GetDebugString:": {
        "prefix": "components.trap:GetDebugString",
        "body": "components.trap:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.SetOnHarvestFn:": {
        "prefix": "components.trap:SetOnHarvestFn",
        "body": "components.trap:SetOnHarvestFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "trap.RemoveBait:": {
        "prefix": "components.trap:RemoveBait",
        "body": "components.trap:RemoveBait()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.Harvest:": {
        "prefix": "components.trap:Harvest",
        "body": "components.trap:Harvest(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "trap.AcceptingBait:": {
        "prefix": "components.trap:AcceptingBait",
        "body": "components.trap:AcceptingBait()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.Reset:": {
        "prefix": "components.trap:Reset",
        "body": "components.trap:Reset(${1:sprung})",
        "description": "参数:(sprung)<>[] 返回值:无返回值 贡献者:@"
    },
    "trap.StopUpdating:": {
        "prefix": "components.trap:StopUpdating",
        "body": "components.trap:StopUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.OnUpdate:": {
        "prefix": "components.trap:OnUpdate",
        "body": "components.trap:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "trap.OnEntityWake:": {
        "prefix": "components.trap:OnEntityWake",
        "body": "components.trap:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.BaitTaken:": {
        "prefix": "components.trap:BaitTaken",
        "body": "components.trap:BaitTaken(${1:eater})",
        "description": "参数:(eater)<>[] 返回值:无返回值 贡献者:@"
    },
    "trap.Set:": {
        "prefix": "components.trap:Set",
        "body": "components.trap:Set()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trap.StartStarvation:": {
        "prefix": "components.trap:StartStarvation",
        "body": "components.trap:StartStarvation()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "treasuremarked.TurnOn:": {
        "prefix": "components.treasuremarked:TurnOn",
        "body": "components.treasuremarked:TurnOn()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "treasuremarked.TurnOff:": {
        "prefix": "components.treasuremarked:TurnOff",
        "body": "components.treasuremarked:TurnOff()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "treasuremarked.LoadPostPass:": {
        "prefix": "components.treasuremarked:LoadPostPass",
        "body": "components.treasuremarked:LoadPostPass(${1:ents},${2:data})",
        "description": "参数:(ents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "treasuremarked.OnRemoveFromEntity:": {
        "prefix": "components.treasuremarked:OnRemoveFromEntity",
        "body": "components.treasuremarked:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "treasuremarked.OnSave:": {
        "prefix": "components.treasuremarked:OnSave",
        "body": "components.treasuremarked:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "treegrowthsolution.GrowTarget:": {
        "prefix": "components.treegrowthsolution:GrowTarget",
        "body": "components.treegrowthsolution:GrowTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "tributable.HasPendingReward:": {
        "prefix": "components.tributable:HasPendingReward",
        "body": "components.tributable:HasPendingReward()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "tributable.OnSave:": {
        "prefix": "components.tributable:OnSave",
        "body": "components.tributable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "tributable.OnLoad:": {
        "prefix": "components.tributable:OnLoad",
        "body": "components.tributable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "tributable.GetDebugString:": {
        "prefix": "components.tributable:GetDebugString",
        "body": "components.tributable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "tributable.OnAccept:": {
        "prefix": "components.tributable:OnAccept",
        "body": "components.tributable:OnAccept(${1:value},${2:tributer})",
        "description": "参数:(value)<>[],(tributer)<>[] 返回值:无返回值 贡献者:@"
    },
    "tributable.OnRefuse:": {
        "prefix": "components.tributable:OnRefuse",
        "body": "components.tributable:OnRefuse()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trophyscale.SetOnSpawnItemFromDataFn:": {
        "prefix": "components.trophyscale:SetOnSpawnItemFromDataFn",
        "body": "components.trophyscale:SetOnSpawnItemFromDataFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "trophyscale.Compare:": {
        "prefix": "components.trophyscale:Compare",
        "body": "components.trophyscale:Compare(${1:inst_compare},${2:doer})",
        "description": "参数:(inst_compare)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "trophyscale.SetOnItemTakenFn:": {
        "prefix": "components.trophyscale:SetOnItemTakenFn",
        "body": "components.trophyscale:SetOnItemTakenFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "trophyscale.GetDebugString:": {
        "prefix": "components.trophyscale:GetDebugString",
        "body": "components.trophyscale:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trophyscale.OnRemoveFromEntity:": {
        "prefix": "components.trophyscale:OnRemoveFromEntity",
        "body": "components.trophyscale:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trophyscale.SetTakeItemTestFn:": {
        "prefix": "components.trophyscale:SetTakeItemTestFn",
        "body": "components.trophyscale:SetTakeItemTestFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "trophyscale.OnLoad:": {
        "prefix": "components.trophyscale:OnLoad",
        "body": "components.trophyscale:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "trophyscale.SetItemCanBeTaken:": {
        "prefix": "components.trophyscale:SetItemCanBeTaken",
        "body": "components.trophyscale:SetItemCanBeTaken(${1:can_be_taken})",
        "description": "参数:(can_be_taken)<>[] 返回值:无返回值 贡献者:@"
    },
    "trophyscale.SetComparePostFn:": {
        "prefix": "components.trophyscale:SetComparePostFn",
        "body": "components.trophyscale:SetComparePostFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "trophyscale.OnSave:": {
        "prefix": "components.trophyscale:OnSave",
        "body": "components.trophyscale:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trophyscale.SpawnItemFromData:": {
        "prefix": "components.trophyscale:SpawnItemFromData",
        "body": "components.trophyscale:SpawnItemFromData(${1:override_data})",
        "description": "参数:(override_data)<>[] 返回值:无返回值 贡献者:@"
    },
    "trophyscale.TakeItem:": {
        "prefix": "components.trophyscale:TakeItem",
        "body": "components.trophyscale:TakeItem(${1:receiver})",
        "description": "参数:(receiver)<>[] 返回值:无返回值 贡献者:@"
    },
    "trophyscale.ClearItemData:": {
        "prefix": "components.trophyscale:ClearItemData",
        "body": "components.trophyscale:ClearItemData()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "trophyscale.GetItemData:": {
        "prefix": "components.trophyscale:GetItemData",
        "body": "components.trophyscale:GetItemData()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "uianim.CancelTintTo:": {
        "prefix": "components.uianim:CancelTintTo",
        "body": "components.uianim:CancelTintTo(${1:run_complete_fn})",
        "description": "参数:(run_complete_fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "uianim.ScaleTo:": {
        "prefix": "components.uianim:ScaleTo",
        "body": "components.uianim:ScaleTo(${1:start},${2:dest},${3:duration},${4:whendone})",
        "description": "参数:(start)<>[],(dest)<>[],(duration)<>[],(whendone)<>[] 返回值:无返回值 贡献者:@"
    },
    "uianim.CancelMoveTo:": {
        "prefix": "components.uianim:CancelMoveTo",
        "body": "components.uianim:CancelMoveTo(${1:run_complete_fn})",
        "description": "参数:(run_complete_fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "uianim.FinishCurrentTint:": {
        "prefix": "components.uianim:FinishCurrentTint",
        "body": "components.uianim:FinishCurrentTint()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "uianim.UpdateWhilePaused:": {
        "prefix": "components.uianim:UpdateWhilePaused",
        "body": "components.uianim:UpdateWhilePaused(${1:update_while_paused})",
        "description": "参数:(update_while_paused)<>[] 返回值:无返回值 贡献者:@"
    },
    "uianim.CancelRotateTo:": {
        "prefix": "components.uianim:CancelRotateTo",
        "body": "components.uianim:CancelRotateTo(${1:run_complete_fn})",
        "description": "参数:(run_complete_fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "uianim.MoveTo:": {
        "prefix": "components.uianim:MoveTo",
        "body": "components.uianim:MoveTo(${1:start},${2:dest},${3:duration},${4:whendone})",
        "description": "参数:(start)<>[],(dest)<>[],(duration)<>[],(whendone)<>[] 返回值:无返回值 贡献者:@"
    },
    "uianim.RotateTo:": {
        "prefix": "components.uianim:RotateTo",
        "body": "components.uianim:RotateTo(${1:start},${2:dest},${3:duration},${4:whendone},${5:infinite})",
        "description": "参数:(start)<>[],(dest)<>[],(duration)<>[],(whendone)<>[],(infinite)<>[] 返回值:无返回值 贡献者:@"
    },
    "uianim.FinishCurrentScale:": {
        "prefix": "components.uianim:FinishCurrentScale",
        "body": "components.uianim:FinishCurrentScale()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "uianim.OnWallUpdate:": {
        "prefix": "components.uianim:OnWallUpdate",
        "body": "components.uianim:OnWallUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "uianim.CancelScaleTo:": {
        "prefix": "components.uianim:CancelScaleTo",
        "body": "components.uianim:CancelScaleTo(${1:run_complete_fn})",
        "description": "参数:(run_complete_fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "uianim.TintTo:": {
        "prefix": "components.uianim:TintTo",
        "body": "components.uianim:TintTo(${1:start},${2:dest},${3:duration},${4:whendone})",
        "description": "参数:(start)<>[],(dest)<>[],(duration)<>[],(whendone)<>[] 返回值:无返回值 贡献者:@"
    },
    "unevenground.Start:": {
        "prefix": "components.unevenground:Start",
        "body": "components.unevenground:Start()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "unevenground.Disable:": {
        "prefix": "components.unevenground:Disable",
        "body": "components.unevenground:Disable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "unevenground.OnEntityWake:": {
        "prefix": "components.unevenground:OnEntityWake",
        "body": "components.unevenground:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "unevenground.Stop:": {
        "prefix": "components.unevenground:Stop",
        "body": "components.unevenground:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "unevenground.Enable:": {
        "prefix": "components.unevenground:Enable",
        "body": "components.unevenground:Enable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "uniqueid.GetDebugString:": {
        "prefix": "components.uniqueid:GetDebugString",
        "body": "components.uniqueid:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "uniqueid.OnSave:": {
        "prefix": "components.uniqueid:OnSave",
        "body": "components.uniqueid:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "uniqueid.OnLoad:": {
        "prefix": "components.uniqueid:OnLoad",
        "body": "components.uniqueid:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "uniqueprefabids.GetNextID:": {
        "prefix": "components.uniqueprefabids:GetNextID",
        "body": "components.uniqueprefabids:GetNextID(${1:prefabname})",
        "description": "参数:(prefabname)<>[] 返回值:无返回值 贡献者:@"
    },
    "uniqueprefabids.GetDebugString:": {
        "prefix": "components.uniqueprefabids:GetDebugString",
        "body": "components.uniqueprefabids:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "uniqueprefabids.OnSave:": {
        "prefix": "components.uniqueprefabids:OnSave",
        "body": "components.uniqueprefabids:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "uniqueprefabids.OnLoad:": {
        "prefix": "components.uniqueprefabids:OnLoad",
        "body": "components.uniqueprefabids:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "unwrappable.WrapItems:": {
        "prefix": "components.unwrappable:WrapItems",
        "body": "components.unwrappable:WrapItems(${1:items},${2:doer})",
        "description": "参数:(items)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "unwrappable.OnSave:": {
        "prefix": "components.unwrappable:OnSave",
        "body": "components.unwrappable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "unwrappable.SetOnWrappedFn:": {
        "prefix": "components.unwrappable:SetOnWrappedFn",
        "body": "components.unwrappable:SetOnWrappedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "unwrappable.SetOnUnwrappedFn:": {
        "prefix": "components.unwrappable:SetOnUnwrappedFn",
        "body": "components.unwrappable:SetOnUnwrappedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "unwrappable.OnLoad:": {
        "prefix": "components.unwrappable:OnLoad",
        "body": "components.unwrappable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "unwrappable.Unwrap:": {
        "prefix": "components.unwrappable:Unwrap",
        "body": "components.unwrappable:Unwrap(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "updatelooper.AddPostUpdateFn:": {
        "prefix": "components.updatelooper:AddPostUpdateFn",
        "body": "components.updatelooper:AddPostUpdateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "updatelooper.RemoveOnWallUpdateFn:": {
        "prefix": "components.updatelooper:RemoveOnWallUpdateFn",
        "body": "components.updatelooper:RemoveOnWallUpdateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "updatelooper.RemoveOnUpdateFn:": {
        "prefix": "components.updatelooper:RemoveOnUpdateFn",
        "body": "components.updatelooper:RemoveOnUpdateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "updatelooper.OnRemoveEntity:": {
        "prefix": "components.updatelooper:OnRemoveEntity",
        "body": "components.updatelooper:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "updatelooper.LongUpdate:": {
        "prefix": "components.updatelooper:LongUpdate",
        "body": "components.updatelooper:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "updatelooper.AddOnUpdateFn:": {
        "prefix": "components.updatelooper:AddOnUpdateFn",
        "body": "components.updatelooper:AddOnUpdateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "updatelooper.OnRemoveFromEntity:": {
        "prefix": "components.updatelooper:OnRemoveFromEntity",
        "body": "components.updatelooper:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "updatelooper.RemovePostUpdateFn:": {
        "prefix": "components.updatelooper:RemovePostUpdateFn",
        "body": "components.updatelooper:RemovePostUpdateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "updatelooper.OnUpdate:": {
        "prefix": "components.updatelooper:OnUpdate",
        "body": "components.updatelooper:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "updatelooper.AddOnWallUpdateFn:": {
        "prefix": "components.updatelooper:AddOnWallUpdateFn",
        "body": "components.updatelooper:AddOnWallUpdateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "updatelooper.OnWallUpdate:": {
        "prefix": "components.updatelooper:OnWallUpdate",
        "body": "components.updatelooper:OnWallUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "updatelooper.RemoveLongUpdateFn:": {
        "prefix": "components.updatelooper:RemoveLongUpdateFn",
        "body": "components.updatelooper:RemoveLongUpdateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "updatelooper.AddLongUpdateFn:": {
        "prefix": "components.updatelooper:AddLongUpdateFn",
        "body": "components.updatelooper:AddLongUpdateFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgradeable.SetStage:": {
        "prefix": "components.upgradeable:SetStage",
        "body": "components.upgradeable:SetStage(${1:num})",
        "description": "参数:(num)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgradeable.SetCanUpgradeFn:": {
        "prefix": "components.upgradeable:SetCanUpgradeFn",
        "body": "components.upgradeable:SetCanUpgradeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgradeable.OnSave:": {
        "prefix": "components.upgradeable:OnSave",
        "body": "components.upgradeable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgradeable.Upgrade:": {
        "prefix": "components.upgradeable:Upgrade",
        "body": "components.upgradeable:Upgrade(${1:obj},${2:upgrade_performer})",
        "description": "参数:(obj)<>[],(upgrade_performer)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgradeable.CanUpgrade:": {
        "prefix": "components.upgradeable:CanUpgrade",
        "body": "components.upgradeable:CanUpgrade()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgradeable.SetOnUpgradeFn:": {
        "prefix": "components.upgradeable:SetOnUpgradeFn",
        "body": "components.upgradeable:SetOnUpgradeFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgradeable.GetStage:": {
        "prefix": "components.upgradeable:GetStage",
        "body": "components.upgradeable:GetStage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgradeable.OnLoad:": {
        "prefix": "components.upgradeable:OnLoad",
        "body": "components.upgradeable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgradeable.AdvanceStage:": {
        "prefix": "components.upgradeable:AdvanceStage",
        "body": "components.upgradeable:AdvanceStage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademodule.TryActivate:": {
        "prefix": "components.upgrademodule:TryActivate",
        "body": "components.upgrademodule:TryActivate(${1:isloading})",
        "description": "参数:(isloading)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrademodule.SetTarget:": {
        "prefix": "components.upgrademodule:SetTarget",
        "body": "components.upgrademodule:SetTarget(${1:target})",
        "description": "参数:(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrademodule.RemoveFromOwner:": {
        "prefix": "components.upgrademodule:RemoveFromOwner",
        "body": "components.upgrademodule:RemoveFromOwner()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademodule.TryDeactivate:": {
        "prefix": "components.upgrademodule:TryDeactivate",
        "body": "components.upgrademodule:TryDeactivate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademodule.SetRequiredSlots:": {
        "prefix": "components.upgrademodule:SetRequiredSlots",
        "body": "components.upgrademodule:SetRequiredSlots(${1:slots})",
        "description": "参数:(slots)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.OnSave:": {
        "prefix": "components.upgrademoduleowner:OnSave",
        "body": "components.upgrademoduleowner:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.NumModules:": {
        "prefix": "components.upgrademoduleowner:NumModules",
        "body": "components.upgrademoduleowner:NumModules()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.UpdateActivatedModules:": {
        "prefix": "components.upgrademoduleowner:UpdateActivatedModules",
        "body": "components.upgrademoduleowner:UpdateActivatedModules(${1:isloading})",
        "description": "参数:(isloading)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.OnRemoveFromEntity:": {
        "prefix": "components.upgrademoduleowner:OnRemoveFromEntity",
        "body": "components.upgrademoduleowner:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.PopOneModule:": {
        "prefix": "components.upgrademoduleowner:PopOneModule",
        "body": "components.upgrademoduleowner:PopOneModule()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.PopAllModules:": {
        "prefix": "components.upgrademoduleowner:PopAllModules",
        "body": "components.upgrademoduleowner:PopAllModules()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.GetModuleInSlot:": {
        "prefix": "components.upgrademoduleowner:GetModuleInSlot",
        "body": "components.upgrademoduleowner:GetModuleInSlot(${1:slotnum})",
        "description": "参数:(slotnum)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.PushModule:": {
        "prefix": "components.upgrademoduleowner:PushModule",
        "body": "components.upgrademoduleowner:PushModule(${1:module},${2:isloading})",
        "description": "参数:(module)<>[],(isloading)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.ChargeIsMaxed:": {
        "prefix": "components.upgrademoduleowner:ChargeIsMaxed",
        "body": "components.upgrademoduleowner:ChargeIsMaxed()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.AddCharge:": {
        "prefix": "components.upgrademoduleowner:AddCharge",
        "body": "components.upgrademoduleowner:AddCharge(${1:n})",
        "description": "参数:(n)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.GetDebugString:": {
        "prefix": "components.upgrademoduleowner:GetDebugString",
        "body": "components.upgrademoduleowner:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.SetChargeLevel:": {
        "prefix": "components.upgrademoduleowner:SetChargeLevel",
        "body": "components.upgrademoduleowner:SetChargeLevel(${1:new_level})",
        "description": "参数:(new_level)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.CanUpgrade:": {
        "prefix": "components.upgrademoduleowner:CanUpgrade",
        "body": "components.upgrademoduleowner:CanUpgrade(${1:module_instance})",
        "description": "参数:(module_instance)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.IsChargeEmpty:": {
        "prefix": "components.upgrademoduleowner:IsChargeEmpty",
        "body": "components.upgrademoduleowner:IsChargeEmpty()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.UsedSlotCount:": {
        "prefix": "components.upgrademoduleowner:UsedSlotCount",
        "body": "components.upgrademoduleowner:UsedSlotCount()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.GetModuleTypeCount:": {
        "prefix": "components.upgrademoduleowner:GetModuleTypeCount",
        "body": "components.upgrademoduleowner:GetModuleTypeCount(${1:moduletype})",
        "description": "参数:(moduletype)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.OnLoad:": {
        "prefix": "components.upgrademoduleowner:OnLoad",
        "body": "components.upgrademoduleowner:OnLoad(${1:data},${2:newents})",
        "description": "参数:(data)<>[],(newents)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrademoduleowner.PopModule:": {
        "prefix": "components.upgrademoduleowner:PopModule",
        "body": "components.upgrademoduleowner:PopModule(${1:index})",
        "description": "参数:(index)<>[] 返回值:无返回值 贡献者:@"
    },
    "upgrader.CanUpgrade:": {
        "prefix": "components.upgrader:CanUpgrade",
        "body": "components.upgrader:CanUpgrade(${1:target},${2:doer})",
        "description": "参数:(target)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "useableitem.CanInteract:": {
        "prefix": "components.useableitem:CanInteract",
        "body": "components.useableitem:CanInteract(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "useableitem.StartUsingItem:": {
        "prefix": "components.useableitem:StartUsingItem",
        "body": "components.useableitem:StartUsingItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "useableitem.StopUsingItem:": {
        "prefix": "components.useableitem:StopUsingItem",
        "body": "components.useableitem:StopUsingItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "useableitem.SetOnUseFn:": {
        "prefix": "components.useableitem:SetOnUseFn",
        "body": "components.useableitem:SetOnUseFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "useableitem.OnRemoveFromEntity:": {
        "prefix": "components.useableitem:OnRemoveFromEntity",
        "body": "components.useableitem:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "useableitem.SetOnStopUseFn:": {
        "prefix": "components.useableitem:SetOnStopUseFn",
        "body": "components.useableitem:SetOnStopUseFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "useabletargeteditem.CanInteract:": {
        "prefix": "components.useabletargeteditem:CanInteract",
        "body": "components.useabletargeteditem:CanInteract()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "useabletargeteditem.StartUsingItem:": {
        "prefix": "components.useabletargeteditem:StartUsingItem",
        "body": "components.useabletargeteditem:StartUsingItem(${1:target},${2:doer})",
        "description": "参数:(target)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "useabletargeteditem.StopUsingItem:": {
        "prefix": "components.useabletargeteditem:StopUsingItem",
        "body": "components.useabletargeteditem:StopUsingItem()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "useabletargeteditem.SetOnUseFn:": {
        "prefix": "components.useabletargeteditem:SetOnUseFn",
        "body": "components.useabletargeteditem:SetOnUseFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "useabletargeteditem.SetInventoryDisable:": {
        "prefix": "components.useabletargeteditem:SetInventoryDisable",
        "body": "components.useabletargeteditem:SetInventoryDisable(${1:value})",
        "description": "参数:(value)<>[] 返回值:无返回值 贡献者:@"
    },
    "useabletargeteditem.SetOnStopUseFn:": {
        "prefix": "components.useabletargeteditem:SetOnStopUseFn",
        "body": "components.useabletargeteditem:SetOnStopUseFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "useabletargeteditem.OnRemoveFromEntity:": {
        "prefix": "components.useabletargeteditem:OnRemoveFromEntity",
        "body": "components.useabletargeteditem:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "useabletargeteditem.SetTargetPrefab:": {
        "prefix": "components.useabletargeteditem:SetTargetPrefab",
        "body": "components.useabletargeteditem:SetTargetPrefab(${1:prefab_name})",
        "description": "参数:(prefab_name)<>[] 返回值:无返回值 贡献者:@"
    },
    "vanish_on_sleep.OnEntityWake:": {
        "prefix": "components.vanish_on_sleep:OnEntityWake",
        "body": "components.vanish_on_sleep:OnEntityWake()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "vanish_on_sleep.vanish:": {
        "prefix": "components.vanish_on_sleep:vanish",
        "body": "components.vanish_on_sleep:vanish()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "vanish_on_sleep.OnEntitySleep:": {
        "prefix": "components.vanish_on_sleep:OnEntitySleep",
        "body": "components.vanish_on_sleep:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "vase.Decorate:": {
        "prefix": "components.vase:Decorate",
        "body": "components.vase:Decorate(${1:giver},${2:item})",
        "description": "参数:(giver)<>[],(item)<>[] 返回值:无返回值 贡献者:@"
    },
    "vase.Disable:": {
        "prefix": "components.vase:Disable",
        "body": "components.vase:Disable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "vase.GetDebugString:": {
        "prefix": "components.vase:GetDebugString",
        "body": "components.vase:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "vase.OnRemoveFromEntity:": {
        "prefix": "components.vase:OnRemoveFromEntity",
        "body": "components.vase:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "vase.Enable:": {
        "prefix": "components.vase:Enable",
        "body": "components.vase:Enable()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.RemoveObject:": {
        "prefix": "components.walkableplatform:RemoveObject",
        "body": "components.walkableplatform:RemoveObject(${1:obj})",
        "description": "参数:(obj)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.OnSave:": {
        "prefix": "components.walkableplatform:OnSave",
        "body": "components.walkableplatform:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.AddPlayerOnPlatform:": {
        "prefix": "components.walkableplatform:AddPlayerOnPlatform",
        "body": "components.walkableplatform:AddPlayerOnPlatform(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.RemovePlayerOnPlatform:": {
        "prefix": "components.walkableplatform:RemovePlayerOnPlatform",
        "body": "components.walkableplatform:RemovePlayerOnPlatform(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.GetUID:": {
        "prefix": "components.walkableplatform:GetUID",
        "body": "components.walkableplatform:GetUID()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.OnRemoveEntity:": {
        "prefix": "components.walkableplatform:OnRemoveEntity",
        "body": "components.walkableplatform:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.OnLoad:": {
        "prefix": "components.walkableplatform:OnLoad",
        "body": "components.walkableplatform:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.DespawnPlayerCollision:": {
        "prefix": "components.walkableplatform:DespawnPlayerCollision",
        "body": "components.walkableplatform:DespawnPlayerCollision()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.GetEntitiesOnPlatform:": {
        "prefix": "components.walkableplatform:GetEntitiesOnPlatform",
        "body": "components.walkableplatform:GetEntitiesOnPlatform()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.SpawnPlayerCollision:": {
        "prefix": "components.walkableplatform:SpawnPlayerCollision",
        "body": "components.walkableplatform:SpawnPlayerCollision()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.SetEntitiesOnPlatform:": {
        "prefix": "components.walkableplatform:SetEntitiesOnPlatform",
        "body": "components.walkableplatform:SetEntitiesOnPlatform()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.AddEntityToPlatform:": {
        "prefix": "components.walkableplatform:AddEntityToPlatform",
        "body": "components.walkableplatform:AddEntityToPlatform(${1:ent})",
        "description": "参数:(ent)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.StopUpdating:": {
        "prefix": "components.walkableplatform:StopUpdating",
        "body": "components.walkableplatform:StopUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.CommitPlayersOnPlatform:": {
        "prefix": "components.walkableplatform:CommitPlayersOnPlatform",
        "body": "components.walkableplatform:CommitPlayersOnPlatform()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.GetPlayersOnPlatform:": {
        "prefix": "components.walkableplatform:GetPlayersOnPlatform",
        "body": "components.walkableplatform:GetPlayersOnPlatform()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.StartUpdating:": {
        "prefix": "components.walkableplatform:StartUpdating",
        "body": "components.walkableplatform:StartUpdating()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.DestroyObjectsOnPlatform:": {
        "prefix": "components.walkableplatform:DestroyObjectsOnPlatform",
        "body": "components.walkableplatform:DestroyObjectsOnPlatform()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatform.GetEmbarkPosition:": {
        "prefix": "components.walkableplatform:GetEmbarkPosition",
        "body": "components.walkableplatform:GetEmbarkPosition(${1:embarker_x},${2:embarker_z},${3:embarker_min_dist})",
        "description": "参数:(embarker_x)<>[],(embarker_z)<>[],(embarker_min_dist)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatformmanager.OnSave:": {
        "prefix": "components.walkableplatformmanager:OnSave",
        "body": "components.walkableplatformmanager:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatformmanager.OnLoad:": {
        "prefix": "components.walkableplatformmanager:OnLoad",
        "body": "components.walkableplatformmanager:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatformmanager.GetPlatformWithUID:": {
        "prefix": "components.walkableplatformmanager:GetPlatformWithUID",
        "body": "components.walkableplatformmanager:GetPlatformWithUID(${1:uid})",
        "description": "参数:(uid)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatformmanager.PostUpdate:": {
        "prefix": "components.walkableplatformmanager:PostUpdate",
        "body": "components.walkableplatformmanager:PostUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatformmanager.UnregisterPlatform:": {
        "prefix": "components.walkableplatformmanager:UnregisterPlatform",
        "body": "components.walkableplatformmanager:UnregisterPlatform(${1:platform})",
        "description": "参数:(platform)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatformmanager.RemovePlatform:": {
        "prefix": "components.walkableplatformmanager:RemovePlatform",
        "body": "components.walkableplatformmanager:RemovePlatform(${1:platform})",
        "description": "参数:(platform)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatformmanager.RegisterPlatform:": {
        "prefix": "components.walkableplatformmanager:RegisterPlatform",
        "body": "components.walkableplatformmanager:RegisterPlatform(${1:platform})",
        "description": "参数:(platform)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatformmanager.GetNewUID:": {
        "prefix": "components.walkableplatformmanager:GetNewUID",
        "body": "components.walkableplatformmanager:GetNewUID()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatformmanager.AddPlatform:": {
        "prefix": "components.walkableplatformmanager:AddPlatform",
        "body": "components.walkableplatformmanager:AddPlatform(${1:platform})",
        "description": "参数:(platform)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatformplayer.StopBoatCameraZooms:": {
        "prefix": "components.walkableplatformplayer:StopBoatCameraZooms",
        "body": "components.walkableplatformplayer:StopBoatCameraZooms()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatformplayer.OnRemoveEntity:": {
        "prefix": "components.walkableplatformplayer:OnRemoveEntity",
        "body": "components.walkableplatformplayer:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatformplayer.StartBoatMusicTest:": {
        "prefix": "components.walkableplatformplayer:StartBoatMusicTest",
        "body": "components.walkableplatformplayer:StartBoatMusicTest()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatformplayer.StopBoatCamera:": {
        "prefix": "components.walkableplatformplayer:StopBoatCamera",
        "body": "components.walkableplatformplayer:StopBoatCamera()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatformplayer.StartBoatCamera:": {
        "prefix": "components.walkableplatformplayer:StartBoatCamera",
        "body": "components.walkableplatformplayer:StartBoatCamera()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatformplayer.StopBoatMusicTest:": {
        "prefix": "components.walkableplatformplayer:StopBoatMusicTest",
        "body": "components.walkableplatformplayer:StopBoatMusicTest()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatformplayer.TestForPlatform:": {
        "prefix": "components.walkableplatformplayer:TestForPlatform",
        "body": "components.walkableplatformplayer:TestForPlatform()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatformplayer.GetOffPlatform:": {
        "prefix": "components.walkableplatformplayer:GetOffPlatform",
        "body": "components.walkableplatformplayer:GetOffPlatform()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkableplatformplayer.GetOnPlatform:": {
        "prefix": "components.walkableplatformplayer:GetOnPlatform",
        "body": "components.walkableplatformplayer:GetOnPlatform(${1:platform})",
        "description": "参数:(platform)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkableplatformplayer.StartBoatCameraZooms:": {
        "prefix": "components.walkableplatformplayer:StartBoatCameraZooms",
        "body": "components.walkableplatformplayer:StartBoatCameraZooms()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkingplank.MountPlank:": {
        "prefix": "components.walkingplank:MountPlank",
        "body": "components.walkingplank:MountPlank(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkingplank.Retract:": {
        "prefix": "components.walkingplank:Retract",
        "body": "components.walkingplank:Retract()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkingplank.StopMounting:": {
        "prefix": "components.walkingplank:StopMounting",
        "body": "components.walkingplank:StopMounting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkingplank.Extend:": {
        "prefix": "components.walkingplank:Extend",
        "body": "components.walkingplank:Extend()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkingplank.OnRemoveFromEntity:": {
        "prefix": "components.walkingplank:OnRemoveFromEntity",
        "body": "components.walkingplank:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkingplank.AbandonShip:": {
        "prefix": "components.walkingplank:AbandonShip",
        "body": "components.walkingplank:AbandonShip(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "walkingplankuser.Dismount:": {
        "prefix": "components.walkingplankuser:Dismount",
        "body": "components.walkingplankuser:Dismount()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "walkingplankuser.SetCurrentPlank:": {
        "prefix": "components.walkingplankuser:SetCurrentPlank",
        "body": "components.walkingplankuser:SetCurrentPlank(${1:plank})",
        "description": "参数:(plank)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.ApplyTargetSkins:": {
        "prefix": "components.wardrobe:ApplyTargetSkins",
        "body": "components.wardrobe:ApplyTargetSkins(${1:target},${2:doer},${3:skins})",
        "description": "参数:(target)<>[],(doer)<>[],(skins)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.SetChangeInDelay:": {
        "prefix": "components.wardrobe:SetChangeInDelay",
        "body": "components.wardrobe:SetChangeInDelay(${1:delay})",
        "description": "参数:(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.ActivateChanging:": {
        "prefix": "components.wardrobe:ActivateChanging",
        "body": "components.wardrobe:ActivateChanging(${1:doer},${2:skins})",
        "description": "参数:(doer)<>[],(skins)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.OnUpdate:": {
        "prefix": "components.wardrobe:OnUpdate",
        "body": "components.wardrobe:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.SetCanBeDressed:": {
        "prefix": "components.wardrobe:SetCanBeDressed",
        "body": "components.wardrobe:SetCanBeDressed(${1:canbedressed})",
        "description": "参数:(canbedressed)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.OnRemoveFromEntity:": {
        "prefix": "components.wardrobe:OnRemoveFromEntity",
        "body": "components.wardrobe:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wardrobe.EndChanging:": {
        "prefix": "components.wardrobe:EndChanging",
        "body": "components.wardrobe:EndChanging(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.ApplySkins:": {
        "prefix": "components.wardrobe:ApplySkins",
        "body": "components.wardrobe:ApplySkins(${1:doer},${2:diff})",
        "description": "参数:(doer)<>[],(diff)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.EndAllChanging:": {
        "prefix": "components.wardrobe:EndAllChanging",
        "body": "components.wardrobe:EndAllChanging()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wardrobe.Enable:": {
        "prefix": "components.wardrobe:Enable",
        "body": "components.wardrobe:Enable(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.SetCanBeShared:": {
        "prefix": "components.wardrobe:SetCanBeShared",
        "body": "components.wardrobe:SetCanBeShared(${1:canbeshared})",
        "description": "参数:(canbeshared)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.CanBeginChanging:": {
        "prefix": "components.wardrobe:CanBeginChanging",
        "body": "components.wardrobe:CanBeginChanging(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.SetRange:": {
        "prefix": "components.wardrobe:SetRange",
        "body": "components.wardrobe:SetRange(${1:range})",
        "description": "参数:(range)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.BeginChanging:": {
        "prefix": "components.wardrobe:BeginChanging",
        "body": "components.wardrobe:BeginChanging(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "wardrobe.SetCanUseAction:": {
        "prefix": "components.wardrobe:SetCanUseAction",
        "body": "components.wardrobe:SetCanUseAction(${1:canuseaction})",
        "description": "参数:(canuseaction)<>[] 返回值:无返回值 贡献者:@"
    },
    "waterproofer.SetEffectiveness:": {
        "prefix": "components.waterproofer:SetEffectiveness",
        "body": "components.waterproofer:SetEffectiveness(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "waterproofer.OnRemoveFromEntity:": {
        "prefix": "components.waterproofer:OnRemoveFromEntity",
        "body": "components.waterproofer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "waterproofer.GetEffectiveness:": {
        "prefix": "components.waterproofer:GetEffectiveness",
        "body": "components.waterproofer:GetEffectiveness()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "watersource.OnRemoveFromEntity:": {
        "prefix": "components.watersource:OnRemoveFromEntity",
        "body": "components.watersource:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "watersource.Use:": {
        "prefix": "components.watersource:Use",
        "body": "components.watersource:Use()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wateryprotection.SpreadProtection:": {
        "prefix": "components.wateryprotection:SpreadProtection",
        "body": "components.wateryprotection:SpreadProtection(${1:inst},${2:dist},${3:noextinguish})",
        "description": "参数:(inst)<>[],(dist)<>[],(noextinguish)<>[] 返回值:无返回值 贡献者:@"
    },
    "wateryprotection.AddIgnoreTag:": {
        "prefix": "components.wateryprotection:AddIgnoreTag",
        "body": "components.wateryprotection:AddIgnoreTag(${1:tag})",
        "description": "参数:(tag)<>[] 返回值:无返回值 贡献者:@"
    },
    "wateryprotection.SpreadProtectionAtPoint:": {
        "prefix": "components.wateryprotection:SpreadProtectionAtPoint",
        "body": "components.wateryprotection:SpreadProtectionAtPoint(${1:x},${2:y},${3:z},${4:dist},${5:noextinguish})",
        "description": "参数:(x)<>[],(y)<>[],(z)<>[],(dist)<>[],(noextinguish)<>[] 返回值:无返回值 贡献者:@"
    },
    "wavemanager.GetDebugString:": {
        "prefix": "components.wavemanager:GetDebugString",
        "body": "components.wavemanager:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wavemanager.OnUpdate:": {
        "prefix": "components.wavemanager:OnUpdate",
        "body": "components.wavemanager:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "wax.SetIsSpray:": {
        "prefix": "components.wax:SetIsSpray",
        "body": "components.wax:SetIsSpray()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wax.GetIsSpray:": {
        "prefix": "components.wax:GetIsSpray",
        "body": "components.wax:GetIsSpray()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "waxable.SetNeedsSpray:": {
        "prefix": "components.waxable:SetNeedsSpray",
        "body": "components.waxable:SetNeedsSpray(${1:val})",
        "description": "参数:(val)<>[] 返回值:无返回值 贡献者:@"
    },
    "waxable.NeedsSpray:": {
        "prefix": "components.waxable:NeedsSpray",
        "body": "components.waxable:NeedsSpray()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "waxable.OnRemoveFromEntity:": {
        "prefix": "components.waxable:OnRemoveFromEntity",
        "body": "components.waxable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "waxable.SetWaxfn:": {
        "prefix": "components.waxable:SetWaxfn",
        "body": "components.waxable:SetWaxfn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "waxable.Wax:": {
        "prefix": "components.waxable:Wax",
        "body": "components.waxable:Wax(${1:doer},${2:waxitem})",
        "description": "参数:(doer)<>[],(waxitem)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.LaunchProjectile:": {
        "prefix": "components.weapon:LaunchProjectile",
        "body": "components.weapon:LaunchProjectile(${1:attacker},${2:target})",
        "description": "参数:(attacker)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.SetOnProjectileLaunched:": {
        "prefix": "components.weapon:SetOnProjectileLaunched",
        "body": "components.weapon:SetOnProjectileLaunched(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.OnAttack:": {
        "prefix": "components.weapon:OnAttack",
        "body": "components.weapon:OnAttack(${1:attacker},${2:target},${3:projectile})",
        "description": "参数:(attacker)<>[],(target)<>[],(projectile)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.SetProjectile:": {
        "prefix": "components.weapon:SetProjectile",
        "body": "components.weapon:SetProjectile(${1:projectile})",
        "description": "参数:(projectile)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.SetRange:": {
        "prefix": "components.weapon:SetRange",
        "body": "components.weapon:SetRange(${1:attack},${2:hit})",
        "description": "参数:(attack)<>[],(hit)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.OnRemoveFromEntity:": {
        "prefix": "components.weapon:OnRemoveFromEntity",
        "body": "components.weapon:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "weapon.SetElectric:": {
        "prefix": "components.weapon:SetElectric",
        "body": "components.weapon:SetElectric(${1:damage_mult},${2:wet_damage_mult})",
        "description": "参数:(damage_mult)<>[],(wet_damage_mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.SetAttackCallback:": {
        "prefix": "components.weapon:SetAttackCallback",
        "body": "components.weapon:SetAttackCallback(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.SetOnAttack:": {
        "prefix": "components.weapon:SetOnAttack",
        "body": "components.weapon:SetOnAttack(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.GetDamage:": {
        "prefix": "components.weapon:GetDamage",
        "body": "components.weapon:GetDamage(${1:attacker},${2:target})",
        "description": "参数:(attacker)<>[],(target)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.SetOverrideStimuliFn:": {
        "prefix": "components.weapon:SetOverrideStimuliFn",
        "body": "components.weapon:SetOverrideStimuliFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.SetOnProjectileLaunch:": {
        "prefix": "components.weapon:SetOnProjectileLaunch",
        "body": "components.weapon:SetOnProjectileLaunch(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "weapon.CanRangedAttack:": {
        "prefix": "components.weapon:CanRangedAttack",
        "body": "components.weapon:CanRangedAttack()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "weapon.SetDamage:如果dmg为函数型参数，show me等信息模组无法显示正确的攻击力": {
        "prefix": "components.weapon:SetDamage",
        "body": "components.weapon:SetDamage(${1:dmg})",
        "description": "参数:(dmg)<number|function>[伤害值或伤害函数] 返回值:无返回值 贡献者:@Runar"
    },
    "weapon.SetProjectileOffset:": {
        "prefix": "components.weapon:SetProjectileOffset",
        "body": "components.weapon:SetProjectileOffset(${1:offset})",
        "description": "参数:(offset)<>[] 返回值:无返回值 贡献者:@"
    },
    "weighable.GetWeightPercent:": {
        "prefix": "components.weighable:GetWeightPercent",
        "body": "components.weighable:GetWeightPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "weighable.OnSave:": {
        "prefix": "components.weighable:OnSave",
        "body": "components.weighable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "weighable.OnLoad:": {
        "prefix": "components.weighable:OnLoad",
        "body": "components.weighable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "weighable.CopyWeighable:": {
        "prefix": "components.weighable:CopyWeighable",
        "body": "components.weighable:CopyWeighable(${1:src_weighable})",
        "description": "参数:(src_weighable)<>[] 返回值:无返回值 贡献者:@"
    },
    "weighable.GetDebugString:": {
        "prefix": "components.weighable:GetDebugString",
        "body": "components.weighable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "weighable.SetWeight:": {
        "prefix": "components.weighable:SetWeight",
        "body": "components.weighable:SetWeight(${1:weight})",
        "description": "参数:(weight)<>[] 返回值:无返回值 贡献者:@"
    },
    "weighable.GetWeight:": {
        "prefix": "components.weighable:GetWeight",
        "body": "components.weighable:GetWeight()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "weighable.SetPlayerAsOwner:": {
        "prefix": "components.weighable:SetPlayerAsOwner",
        "body": "components.weighable:SetPlayerAsOwner(${1:owner})",
        "description": "参数:(owner)<>[] 返回值:无返回值 贡献者:@"
    },
    "weighable.Initialize:": {
        "prefix": "components.weighable:Initialize",
        "body": "components.weighable:Initialize(${1:min_weight},${2:max_weight})",
        "description": "参数:(min_weight)<>[],(max_weight)<>[] 返回值:无返回值 贡献者:@"
    },
    "werebeast.OnSave:": {
        "prefix": "components.werebeast:OnSave",
        "body": "components.werebeast:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "werebeast.SetOnNormalFn:": {
        "prefix": "components.werebeast:SetOnNormalFn",
        "body": "components.werebeast:SetOnNormalFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "werebeast.GetDebugString:": {
        "prefix": "components.werebeast:GetDebugString",
        "body": "components.werebeast:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "werebeast.SetTriggerLimit:": {
        "prefix": "components.werebeast:SetTriggerLimit",
        "body": "components.werebeast:SetTriggerLimit(${1:limit})",
        "description": "参数:(limit)<>[] 返回值:无返回值 贡献者:@"
    },
    "werebeast.OnRemoveFromEntity:": {
        "prefix": "components.werebeast:OnRemoveFromEntity",
        "body": "components.werebeast:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "werebeast.SetNormal:": {
        "prefix": "components.werebeast:SetNormal",
        "body": "components.werebeast:SetNormal()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "werebeast.OnLoad:": {
        "prefix": "components.werebeast:OnLoad",
        "body": "components.werebeast:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "werebeast.IsInWereState:": {
        "prefix": "components.werebeast:IsInWereState",
        "body": "components.werebeast:IsInWereState()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "werebeast.SetWere:": {
        "prefix": "components.werebeast:SetWere",
        "body": "components.werebeast:SetWere(${1:time})",
        "description": "参数:(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "werebeast.ResetTriggers:": {
        "prefix": "components.werebeast:ResetTriggers",
        "body": "components.werebeast:ResetTriggers()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "werebeast.SetOnWereFn:": {
        "prefix": "components.werebeast:SetOnWereFn",
        "body": "components.werebeast:SetOnWereFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "werebeast.TriggerDelta:": {
        "prefix": "components.werebeast:TriggerDelta",
        "body": "components.werebeast:TriggerDelta(${1:amount})",
        "description": "参数:(amount)<>[] 返回值:无返回值 贡献者:@"
    },
    "wereeater.OnSave:": {
        "prefix": "components.wereeater:OnSave",
        "body": "components.wereeater:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wereeater.OnLoad:": {
        "prefix": "components.wereeater:OnLoad",
        "body": "components.wereeater:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "wereeater.ResetFoodMemory:": {
        "prefix": "components.wereeater:ResetFoodMemory",
        "body": "components.wereeater:ResetFoodMemory()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wereeater.SetForceTransformFn:": {
        "prefix": "components.wereeater:SetForceTransformFn",
        "body": "components.wereeater:SetForceTransformFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "wereeater.GetDebugString:": {
        "prefix": "components.wereeater:GetDebugString",
        "body": "components.wereeater:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wereeater.ForceTransformToWere:": {
        "prefix": "components.wereeater:ForceTransformToWere",
        "body": "components.wereeater:ForceTransformToWere(${1:mode})",
        "description": "参数:(mode)<>[] 返回值:无返回值 贡献者:@"
    },
    "wereeater.OnRemoveFromEntity:": {
        "prefix": "components.wereeater:OnRemoveFromEntity",
        "body": "components.wereeater:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wereeater.EatMosterFood:": {
        "prefix": "components.wereeater:EatMosterFood",
        "body": "components.wereeater:EatMosterFood(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "wereness.DoDelta:": {
        "prefix": "components.wereness:DoDelta",
        "body": "components.wereness:DoDelta(${1:delta},${2:overtime})",
        "description": "参数:(delta)<>[],(overtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "wereness.GetWereMode:": {
        "prefix": "components.wereness:GetWereMode",
        "body": "components.wereness:GetWereMode()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wereness.SetDrainRate:": {
        "prefix": "components.wereness:SetDrainRate",
        "body": "components.wereness:SetDrainRate(${1:rate})",
        "description": "参数:(rate)<>[] 返回值:无返回值 贡献者:@"
    },
    "wereness.GetDebugString:": {
        "prefix": "components.wereness:GetDebugString",
        "body": "components.wereness:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wereness.SetPercent:": {
        "prefix": "components.wereness:SetPercent",
        "body": "components.wereness:SetPercent(${1:percent},${2:overtime})",
        "description": "参数:(percent)<>[],(overtime)<>[] 返回值:无返回值 贡献者:@"
    },
    "wereness.OnLoad:": {
        "prefix": "components.wereness:OnLoad",
        "body": "components.wereness:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "wereness.OnSave:": {
        "prefix": "components.wereness:OnSave",
        "body": "components.wereness:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wereness.OnUpdate:": {
        "prefix": "components.wereness:OnUpdate",
        "body": "components.wereness:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "wereness.GetPercent:": {
        "prefix": "components.wereness:GetPercent",
        "body": "components.wereness:GetPercent()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wereness.StartDraining:": {
        "prefix": "components.wereness:StartDraining",
        "body": "components.wereness:StartDraining()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wereness.StopDraining:": {
        "prefix": "components.wereness:StopDraining",
        "body": "components.wereness:StopDraining()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wereness.SetWereMode:": {
        "prefix": "components.wereness:SetWereMode",
        "body": "components.wereness:SetWereMode(${1:weremode})",
        "description": "参数:(weremode)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.OnSave:": {
        "prefix": "components.winch:OnSave",
        "body": "components.winch:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winch.StartRaising:": {
        "prefix": "components.winch:StartRaising",
        "body": "components.winch:StartRaising(${1:loading_in})",
        "description": "参数:(loading_in)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.OnRemoveFromEntity:": {
        "prefix": "components.winch:OnRemoveFromEntity",
        "body": "components.winch:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winch.StopDepthTesting:": {
        "prefix": "components.winch:StopDepthTesting",
        "body": "components.winch:StopDepthTesting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winch.SetOnStartRaisingFn:": {
        "prefix": "components.winch:SetOnStartRaisingFn",
        "body": "components.winch:SetOnStartRaisingFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.StartLowering:": {
        "prefix": "components.winch:StartLowering",
        "body": "components.winch:StartLowering(${1:loading_in})",
        "description": "参数:(loading_in)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.FullyRaised:": {
        "prefix": "components.winch:FullyRaised",
        "body": "components.winch:FullyRaised()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winch.SetLoweringSpeedMultiplier:": {
        "prefix": "components.winch:SetLoweringSpeedMultiplier",
        "body": "components.winch:SetLoweringSpeedMultiplier(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.OnLoad:": {
        "prefix": "components.winch:OnLoad",
        "body": "components.winch:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.FullyLowered:": {
        "prefix": "components.winch:FullyLowered",
        "body": "components.winch:FullyLowered()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winch.SetRaisingSpeedMultiplier:": {
        "prefix": "components.winch:SetRaisingSpeedMultiplier",
        "body": "components.winch:SetRaisingSpeedMultiplier(${1:mult})",
        "description": "参数:(mult)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.GetDebugString:": {
        "prefix": "components.winch:GetDebugString",
        "body": "components.winch:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winch.SetOverrideGetCurrentDepthFn:": {
        "prefix": "components.winch:SetOverrideGetCurrentDepthFn",
        "body": "components.winch:SetOverrideGetCurrentDepthFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.SetOnStartLoweringFn:": {
        "prefix": "components.winch:SetOnStartLoweringFn",
        "body": "components.winch:SetOnStartLoweringFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.GetCurrentDepth:": {
        "prefix": "components.winch:GetCurrentDepth",
        "body": "components.winch:GetCurrentDepth()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winch.SetOnFullyLoweredFn:": {
        "prefix": "components.winch:SetOnFullyLoweredFn",
        "body": "components.winch:SetOnFullyLoweredFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.OnUpdate:": {
        "prefix": "components.winch:OnUpdate",
        "body": "components.winch:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.StartDepthTesting:": {
        "prefix": "components.winch:StartDepthTesting",
        "body": "components.winch:StartDepthTesting(${1:is_raising})",
        "description": "参数:(is_raising)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.SetOnFullyRaisedFn:": {
        "prefix": "components.winch:SetOnFullyRaisedFn",
        "body": "components.winch:SetOnFullyRaisedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "winch.SetUnloadFn:": {
        "prefix": "components.winch:SetUnloadFn",
        "body": "components.winch:SetUnloadFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "winchtarget.Salvage:": {
        "prefix": "components.winchtarget:Salvage",
        "body": "components.winchtarget:Salvage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winchtarget.SetSalvageFn:": {
        "prefix": "components.winchtarget:SetSalvageFn",
        "body": "components.winchtarget:SetSalvageFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "winchtarget.OnRemoveFromEntity:": {
        "prefix": "components.winchtarget:OnRemoveFromEntity",
        "body": "components.winchtarget:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winchtarget.GetSunkenObject:": {
        "prefix": "components.winchtarget:GetSunkenObject",
        "body": "components.winchtarget:GetSunkenObject()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winonateleportpadmanager.GetAllWinonaTeleportPads:": {
        "prefix": "components.winonateleportpadmanager:GetAllWinonaTeleportPads",
        "body": "components.winonateleportpadmanager:GetAllWinonaTeleportPads()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winonateleportpadmanager.OnRemoveFromEntity:": {
        "prefix": "components.winonateleportpadmanager:OnRemoveFromEntity",
        "body": "components.winonateleportpadmanager:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winonateleportpadmanager.OnRegisterWinonaTeleportPad:": {
        "prefix": "components.winonateleportpadmanager:OnRegisterWinonaTeleportPad",
        "body": "components.winonateleportpadmanager:OnRegisterWinonaTeleportPad(${1:winonateleportpad})",
        "description": "参数:(winonateleportpad)<>[] 返回值:无返回值 贡献者:@"
    },
    "wintersfeasttable.GetDebugString:": {
        "prefix": "components.wintersfeasttable:GetDebugString",
        "body": "components.wintersfeasttable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wintersfeasttable.DepleteFood:": {
        "prefix": "components.wintersfeasttable:DepleteFood",
        "body": "components.wintersfeasttable:DepleteFood(${1:feasters})",
        "description": "参数:(feasters)<>[] 返回值:无返回值 贡献者:@"
    },
    "wintersfeasttable.OnRemoveFromEntity:": {
        "prefix": "components.wintersfeasttable:OnRemoveFromEntity",
        "body": "components.wintersfeasttable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wintersfeasttable.CancelFeasting:": {
        "prefix": "components.wintersfeasttable:CancelFeasting",
        "body": "components.wintersfeasttable:CancelFeasting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wintertreegiftable.OnLoad:": {
        "prefix": "components.wintertreegiftable:OnLoad",
        "body": "components.wintertreegiftable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "wintertreegiftable.OnGiftGiven:": {
        "prefix": "components.wintertreegiftable:OnGiftGiven",
        "body": "components.wintertreegiftable:OnGiftGiven()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wintertreegiftable.OnSave:": {
        "prefix": "components.wintertreegiftable:OnSave",
        "body": "components.wintertreegiftable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "wintertreegiftable.GetDaysSinceLastGift:": {
        "prefix": "components.wintertreegiftable:GetDaysSinceLastGift",
        "body": "components.wintertreegiftable:GetDaysSinceLastGift()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "winter_treeseed.SetTree:": {
        "prefix": "components.winter_treeseed:SetTree",
        "body": "components.winter_treeseed:SetTree(${1:tree})",
        "description": "参数:(tree)<>[] 返回值:无返回值 贡献者:@"
    },
    "wisecracker.OnUpdate:": {
        "prefix": "components.wisecracker:OnUpdate",
        "body": "components.wisecracker:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "witherable.DelayWither:": {
        "prefix": "components.witherable:DelayWither",
        "body": "components.witherable:DelayWither(${1:delay})",
        "description": "参数:(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "witherable.OnSave:": {
        "prefix": "components.witherable:OnSave",
        "body": "components.witherable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "witherable.OnLoad:": {
        "prefix": "components.witherable:OnLoad",
        "body": "components.witherable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "witherable.GetDebugString:": {
        "prefix": "components.witherable:GetDebugString",
        "body": "components.witherable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "witherable.CanWither:": {
        "prefix": "components.witherable:CanWither",
        "body": "components.witherable:CanWither()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "witherable.OnRemoveFromEntity:": {
        "prefix": "components.witherable:OnRemoveFromEntity",
        "body": "components.witherable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "witherable.DelayRejuvenate:": {
        "prefix": "components.witherable:DelayRejuvenate",
        "body": "components.witherable:DelayRejuvenate(${1:delay})",
        "description": "参数:(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "witherable.IsWithered:": {
        "prefix": "components.witherable:IsWithered",
        "body": "components.witherable:IsWithered()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "witherable.CanRejuvenate:": {
        "prefix": "components.witherable:CanRejuvenate",
        "body": "components.witherable:CanRejuvenate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "witherable.Stop:": {
        "prefix": "components.witherable:Stop",
        "body": "components.witherable:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "witherable.ForceRejuvenate:": {
        "prefix": "components.witherable:ForceRejuvenate",
        "body": "components.witherable:ForceRejuvenate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "witherable.Start:": {
        "prefix": "components.witherable:Start",
        "body": "components.witherable:Start()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "witherable.ForceWither:": {
        "prefix": "components.witherable:ForceWither",
        "body": "components.witherable:ForceWither()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "witherable.IsProtected:": {
        "prefix": "components.witherable:IsProtected",
        "body": "components.witherable:IsProtected()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "witherable.Enable:": {
        "prefix": "components.witherable:Enable",
        "body": "components.witherable:Enable(${1:enable})",
        "description": "参数:(enable)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.WorkedBy:": {
        "prefix": "components.workable:WorkedBy",
        "body": "components.workable:WorkedBy(${1:worker},${2:numworks})",
        "description": "参数:(worker)<>[],(numworks)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.GetWorkLeft:": {
        "prefix": "components.workable:GetWorkLeft",
        "body": "components.workable:GetWorkLeft()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "workable.CanBeWorked:": {
        "prefix": "components.workable:CanBeWorked",
        "body": "components.workable:CanBeWorked()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "workable.Destroy:": {
        "prefix": "components.workable:Destroy",
        "body": "components.workable:Destroy(${1:destroyer})",
        "description": "参数:(destroyer)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.OnRemoveFromEntity:": {
        "prefix": "components.workable:OnRemoveFromEntity",
        "body": "components.workable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "workable.SetOnWorkCallback:": {
        "prefix": "components.workable:SetOnWorkCallback",
        "body": "components.workable:SetOnWorkCallback(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.SetOnFinishCallback:": {
        "prefix": "components.workable:SetOnFinishCallback",
        "body": "components.workable:SetOnFinishCallback(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.SetWorkMultiplierFn:": {
        "prefix": "components.workable:SetWorkMultiplierFn",
        "body": "components.workable:SetWorkMultiplierFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.OnLoad:": {
        "prefix": "components.workable:OnLoad",
        "body": "components.workable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.GetDebugString:": {
        "prefix": "components.workable:GetDebugString",
        "body": "components.workable:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "workable.GetWorkAction:": {
        "prefix": "components.workable:GetWorkAction",
        "body": "components.workable:GetWorkAction()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "workable.SetWorkLeft:": {
        "prefix": "components.workable:SetWorkLeft",
        "body": "components.workable:SetWorkLeft(${1:work})",
        "description": "参数:(work)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.ShouldRecoil:": {
        "prefix": "components.workable:ShouldRecoil",
        "body": "components.workable:ShouldRecoil(${1:worker},${2:tool},${3:numworks})",
        "description": "参数:(worker)<>[],(tool)<>[],(numworks)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.SetMaxWork:": {
        "prefix": "components.workable:SetMaxWork",
        "body": "components.workable:SetMaxWork(${1:work})",
        "description": "参数:(work)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.SetWorkAction:": {
        "prefix": "components.workable:SetWorkAction",
        "body": "components.workable:SetWorkAction(${1:act})",
        "description": "参数:(act)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.SetShouldRecoilFn:": {
        "prefix": "components.workable:SetShouldRecoilFn",
        "body": "components.workable:SetShouldRecoilFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.WorkedBy_Internal:": {
        "prefix": "components.workable:WorkedBy_Internal",
        "body": "components.workable:WorkedBy_Internal(${1:worker},${2:numworks})",
        "description": "参数:(worker)<>[],(numworks)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.OnSave:": {
        "prefix": "components.workable:OnSave",
        "body": "components.workable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "workable.SetOnLoadFn:": {
        "prefix": "components.workable:SetOnLoadFn",
        "body": "components.workable:SetOnLoadFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.SetRequiresToughWork:": {
        "prefix": "components.workable:SetRequiresToughWork",
        "body": "components.workable:SetRequiresToughWork(${1:tough})",
        "description": "参数:(tough)<>[] 返回值:无返回值 贡献者:@"
    },
    "workable.SetWorkable:": {
        "prefix": "components.workable:SetWorkable",
        "body": "components.workable:SetWorkable(${1:able})",
        "description": "参数:(able)<>[] 返回值:无返回值 贡献者:@"
    },
    "worker.CanDoAction:": {
        "prefix": "components.worker:CanDoAction",
        "body": "components.worker:CanDoAction(${1:action})",
        "description": "参数:(action)<>[] 返回值:无返回值 贡献者:@"
    },
    "worker.SetAction:": {
        "prefix": "components.worker:SetAction",
        "body": "components.worker:SetAction(${1:action},${2:effectiveness})",
        "description": "参数:(action)<>[],(effectiveness)<>[] 返回值:无返回值 贡献者:@"
    },
    "worker.GetEffectiveness:": {
        "prefix": "components.worker:GetEffectiveness",
        "body": "components.worker:GetEffectiveness(${1:action})",
        "description": "参数:(action)<>[] 返回值:无返回值 贡献者:@"
    },
    "workmultiplier.RemoveMultiplier:": {
        "prefix": "components.workmultiplier:RemoveMultiplier",
        "body": "components.workmultiplier:RemoveMultiplier(${1:action},${2:source})",
        "description": "参数:(action)<>[],(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "workmultiplier.ResolveSpecialWorkAmount:": {
        "prefix": "components.workmultiplier:ResolveSpecialWorkAmount",
        "body": "components.workmultiplier:ResolveSpecialWorkAmount(${1:action},${2:target},${3:tool},${4:numworks},${5:recoil})",
        "description": "参数:(action)<>[],(target)<>[],(tool)<>[],(numworks)<>[],(recoil)<>[] 返回值:无返回值 贡献者:@"
    },
    "workmultiplier.GetMultiplier:": {
        "prefix": "components.workmultiplier:GetMultiplier",
        "body": "components.workmultiplier:GetMultiplier(${1:action})",
        "description": "参数:(action)<>[] 返回值:无返回值 贡献者:@"
    },
    "workmultiplier.AddMultiplier:": {
        "prefix": "components.workmultiplier:AddMultiplier",
        "body": "components.workmultiplier:AddMultiplier(${1:action},${2:multiplier},${3:source})",
        "description": "参数:(action)<>[],(multiplier)<>[],(source)<>[] 返回值:无返回值 贡献者:@"
    },
    "workmultiplier.SetSpecialMultiplierFn:": {
        "prefix": "components.workmultiplier:SetSpecialMultiplierFn",
        "body": "components.workmultiplier:SetSpecialMultiplierFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.ActivatedByOther:": {
        "prefix": "components.worldmigrator:ActivatedByOther",
        "body": "components.worldmigrator:ActivatedByOther()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.OnSave:": {
        "prefix": "components.worldmigrator:OnSave",
        "body": "components.worldmigrator:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.SetDestinationWorld:": {
        "prefix": "components.worldmigrator:SetDestinationWorld",
        "body": "components.worldmigrator:SetDestinationWorld(${1:world},${2:permanent})",
        "description": "参数:(world)<>[],(permanent)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.ValidateAndPushEvents:": {
        "prefix": "components.worldmigrator:ValidateAndPushEvents",
        "body": "components.worldmigrator:ValidateAndPushEvents()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.SetReceivedPortal:": {
        "prefix": "components.worldmigrator:SetReceivedPortal",
        "body": "components.worldmigrator:SetReceivedPortal(${1:fromworld},${2:fromportal})",
        "description": "参数:(fromworld)<>[],(fromportal)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.IsLinked:": {
        "prefix": "components.worldmigrator:IsLinked",
        "body": "components.worldmigrator:IsLinked()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.SetID:": {
        "prefix": "components.worldmigrator:SetID",
        "body": "components.worldmigrator:SetID(${1:id})",
        "description": "参数:(id)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.IsFull:": {
        "prefix": "components.worldmigrator:IsFull",
        "body": "components.worldmigrator:IsFull()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.IsAvailableForLinking:": {
        "prefix": "components.worldmigrator:IsAvailableForLinking",
        "body": "components.worldmigrator:IsAvailableForLinking()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.IsDestinationForPortal:": {
        "prefix": "components.worldmigrator:IsDestinationForPortal",
        "body": "components.worldmigrator:IsDestinationForPortal(${1:otherWorld},${2:otherPortal})",
        "description": "参数:(otherWorld)<>[],(otherPortal)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.SetEnabled:": {
        "prefix": "components.worldmigrator:SetEnabled",
        "body": "components.worldmigrator:SetEnabled(${1:t})",
        "description": "参数:(t)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.GetDebugString:": {
        "prefix": "components.worldmigrator:GetDebugString",
        "body": "components.worldmigrator:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.Activate:": {
        "prefix": "components.worldmigrator:Activate",
        "body": "components.worldmigrator:Activate(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.IsBound:": {
        "prefix": "components.worldmigrator:IsBound",
        "body": "components.worldmigrator:IsBound()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.OnLoad:": {
        "prefix": "components.worldmigrator:OnLoad",
        "body": "components.worldmigrator:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.GetStatusString:": {
        "prefix": "components.worldmigrator:GetStatusString",
        "body": "components.worldmigrator:GetStatusString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldmigrator.IsActive:": {
        "prefix": "components.worldmigrator:IsActive",
        "body": "components.worldmigrator:IsActive()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.DumpSessionStats:": {
        "prefix": "components.worldoverseer:DumpSessionStats",
        "body": "components.worldoverseer:DumpSessionStats()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.OnCyclesChanged:": {
        "prefix": "components.worldoverseer:OnCyclesChanged",
        "body": "components.worldoverseer:OnCyclesChanged(${1:cycles})",
        "description": "参数:(cycles)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.RecordPlayerLeft:": {
        "prefix": "components.worldoverseer:RecordPlayerLeft",
        "body": "components.worldoverseer:RecordPlayerLeft(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.RecordPlayerJoined:": {
        "prefix": "components.worldoverseer:RecordPlayerJoined",
        "body": "components.worldoverseer:RecordPlayerJoined(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.GetWorldRecipeItems:": {
        "prefix": "components.worldoverseer:GetWorldRecipeItems",
        "body": "components.worldoverseer:GetWorldRecipeItems()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.CalcIndividualPlayerStats:": {
        "prefix": "components.worldoverseer:CalcIndividualPlayerStats",
        "body": "components.worldoverseer:CalcIndividualPlayerStats(${1:player})",
        "description": "参数:(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.OnClockTick:": {
        "prefix": "components.worldoverseer:OnClockTick",
        "body": "components.worldoverseer:OnClockTick(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.QuitAll:": {
        "prefix": "components.worldoverseer:QuitAll",
        "body": "components.worldoverseer:QuitAll()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.OnPlayerChangedSkin:": {
        "prefix": "components.worldoverseer:OnPlayerChangedSkin",
        "body": "components.worldoverseer:OnPlayerChangedSkin(${1:player},${2:data})",
        "description": "参数:(player)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.OnPlayerDeath:": {
        "prefix": "components.worldoverseer:OnPlayerDeath",
        "body": "components.worldoverseer:OnPlayerDeath(${1:player},${2:data})",
        "description": "参数:(player)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.OnPlayerJoined:": {
        "prefix": "components.worldoverseer:OnPlayerJoined",
        "body": "components.worldoverseer:OnPlayerJoined(${1:src},${2:player})",
        "description": "参数:(src)<>[],(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.Heartbeat:": {
        "prefix": "components.worldoverseer:Heartbeat",
        "body": "components.worldoverseer:Heartbeat()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.SendClientQuit:": {
        "prefix": "components.worldoverseer:SendClientQuit",
        "body": "components.worldoverseer:SendClientQuit(${1:userid},${2:data})",
        "description": "参数:(userid)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.SendClientHeartBeat:": {
        "prefix": "components.worldoverseer:SendClientHeartBeat",
        "body": "components.worldoverseer:SendClientHeartBeat(${1:userid},${2:data})",
        "description": "参数:(userid)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.OnItemCrafted:": {
        "prefix": "components.worldoverseer:OnItemCrafted",
        "body": "components.worldoverseer:OnItemCrafted(${1:player},${2:data})",
        "description": "参数:(player)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.CalcPlayerStats:": {
        "prefix": "components.worldoverseer:CalcPlayerStats",
        "body": "components.worldoverseer:CalcPlayerStats()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.SendClientJoin:": {
        "prefix": "components.worldoverseer:SendClientJoin",
        "body": "components.worldoverseer:SendClientJoin(${1:userid},${2:data})",
        "description": "参数:(userid)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.HeartbeatPoll:": {
        "prefix": "components.worldoverseer:HeartbeatPoll",
        "body": "components.worldoverseer:HeartbeatPoll()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.OnPlayerLeft:": {
        "prefix": "components.worldoverseer:OnPlayerLeft",
        "body": "components.worldoverseer:OnPlayerLeft(${1:src},${2:player})",
        "description": "参数:(src)<>[],(player)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.OnEquipSkinnedItem:": {
        "prefix": "components.worldoverseer:OnEquipSkinnedItem",
        "body": "components.worldoverseer:OnEquipSkinnedItem(${1:player},${2:data})",
        "description": "参数:(player)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.DumpIndividualPlayerStats:": {
        "prefix": "components.worldoverseer:DumpIndividualPlayerStats",
        "body": "components.worldoverseer:DumpIndividualPlayerStats(${1:stat},${2:event})",
        "description": "参数:(stat)<>[],(event)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.OnUnequipSkinnedItem:": {
        "prefix": "components.worldoverseer:OnUnequipSkinnedItem",
        "body": "components.worldoverseer:OnUnequipSkinnedItem(${1:player},${2:data})",
        "description": "参数:(player)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldoverseer.DumpPlayerStats:": {
        "prefix": "components.worldoverseer:DumpPlayerStats",
        "body": "components.worldoverseer:DumpPlayerStats()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldsettings.SetSetting:": {
        "prefix": "components.worldsettings:SetSetting",
        "body": "components.worldsettings:SetSetting(${1:setting},${2:value})",
        "description": "参数:(setting)<>[],(value)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettings.GetSetting:": {
        "prefix": "components.worldsettings:GetSetting",
        "body": "components.worldsettings:GetSetting(${1:setting})",
        "description": "参数:(setting)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.GetMaxTime:": {
        "prefix": "components.worldsettingstimer:GetMaxTime",
        "body": "components.worldsettingstimer:GetMaxTime(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.OnSave:": {
        "prefix": "components.worldsettingstimer:OnSave",
        "body": "components.worldsettingstimer:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.TimerEnabled:": {
        "prefix": "components.worldsettingstimer:TimerEnabled",
        "body": "components.worldsettingstimer:TimerEnabled(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.OnRemoveFromEntity:": {
        "prefix": "components.worldsettingstimer:OnRemoveFromEntity",
        "body": "components.worldsettingstimer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.TimerExists:": {
        "prefix": "components.worldsettingstimer:TimerExists",
        "body": "components.worldsettingstimer:TimerExists(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.IsPaused:": {
        "prefix": "components.worldsettingstimer:IsPaused",
        "body": "components.worldsettingstimer:IsPaused(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.ActiveTimerExists:": {
        "prefix": "components.worldsettingstimer:ActiveTimerExists",
        "body": "components.worldsettingstimer:ActiveTimerExists(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.SetMaxTime:": {
        "prefix": "components.worldsettingstimer:SetMaxTime",
        "body": "components.worldsettingstimer:SetMaxTime(${1:name},${2:time})",
        "description": "参数:(name)<>[],(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.StopTimer:": {
        "prefix": "components.worldsettingstimer:StopTimer",
        "body": "components.worldsettingstimer:StopTimer(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.GetDebugString:": {
        "prefix": "components.worldsettingstimer:GetDebugString",
        "body": "components.worldsettingstimer:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.PauseTimer:": {
        "prefix": "components.worldsettingstimer:PauseTimer",
        "body": "components.worldsettingstimer:PauseTimer(${1:name},${2:blocklongupdate})",
        "description": "参数:(name)<>[],(blocklongupdate)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.LongUpdate:": {
        "prefix": "components.worldsettingstimer:LongUpdate",
        "body": "components.worldsettingstimer:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.OnLoad:": {
        "prefix": "components.worldsettingstimer:OnLoad",
        "body": "components.worldsettingstimer:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.StartTimer:": {
        "prefix": "components.worldsettingstimer:StartTimer",
        "body": "components.worldsettingstimer:StartTimer(${1:name},${2:time},${3:paused},${4:initialtime_override},${5:blocklongupdate})",
        "description": "参数:(name)<>[],(time)<>[],(paused)<>[],(initialtime_override)<>[],(blocklongupdate)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.SetTimeLeft:": {
        "prefix": "components.worldsettingstimer:SetTimeLeft",
        "body": "components.worldsettingstimer:SetTimeLeft(${1:name},${2:time})",
        "description": "参数:(name)<>[],(time)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.ResumeTimer:": {
        "prefix": "components.worldsettingstimer:ResumeTimer",
        "body": "components.worldsettingstimer:ResumeTimer(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.AddTimer:": {
        "prefix": "components.worldsettingstimer:AddTimer",
        "body": "components.worldsettingstimer:AddTimer(${1:name},${2:maxtime},${3:enabled},${4:callback},${5:externallongupdate})",
        "description": "参数:(name)<>[],(maxtime)<>[],(enabled)<>[],(callback)<>[],(externallongupdate)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.GetTimeElapsed:": {
        "prefix": "components.worldsettingstimer:GetTimeElapsed",
        "body": "components.worldsettingstimer:GetTimeElapsed(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldsettingstimer.GetTimeLeft:": {
        "prefix": "components.worldsettingstimer:GetTimeLeft",
        "body": "components.worldsettingstimer:GetTimeLeft(${1:name})",
        "description": "参数:(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldwind.Start:": {
        "prefix": "components.worldwind:Start",
        "body": "components.worldwind:Start()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldwind.OnUpdate:": {
        "prefix": "components.worldwind:OnUpdate",
        "body": "components.worldwind:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "worldwind.GetDebugString:": {
        "prefix": "components.worldwind:GetDebugString",
        "body": "components.worldwind:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldwind.Stop:": {
        "prefix": "components.worldwind:Stop",
        "body": "components.worldwind:Stop()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "worldwind.GetWindAngle:": {
        "prefix": "components.worldwind:GetWindAngle",
        "body": "components.worldwind:GetWindAngle()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "writeable.IsWritten:": {
        "prefix": "components.writeable:IsWritten",
        "body": "components.writeable:IsWritten()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "writeable.SetText:": {
        "prefix": "components.writeable:SetText",
        "body": "components.writeable:SetText(${1:text})",
        "description": "参数:(text)<>[] 返回值:无返回值 贡献者:@"
    },
    "writeable.OnSave:": {
        "prefix": "components.writeable:OnSave",
        "body": "components.writeable:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "writeable.OnLoad:": {
        "prefix": "components.writeable:OnLoad",
        "body": "components.writeable:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "writeable.SetAutomaticDescriptionEnabled:": {
        "prefix": "components.writeable:SetAutomaticDescriptionEnabled",
        "body": "components.writeable:SetAutomaticDescriptionEnabled(${1:ad_enabled})",
        "description": "参数:(ad_enabled)<>[] 返回值:无返回值 贡献者:@"
    },
    "writeable.GetText:": {
        "prefix": "components.writeable:GetText",
        "body": "components.writeable:GetText()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "writeable.OnRemoveFromEntity:": {
        "prefix": "components.writeable:OnRemoveFromEntity",
        "body": "components.writeable:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "writeable.Write:": {
        "prefix": "components.writeable:Write",
        "body": "components.writeable:Write(${1:doer},${2:text})",
        "description": "参数:(doer)<>[],(text)<>[] 返回值:无返回值 贡献者:@"
    },
    "writeable.IsBeingWritten:": {
        "prefix": "components.writeable:IsBeingWritten",
        "body": "components.writeable:IsBeingWritten()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "writeable.SetOnWritingEndedFn:": {
        "prefix": "components.writeable:SetOnWritingEndedFn",
        "body": "components.writeable:SetOnWritingEndedFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "writeable.EndWriting:": {
        "prefix": "components.writeable:EndWriting",
        "body": "components.writeable:EndWriting()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "writeable.OnUpdate:": {
        "prefix": "components.writeable:OnUpdate",
        "body": "components.writeable:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "writeable.SetDefaultWriteable:": {
        "prefix": "components.writeable:SetDefaultWriteable",
        "body": "components.writeable:SetDefaultWriteable(${1:writeable_by_default})",
        "description": "参数:(writeable_by_default)<>[] 返回值:无返回值 贡献者:@"
    },
    "writeable.SetWriteableDistance:": {
        "prefix": "components.writeable:SetWriteableDistance",
        "body": "components.writeable:SetWriteableDistance(${1:dist})",
        "description": "参数:(dist)<>[] 返回值:无返回值 贡献者:@"
    },
    "writeable.BeginWriting:": {
        "prefix": "components.writeable:BeginWriting",
        "body": "components.writeable:BeginWriting(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "writeable.SetOnWrittenFn:": {
        "prefix": "components.writeable:SetOnWrittenFn",
        "body": "components.writeable:SetOnWrittenFn(${1:fn})",
        "description": "参数:(fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_sewer.OnSave:": {
        "prefix": "components.yotb_sewer:OnSave",
        "body": "components.yotb_sewer:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_sewer.OnLoad:": {
        "prefix": "components.yotb_sewer:OnLoad",
        "body": "components.yotb_sewer:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_sewer.GetDebugString:": {
        "prefix": "components.yotb_sewer:GetDebugString",
        "body": "components.yotb_sewer:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_sewer.IsDone:": {
        "prefix": "components.yotb_sewer:IsDone",
        "body": "components.yotb_sewer:IsDone()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_sewer.OnRemoveFromEntity:": {
        "prefix": "components.yotb_sewer:OnRemoveFromEntity",
        "body": "components.yotb_sewer:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_sewer.StartSewing:": {
        "prefix": "components.yotb_sewer:StartSewing",
        "body": "components.yotb_sewer:StartSewing(${1:doer})",
        "description": "参数:(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_sewer.StopSewing:": {
        "prefix": "components.yotb_sewer:StopSewing",
        "body": "components.yotb_sewer:StopSewing(${1:reason})",
        "description": "参数:(reason)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_sewer.LongUpdate:": {
        "prefix": "components.yotb_sewer:LongUpdate",
        "body": "components.yotb_sewer:LongUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_sewer.GetTimeToSew:": {
        "prefix": "components.yotb_sewer:GetTimeToSew",
        "body": "components.yotb_sewer:GetTimeToSew()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_sewer.CanSew:": {
        "prefix": "components.yotb_sewer:CanSew",
        "body": "components.yotb_sewer:CanSew()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_sewer.IsSewing:": {
        "prefix": "components.yotb_sewer:IsSewing",
        "body": "components.yotb_sewer:IsSewing()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_skinunlocker.GetSkin:": {
        "prefix": "components.yotb_skinunlocker:GetSkin",
        "body": "components.yotb_skinunlocker:GetSkin()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_skinunlocker.SetSkin:": {
        "prefix": "components.yotb_skinunlocker:SetSkin",
        "body": "components.yotb_skinunlocker:SetSkin(${1:skin})",
        "description": "参数:(skin)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.OnSave:": {
        "prefix": "components.yotb_stagemanager:OnSave",
        "body": "components.yotb_stagemanager:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.OnStageBuilt:": {
        "prefix": "components.yotb_stagemanager:OnStageBuilt",
        "body": "components.yotb_stagemanager:OnStageBuilt(${1:stage})",
        "description": "参数:(stage)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.OnContestCheckPoint:": {
        "prefix": "components.yotb_stagemanager:OnContestCheckPoint",
        "body": "components.yotb_stagemanager:OnContestCheckPoint(${1:stage})",
        "description": "参数:(stage)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.OnContestBegun:": {
        "prefix": "components.yotb_stagemanager:OnContestBegun",
        "body": "components.yotb_stagemanager:OnContestBegun(${1:active_stage})",
        "description": "参数:(active_stage)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.OnContestEnded:": {
        "prefix": "components.yotb_stagemanager:OnContestEnded",
        "body": "components.yotb_stagemanager:OnContestEnded()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.OnNewDay:": {
        "prefix": "components.yotb_stagemanager:OnNewDay",
        "body": "components.yotb_stagemanager:OnNewDay()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.GetActiveStage:": {
        "prefix": "components.yotb_stagemanager:GetActiveStage",
        "body": "components.yotb_stagemanager:GetActiveStage()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.LoadPostPass:": {
        "prefix": "components.yotb_stagemanager:LoadPostPass",
        "body": "components.yotb_stagemanager:LoadPostPass(${1:newents},${2:savedata})",
        "description": "参数:(newents)<>[],(savedata)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.EnableContest:": {
        "prefix": "components.yotb_stagemanager:EnableContest",
        "body": "components.yotb_stagemanager:EnableContest()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.IsContestEnabled:": {
        "prefix": "components.yotb_stagemanager:IsContestEnabled",
        "body": "components.yotb_stagemanager:IsContestEnabled()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.IsContestActive:": {
        "prefix": "components.yotb_stagemanager:IsContestActive",
        "body": "components.yotb_stagemanager:IsContestActive()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.OnStageDestroyed:": {
        "prefix": "components.yotb_stagemanager:OnStageDestroyed",
        "body": "components.yotb_stagemanager:OnStageDestroyed(${1:stage})",
        "description": "参数:(stage)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stagemanager.SetContestEnabled:": {
        "prefix": "components.yotb_stagemanager:SetContestEnabled",
        "body": "components.yotb_stagemanager:SetContestEnabled(${1:setting})",
        "description": "参数:(setting)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.Start_fail:": {
        "prefix": "components.yotb_stager:Start_fail",
        "body": "components.yotb_stager:Start_fail(${1:result})",
        "description": "参数:(result)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.AbortContest:": {
        "prefix": "components.yotb_stager:AbortContest",
        "body": "components.yotb_stager:AbortContest(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.Tossprizes:": {
        "prefix": "components.yotb_stager:Tossprizes",
        "body": "components.yotb_stager:Tossprizes()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.StartContest:": {
        "prefix": "components.yotb_stager:StartContest",
        "body": "components.yotb_stager:StartContest(${1:starter})",
        "description": "参数:(starter)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.StateParameters:": {
        "prefix": "components.yotb_stager:StateParameters",
        "body": "components.yotb_stager:StateParameters()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.LoadPostPass:": {
        "prefix": "components.yotb_stager:LoadPostPass",
        "body": "components.yotb_stager:LoadPostPass(${1:ents},${2:data})",
        "description": "参数:(ents)<>[],(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.unhighlitepost:": {
        "prefix": "components.yotb_stager:unhighlitepost",
        "body": "components.yotb_stager:unhighlitepost(${1:post})",
        "description": "参数:(post)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.Tossprize:": {
        "prefix": "components.yotb_stager:Tossprize",
        "body": "components.yotb_stager:Tossprize(${1:target},${2:pattern},${3:other})",
        "description": "参数:(target)<>[],(pattern)<>[],(other)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.cleartimers:": {
        "prefix": "components.yotb_stager:cleartimers",
        "body": "components.yotb_stager:cleartimers()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.Give_Patterns:": {
        "prefix": "components.yotb_stager:Give_Patterns",
        "body": "components.yotb_stager:Give_Patterns()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.GetComment:": {
        "prefix": "components.yotb_stager:GetComment",
        "body": "components.yotb_stager:GetComment(${1:post})",
        "description": "参数:(post)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.Endppraisedoll:": {
        "prefix": "components.yotb_stager:Endppraisedoll",
        "body": "components.yotb_stager:Endppraisedoll()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.SpawnVoice:": {
        "prefix": "components.yotb_stager:SpawnVoice",
        "body": "components.yotb_stager:SpawnVoice(${1:pos},${2:comment},${3:duration})",
        "description": "参数:(pos)<>[],(comment)<>[],(duration)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.appraisedoll3:": {
        "prefix": "components.yotb_stager:appraisedoll3",
        "body": "components.yotb_stager:appraisedoll3()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.BuildSuspense:": {
        "prefix": "components.yotb_stager:BuildSuspense",
        "body": "components.yotb_stager:BuildSuspense()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.RemoveTrainer:": {
        "prefix": "components.yotb_stager:RemoveTrainer",
        "body": "components.yotb_stager:RemoveTrainer(${1:trainer})",
        "description": "参数:(trainer)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.appraisedoll2:": {
        "prefix": "components.yotb_stager:appraisedoll2",
        "body": "components.yotb_stager:appraisedoll2()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.TestStartContest:": {
        "prefix": "components.yotb_stager:TestStartContest",
        "body": "components.yotb_stager:TestStartContest(${1:starter})",
        "description": "参数:(starter)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.AdvanceQueue:": {
        "prefix": "components.yotb_stager:AdvanceQueue",
        "body": "components.yotb_stager:AdvanceQueue(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.GetFurthest:": {
        "prefix": "components.yotb_stager:GetFurthest",
        "body": "components.yotb_stager:GetFurthest(${1:values})",
        "description": "参数:(values)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.GetParameterLineDoll:": {
        "prefix": "components.yotb_stager:GetParameterLineDoll",
        "body": "components.yotb_stager:GetParameterLineDoll(${1:category})",
        "description": "参数:(category)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.EnableContest:": {
        "prefix": "components.yotb_stager:EnableContest",
        "body": "components.yotb_stager:EnableContest()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.RemoveTempTrainer:": {
        "prefix": "components.yotb_stager:RemoveTempTrainer",
        "body": "components.yotb_stager:RemoveTempTrainer(${1:trainer})",
        "description": "参数:(trainer)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.RemoveTempBeef:": {
        "prefix": "components.yotb_stager:RemoveTempBeef",
        "body": "components.yotb_stager:RemoveTempBeef(${1:beefalo})",
        "description": "参数:(beefalo)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.GetClosest:": {
        "prefix": "components.yotb_stager:GetClosest",
        "body": "components.yotb_stager:GetClosest(${1:values})",
        "description": "参数:(values)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.Give_consoleprizes:": {
        "prefix": "components.yotb_stager:Give_consoleprizes",
        "body": "components.yotb_stager:Give_consoleprizes()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.DeclareWinner:": {
        "prefix": "components.yotb_stager:DeclareWinner",
        "body": "components.yotb_stager:DeclareWinner()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.appraisedoll:": {
        "prefix": "components.yotb_stager:appraisedoll",
        "body": "components.yotb_stager:appraisedoll(${1:doll})",
        "description": "参数:(doll)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.EndContest_phase2:": {
        "prefix": "components.yotb_stager:EndContest_phase2",
        "body": "components.yotb_stager:EndContest_phase2()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.EndContest:": {
        "prefix": "components.yotb_stager:EndContest",
        "body": "components.yotb_stager:EndContest(${1:reason})",
        "description": "参数:(reason)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.GetRandom:": {
        "prefix": "components.yotb_stager:GetRandom",
        "body": "components.yotb_stager:GetRandom()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.AwardVictors:": {
        "prefix": "components.yotb_stager:AwardVictors",
        "body": "components.yotb_stager:AwardVictors()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.SpawnVoiceName:": {
        "prefix": "components.yotb_stager:SpawnVoiceName",
        "body": "components.yotb_stager:SpawnVoiceName(${1:rank},${2:speech})",
        "description": "参数:(rank)<>[],(speech)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.GetBeefScore:": {
        "prefix": "components.yotb_stager:GetBeefScore",
        "body": "components.yotb_stager:GetBeefScore(${1:beef})",
        "description": "参数:(beef)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.Start_phase3:": {
        "prefix": "components.yotb_stager:Start_phase3",
        "body": "components.yotb_stager:Start_phase3()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.CheckForMarks:": {
        "prefix": "components.yotb_stager:CheckForMarks",
        "body": "components.yotb_stager:CheckForMarks(${1:post},${2:doer})",
        "description": "参数:(post)<>[],(doer)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.highlitepost:": {
        "prefix": "components.yotb_stager:highlitepost",
        "body": "components.yotb_stager:highlitepost(${1:post})",
        "description": "参数:(post)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.MakeRandomBeef:": {
        "prefix": "components.yotb_stager:MakeRandomBeef",
        "body": "components.yotb_stager:MakeRandomBeef(${1:post},${2:name})",
        "description": "参数:(post)<>[],(name)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.StateParameters_Phase2:": {
        "prefix": "components.yotb_stager:StateParameters_Phase2",
        "body": "components.yotb_stager:StateParameters_Phase2()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.GetParameterLine:": {
        "prefix": "components.yotb_stager:GetParameterLine",
        "body": "components.yotb_stager:GetParameterLine(${1:category})",
        "description": "参数:(category)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.Start_phase2:": {
        "prefix": "components.yotb_stager:Start_phase2",
        "body": "components.yotb_stager:Start_phase2()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotb_stager.DisableContest:": {
        "prefix": "components.yotb_stager:DisableContest",
        "body": "components.yotb_stager:DisableContest()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.IsExhausted:": {
        "prefix": "components.yotc_racecompetitor:IsExhausted",
        "body": "components.yotc_racecompetitor:IsExhausted()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.OnEntitySleep:": {
        "prefix": "components.yotc_racecompetitor:OnEntitySleep",
        "body": "components.yotc_racecompetitor:OnEntitySleep()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.SetRaceFinishedFn:": {
        "prefix": "components.yotc_racecompetitor:SetRaceFinishedFn",
        "body": "components.yotc_racecompetitor:SetRaceFinishedFn(${1:race_finished_fn})",
        "description": "参数:(race_finished_fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.OnRemoveFromEntity:": {
        "prefix": "components.yotc_racecompetitor:OnRemoveFromEntity",
        "body": "components.yotc_racecompetitor:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.RecoverStamina:": {
        "prefix": "components.yotc_racecompetitor:RecoverStamina",
        "body": "components.yotc_racecompetitor:RecoverStamina()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.GetRaceDistance:": {
        "prefix": "components.yotc_racecompetitor:GetRaceDistance",
        "body": "components.yotc_racecompetitor:GetRaceDistance()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.StartRace:": {
        "prefix": "components.yotc_racecompetitor:StartRace",
        "body": "components.yotc_racecompetitor:StartRace(${1:delay})",
        "description": "参数:(delay)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.OnAllRacersFinished:": {
        "prefix": "components.yotc_racecompetitor:OnAllRacersFinished",
        "body": "components.yotc_racecompetitor:OnAllRacersFinished(${1:prize_table})",
        "description": "参数:(prize_table)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.IsStartingLate:": {
        "prefix": "components.yotc_racecompetitor:IsStartingLate",
        "body": "components.yotc_racecompetitor:IsStartingLate()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.SetRaceOverFn:": {
        "prefix": "components.yotc_racecompetitor:SetRaceOverFn",
        "body": "components.yotc_racecompetitor:SetRaceOverFn(${1:race_over_fn})",
        "description": "参数:(race_over_fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.OnRemoveEntity:": {
        "prefix": "components.yotc_racecompetitor:OnRemoveEntity",
        "body": "components.yotc_racecompetitor:OnRemoveEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.SetRaceStartPoint:": {
        "prefix": "components.yotc_racecompetitor:SetRaceStartPoint",
        "body": "components.yotc_racecompetitor:SetRaceStartPoint(${1:start_point_entity})",
        "description": "参数:(start_point_entity)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.SetRaceBegunFn:": {
        "prefix": "components.yotc_racecompetitor:SetRaceBegunFn",
        "body": "components.yotc_racecompetitor:SetRaceBegunFn(${1:race_begun_fn})",
        "description": "参数:(race_begun_fn)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.AbortRace:": {
        "prefix": "components.yotc_racecompetitor:AbortRace",
        "body": "components.yotc_racecompetitor:AbortRace(${1:prize_table})",
        "description": "参数:(prize_table)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.GetDebugString:": {
        "prefix": "components.yotc_racecompetitor:GetDebugString",
        "body": "components.yotc_racecompetitor:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.OnUpdate:": {
        "prefix": "components.yotc_racecompetitor:OnUpdate",
        "body": "components.yotc_racecompetitor:OnUpdate(${1:dt})",
        "description": "参数:(dt)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.FinishRace:": {
        "prefix": "components.yotc_racecompetitor:FinishRace",
        "body": "components.yotc_racecompetitor:FinishRace()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor.CollectPrize:": {
        "prefix": "components.yotc_racecompetitor:CollectPrize",
        "body": "components.yotc_racecompetitor:CollectPrize()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor._FindNextCheckPoint:": {
        "prefix": "components.yotc_racecompetitor:_FindNextCheckPoint",
        "body": "components.yotc_racecompetitor:_FindNextCheckPoint()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racecompetitor._SetCheckPoint:": {
        "prefix": "components.yotc_racecompetitor:_SetCheckPoint",
        "body": "components.yotc_racecompetitor:_SetCheckPoint(${1:checkpoint},${2:is_starting_line})",
        "description": "参数:(checkpoint)<>[],(is_starting_line)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racestart.CanInteract:": {
        "prefix": "components.yotc_racestart:CanInteract",
        "body": "components.yotc_racestart:CanInteract()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestart.EndRace:": {
        "prefix": "components.yotc_racestart:EndRace",
        "body": "components.yotc_racestart:EndRace()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestart.OnRemoveFromEntity:": {
        "prefix": "components.yotc_racestart:OnRemoveFromEntity",
        "body": "components.yotc_racestart:OnRemoveFromEntity()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestart.StartRace:": {
        "prefix": "components.yotc_racestart:StartRace",
        "body": "components.yotc_racestart:StartRace()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.OnSave:": {
        "prefix": "components.yotc_racestats:OnSave",
        "body": "components.yotc_racestats:OnSave()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.SaveCurrentStatsAsBaseline:": {
        "prefix": "components.yotc_racestats:SaveCurrentStatsAsBaseline",
        "body": "components.yotc_racestats:SaveCurrentStatsAsBaseline()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.ModifyReaction:": {
        "prefix": "components.yotc_racestats:ModifyReaction",
        "body": "components.yotc_racestats:ModifyReaction(${1:point_mod})",
        "description": "参数:(point_mod)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.OnLoad:": {
        "prefix": "components.yotc_racestats:OnLoad",
        "body": "components.yotc_racestats:OnLoad(${1:data})",
        "description": "参数:(data)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.GetDebugString:": {
        "prefix": "components.yotc_racestats:GetDebugString",
        "body": "components.yotc_racestats:GetDebugString()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.DegradePoints:": {
        "prefix": "components.yotc_racestats:DegradePoints",
        "body": "components.yotc_racestats:DegradePoints(${1:num_points})",
        "description": "参数:(num_points)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.GetNumStatPoints:": {
        "prefix": "components.yotc_racestats:GetNumStatPoints",
        "body": "components.yotc_racestats:GetNumStatPoints()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.GetSpeedModifier:": {
        "prefix": "components.yotc_racestats:GetSpeedModifier",
        "body": "components.yotc_racestats:GetSpeedModifier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.ModifySpeed:": {
        "prefix": "components.yotc_racestats:ModifySpeed",
        "body": "components.yotc_racestats:ModifySpeed(${1:point_mod})",
        "description": "参数:(point_mod)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.AddRandomPointSpread:": {
        "prefix": "components.yotc_racestats:AddRandomPointSpread",
        "body": "components.yotc_racestats:AddRandomPointSpread(${1:num_points})",
        "description": "参数:(num_points)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.GetStaminaModifier:": {
        "prefix": "components.yotc_racestats:GetStaminaModifier",
        "body": "components.yotc_racestats:GetStaminaModifier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.GetBestStats:": {
        "prefix": "components.yotc_racestats:GetBestStats",
        "body": "components.yotc_racestats:GetBestStats()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.ModifyStamina:": {
        "prefix": "components.yotc_racestats:ModifyStamina",
        "body": "components.yotc_racestats:ModifyStamina(${1:point_mod})",
        "description": "参数:(point_mod)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.ModifyDirection:": {
        "prefix": "components.yotc_racestats:ModifyDirection",
        "body": "components.yotc_racestats:ModifyDirection(${1:point_mod})",
        "description": "参数:(point_mod)<>[] 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.GetDirectionModifier:": {
        "prefix": "components.yotc_racestats:GetDirectionModifier",
        "body": "components.yotc_racestats:GetDirectionModifier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "yotc_racestats.GetReactionModifier:": {
        "prefix": "components.yotc_racestats:GetReactionModifier",
        "body": "components.yotc_racestats:GetReactionModifier()",
        "description": "参数: 返回值:无返回值 贡献者:@"
    },
    "成为贡献者:组件": {
        "prefix": "contri+components",
        "body": "components.${1:组件名}[\"${2:方法名}\"] = {\n\tparams = {\n\t\t-- 此处填参数,如果无参数,请留空\n\t\t-- param: 参数名(自动生成) explain: 参数说明(万能的群友们,请帮我注释吧) type: 参数类型\n\t\t-- {param = \"\", explain = \"\", type = \"\"},\n\t\t$3\n\t},\n\treturns = {\n\t\t-- 此处填返回值,如果无返回值,请留空\n\t\t-- 返回格式 explain: 参数说明(万能的群友们,请帮我注释吧) type: 参数类型\n\t\t-- {explain = \"\", type = \"\"}\n\t\t$4\n\t},\n\ttips = \"$5\", -- 简明扼要的说明方法的用途\n\tauthor = \"$6\", -- 贡献者id (填上您的名字,作为贡献者,你的名字会出现在补全提示中)\n},",
        "description": "组件以外的单个方法也可以用此种形式来注释,成为贡献者,让饥荒社区变得更好吧~ 上不去github,也可以直接丢给我"
    },
    "Image:widget添加Child": {
        "prefix": "AddChild",
        "body": "AddChild(\"$1\")",
        "description": "widget添加Child"
    },
    "Image:设置可以被透明的最小和最大值": {
        "prefix": "SetAlphaRange",
        "body": "SetAlphaRange(${1:min}, ${2:max})",
        "description": "设置可以被透明的最小和最大值"
    },
    "Image:设定成像": {
        "prefix": "SetTexture",
        "body": "SetTexture(\"images/$1.xml\", \"$2.tex\")",
        "description": "设定成像"
    },
    "Image:设置指针悬停时的图像": {
        "prefix": "SetMouseOverTexture",
        "body": "SetMouseOverTexture(${1:atlas}, ${2:tex})",
        "description": "设置指针悬停时的图像"
    },
    "Image:设置禁用时的图像": {
        "prefix": "SetDisabledTexture",
        "body": "SetDisabledTexture(${1:atlas}, ${2:tex})",
        "description": "设置禁用时的图像"
    },
    "Image:设置图像大小(像素级， 自动缩放大小)": {
        "prefix": "SetSize",
        "body": "SetSize(${1:w}, ${2:h})",
        "description": "设置图像大小(像素级， 自动缩放大小)"
    },
    "Image:获取图像大小比例(像素级)": {
        "prefix": "GetSize",
        "body": "GetSize()",
        "description": "获取图像大小比例(像素级)"
    },
    "Image:按设定像素 / 原始大小比例": {
        "prefix": "ScaleToSize",
        "body": "ScaleToSize(${1:w}, ${2:h})",
        "description": "按设定像素 / 原始大小比例"
    },
    "Image:设置颜色覆盖": {
        "prefix": "SetTint",
        "body": "SetTint(${1:r},${2:g},${3:b},${4:a})",
        "description": "设置颜色覆盖"
    },
    "Image:按比例设置透明度": {
        "prefix": "SetFadeAlpha",
        "body": "SetFadeAlpha(${1:a}, ${2:skipChildren}a)",
        "description": "按比例设置透明度"
    },
    "Image:设置垂直方向中心点": {
        "prefix": "SetVRegPoint",
        "body": "SetVRegPoint(ANCHOR_${1:MIDDLE})",
        "description": "设置垂直方向中心点"
    },
    "Image:设置水平方向中心点": {
        "prefix": "SetHRegPoint",
        "body": "SetHRegPoint(ANCHOR_${1:MIDDLE})",
        "description": "设置水平方向中心点"
    },
    "Image:设置UV采样缩放": {
        "prefix": "SetUVScale",
        "body": "SetUVScale(${1:xScale}, ${2:yScale})",
        "description": "设置UV采样缩放"
    },
    "Image:设置混合模式（0-6）": {
        "prefix": "SetBlendMode",
        "body": "SetBlendMode(BLENDMODE.Additive)",
        "description": "设置混合模式（0-6）"
    },
    "打印输出": {
        "prefix": "print",
        "body": [
            "print('$1')",
            "$0"
        ],
        "description": "在控制台打印信息"
    },
    "定义函数": {
        "prefix": "func",
        "body": [
            "function $1($2)",
            "\t$0",
            "end"
        ],
        "description": "定义一个新函数"
    },
    "For循环": {
        "prefix": "for",
        "body": [
            "for $1 = $2 do",
            "\t$0",
            "end"
        ],
        "description": "创建一个for循环"
    },
    "While循环": {
        "prefix": "while",
        "body": [
            "while $1 do",
            "\t$0",
            "end"
        ],
        "description": "创建一个while循环"
    },
    "If条件": {
        "prefix": "if",
        "body": [
            "if $1 then",
            "\t$0",
            "end"
        ],
        "description": "创建一个if条件语句"
    },
    "创建表": {
        "prefix": "table",
        "body": [
            "local $1 = {",
            "\t$0",
            "}"
        ],
        "description": "初始化一个新的表"
    },
    "遍历表": {
        "prefix": "forpair",
        "body": [
            "for $1, $2 in pairs($3) do",
            "\t$0",
            "end"
        ],
        "description": "遍历表中的元素"
    },
    "索引遍历表": {
        "prefix": "foripair",
        "body": [
            "for $1, $2 in ipairs($3) do",
            "\t$0",
            "end"
        ],
        "description": "按索引遍历表中的元素"
    },
    "局部变量": {
        "prefix": "local",
        "body": [
            "local $1 = $2",
            "$0"
        ],
        "description": "声明一个局部变量"
    },
    "全局变量": {
        "prefix": "global",
        "body": [
            "$1 = $2",
            "$0"
        ],
        "description": "声明一个全局变量"
    },
    "返回值": {
        "prefix": "return",
        "body": [
            "return $1",
            "$0"
        ],
        "description": "从函数返回一个或多个值"
    },
    "单行注释": {
        "prefix": "comment",
        "body": [
            "-- $1",
            "$0"
        ],
        "description": "添加单行注释"
    },
    "多行注释": {
        "prefix": "multiline-comment",
        "body": [
            "--[[",
            "$1",
            "]]",
            "$0"
        ],
        "description": "添加多行注释"
    },
    "异常处理": {
        "prefix": "exception",
        "body": [
            "local status, result = pcall(function()",
            "\t$1",
            "end)",
            "if not status then",
            "\tprint('Error: ' .. result)",
            "\t$0",
            "else",
            "\t$2",
            "end"
        ],
        "description": "捕获并处理异常"
    },
    "创建默认的类": {
        "prefix": "Class1",
        "body": "local ${1:ClassName} = Class(function(self, inst)\n\tself.inst = inst \nend)",
        "description": "添加代码片段 local ClassName = Class(function(self, inst)\n\tself.inst = inst \nend)"
    },
    "创建带有触发属性的类": {
        "prefix": "Class2",
        "body": "local ${1:ClassName} = Class(function(self, inst)\n\tself.inst = inst\nend,\nnil,\n{\n})",
        "description": "local ClassName = Class(function(self, inst)\n\tself.inst = inst\nend,\nnil,\n{\n})"
    },
    "修改类API": {
        "prefix": "AddClassPostConstruct",
        "body": "AddClassPostConstruct(\"${1:package}\", function(self)\n\t${0}\nend)",
        "description": "添加修改类API通用函数片段"
    },
    "修改组件API": {
        "prefix": "AddComponentPostInit",
        "body": "AddComponentPostInit(\"${1:ComponentName}\", function(self)\n\t${0}\nend)",
        "description": "添加修改组件API通用函数片段"
    },
    "修改预制体API": {
        "prefix": "AddPrefabPostInit",
        "body": "AddPrefabPostInit(\"${1:PrefabName}\", function(inst)\n\t${0}\nend)",
        "description": "添加修改预制体API通用函数片段"
    },
    "修改玩家API": {
        "prefix": "AddPlayerPostInit",
        "body": "AddPlayerPostInit(function(inst)\n\t${0}\nend)",
        "description": "添加修改玩家API通用函数片段"
    },
    "修改大脑API": {
        "prefix": "AddBrainPostInit",
        "body": "AddBrainPostInit(\"${1:BrainName}\", function(self)\n\t${0}\nend)",
        "description": "添加修改修改大脑API通用函数片段"
    },
    "修改状态图API": {
        "prefix": "AddStategraphPostInit",
        "body": "AddStategraphPostInit(\"${1:StateGraph}\", function(self)\n\t${0}\nend)",
        "description": "添加修改修改状态图(SG)API通用函数片段,初始化时最后执行"
    },
    "添加或覆盖SG的事件监听器API": {
        "prefix": "AddStategraphEvent",
        "body": "AddStategraphEvent(\"${1:StateGraph}\", EventHandler(\"event\", function(inst)\n\nend))",
        "description": "添加SG的事件监听器API通用函数片段"
    },
    "添加或覆盖SG的状态API": {
        "prefix": "AddStategraphState",
        "body": "AddStategraphState(\"${1:StateGraph}\", State{\n\tname = ${2:statename},\n \ttags = {},\n \tonenter = function(inst)\n \t\tinst:PerformBufferedAction()\n \tend,\n \ttimeline=\n\t{\n\t\tTimeEvent(1*FRAMES, function(inst) end),\n\t},\n \tonexit = function(inst)\n \t\tinst.sg:GoToState(\"idle\") \n\tend\n})",
        "description": "添加SG的状态API通用函数片段"
    },
    "添加或覆盖SG的动作触发器API": {
        "prefix": "AddStategraphActionHandler",
        "body": "AddStategraphActionHandler(\"${1:StateGraph}\", ActionHandler(ACTIONS.${2:XXX}, \"give\"))",
        "description": "添加SG的动作触发器API通用函数片段"
    },
    "修改配方API": {
        "prefix": "AddRecipePostInit",
        "body": "AddRecipePostInit(\"${1:RecipeName}\", function(self)\n\t${0}\nend)",
        "description": "添加修改修改配方API通用函数片段"
    },
    "自定义原型机API": {
        "prefix": "AddPrototyperDef",
        "body": "AddPrototyperDef(\"${1:prefab}\", {\n \ticon_atlas = \"images/xxxx.xml\",\n \ticon_image = \"xxxx.tex\",\n \tis_crafting_station = true,\n \taction_str = \"制作\",\n \tfilter_text = \"过滤器名称\"\n})",
        "description": "添加自定义原型机API通用函数片段,is_crafting_station在附近才能制作"
    },
    "分解配方API": {
        "prefix": "AddDeconstructRecipe",
        "body": "AddDeconstructRecipe(\"${1:prefab}\", {Ingredient(\"${2:prefab}\", 1)})",
        "description": "添加分解配方API,供[分解法杖]拆解"
    },
    "动作API": {
        "prefix": "AddAction",
        "body": "AddAction(\"${1:id}\", \"动作名称\", function(act)\n\tlocal inst = act.doer\n \tlocal target = act.target\n \tlocal invobject = act.invobject\n \tlocal pos = act.pos\n\n \treturn true\nend)",
        "description": "添加动作API"
    },
    "组件动作API": {
        "prefix": "AddComponentAction",
        "body": "AddComponentAction(\"${1:EQUIPPED}\", \"${2:componentname}\", function(inst, doer, target, actions, right)\n \tif right then\n \t\ttable.insert(actions, ACTIONS.xxx)\n \tend\nend)",
        "description": "为某组件绑定动作.默认是为组件添加装备栏类型动作."
    },
    "添加Mod角色API": {
        "prefix": "AddModCharacter",
        "body": "AddModCharacter(name, gender, modes)",
        "description": "添加Mod角色API"
    },
    "小地图图标API": {
        "prefix": "AddMinimapAtlas",
        "body": "AddMinimapAtlas(\"minimap/${1:prefab}.xml\")",
        "description": "添加小地图图标API"
    },
    "获取mod设置": {
        "prefix": "GetModConfigData",
        "body": "local ${1:name} = GetModConfigData(\"${2:$1}\")",
        "description": "获取当前mod配置项的值"
    },
    "修改世界配置API": {
        "prefix": "AddLevelPreInitAny",
        "body": "AddLevelPreInitAny(function(self)\n\t${0}\nend)",
        "description": "添加修改世界配置API通用函数片段"
    },
    "实体添加某组件": {
        "prefix": "inst:AddComponent",
        "body": "inst:AddComponent(\"${1:ComponentName}\")",
        "description": "None"
    },
    "实体移除某组件": {
        "prefix": "inst:RemoveComponent",
        "body": "inst:RemoveComponent(\"${1:ComponentName}\")",
        "description": "None"
    },
    "检查全局变量": {
        "prefix": "rawget",
        "body": "if rawget(GLOBAL, \"${1:TheSim}\") then\n\t${0}\nend",
        "description": "不触发任何元方法的情况下 获取 table[index] 的值.判断是否存在全局变量"
    },
    "全局模拟器": {
        "prefix": "TheSim",
        "body": "TheSim",
        "description": "userdata类型,是c层暴露给lua里使用的,游戏系统本身"
    },
    "查找指定范围内实体": {
        "prefix": "TheSim:FindEntities",
        "body": "TheSim:FindEntities(x, y or 0, z, radius or 4, must_have_tags, cant_have_tags, must_have_one_of_tags)",
        "description": "must_have_tags:必须具有全部标签的, cant_have_tags:从结果中排除标签的, must_have_one_of_tags:至少有一个标签的"
    },
    "输入": {
        "prefix": "TheInput",
        "body": "TheInput",
        "description": "(仅客户端的)是集成了各种输入方法的类.与TheInputProxy有关"
    },
    "前端": {
        "prefix": "TheFrontEnd",
        "body": "TheFrontEnd",
        "description": "(仅客户端的)通常在modworldgenmain.lua文件或者Ui文件里"
    },
    "摄像机": {
        "prefix": "TheCamera",
        "body": "TheCamera",
        "description": "(仅客户端的)是游戏中玩家身后的摄像机一般是跟随玩家."
    },
    "当前客户端玩家": {
        "prefix": "ThePlayer",
        "body": "ThePlayer",
        "description": "(仅客户端)是玩家实体的引用,在服务器上值为nil"
    },
    "当前世界": {
        "prefix": "TheWorld",
        "body": "TheWorld",
        "description": "是世界实体的引用,双端都有.每个独立线程都是有一个."
    },
    "全局网络单例": {
        "prefix": "TheNet",
        "body": "TheNet",
        "description": "userdata类型,是与网络相关联的内容"
    },
    "当前分片": {
        "prefix": "TheShard",
        "body": "TheShard",
        "description": "userdata类型,与配置相关,TheShard:IsMaster()判断是否为主世界"
    },
    "常量表": {
        "prefix": "TUNING",
        "body": "TUNING",
        "description": "各类的数值存放在这个表里"
    },
    "字符串集": {
        "prefix": "STRINGS",
        "body": "STRINGS",
        "description": "各类的字符串存放在这个表里"
    },
    "全局表": {
        "prefix": "GLOBAL",
        "body": "GLOBAL",
        "description": "指向饥荒本体环境的全局表"
    },
    "注册服务器rpc": {
        "prefix": "AddModRPCHandler",
        "body": "AddModRPCHandler(\"${1:name}\",\"${2:$1}\", function(player, str)\n\tif player == nil or str == nil then return end\n\tlocal success, savedata = RunInSandboxSafe(str)\n\tif success then\n\n\telse\n\t\tprint(\"服务器接收RPC失败\")\n\tend\nend)",
        "description": "参数1:命名空间;参数2:RPC名称;参数3:执行函数(形参1:玩家<code>是发起的客机对之服务器玩家</code>, ...).前两个是唯一标识符"
    },
    "发送服务器RPC调用": {
        "prefix": "SendModRPCToServer",
        "body": "SendModRPCToServer(GetModRPC(\"${1:name}\", \"${2:$1}\"), DataDumper({\"参数\"}, nil, true))",
        "description": "从客机发送指令给主机.参数1:通过GetModRPC(形参1:命名空间,形参2:RPC名称)获取对应RPC;参数2:附带参数对应str"
    },
    "注册客户端rpc": {
        "prefix": "AddClientModRPCHandler",
        "body": "AddClientModRPCHandler(\"${1:name}\",\"${2:$1}\", function(str)\n\tif str == nil then return end\n\tlocal success, savedata = RunInSandboxSafe(str)\n\tif success then\n\n\telse\n\t\tprint(\"客户端接收RPC失败\")\n\tend\nend)",
        "description": "参数1:命名空间;参数2:RPC名称;参数3:执行函数(...).前两个是唯一标识符"
    },
    "发送客户端RPC调用": {
        "prefix": "SendModRPCToClient",
        "body": "SendModRPCToClient(GetClientModRPC(\"${1:name}\", \"${2:$1}\"), userid or nil, DataDumper({\"参数\"}, nil, true))",
        "description": "从主机发送指令给客机.参数1:GetClientModRPC(形参1:命名空间,形参2:RPC名称)获取对应RPC;参数2:userid<code>可为nil|字符串|字符串表</code>;参数3:附带参数对应str"
    },
    "注册服务器分片rpc": {
        "prefix": "AddShardModRPCHandler",
        "body": "AddShardModRPCHandler(\"${1:name}\",\"${2:$1}\", function(wordid, str)\n\tif wordid == nil or str == nil then return end\n\tlocal success, savedata = RunInSandboxSafe(str)\n\tif success then\n\n\telse\n\t\tprint(\"分片接收RPC失败\")\n\tend\nend)",
        "description": "参数1:命名空间;参数2:RPC名称;参数3:执行函数(...).前两个是唯一标识符"
    },
    "发送服务器其他世界RPC调用": {
        "prefix": "SendModRPCToShard",
        "body": "SendModRPCToShard(GetShardModRPC(\"${1:name}\", \"${2:$1}\"), sender_list or nil, DataDumper({\"参数\"}, nil, true))",
        "description": "从主机分片发送指令给主机其他分片.参数1:GetShardModRPC(形参1:命名空间,形参2:RPC名称)获取对应RPC;参数2:sender_list<code>可为nil|字符串|字符串表</code>;参数3:附带参数对应str"
    },
    "网络变量": {
        "prefix": "net_bool",
        "body": "inst.${1:_xx} = net_bool(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "仅两个值true|false"
    },
    "网络变量_2": {
        "prefix": "net_tinybyte",
        "body": "inst.${1:_xx} = net_tinybyte(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "数值范围是[0..7]"
    },
    "网络变量_3": {
        "prefix": "net_smallbyte",
        "body": "inst.${1:_xx} = net_smallbyte(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "数值范围是[0..63]"
    },
    "网络变量_4": {
        "prefix": "net_byte",
        "body": "inst.${1:_xx} = net_byte(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "数值范围是[0..255]"
    },
    "网络变量_5": {
        "prefix": "net_shortint",
        "body": "inst.${1:_xx} = net_shortint(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "数值范围是[-32767..32767]"
    },
    "网络变量_6": {
        "prefix": "net_ushortint",
        "body": "inst.${1:_xx} = net_ushortint(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "数值范围是[0..65535]"
    },
    "网络变量_7": {
        "prefix": "net_int",
        "body": "inst.${1:_xx} = net_int(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "数值范围是[-2147483647..2147483647]"
    },
    "网络变量_8": {
        "prefix": "net_uint",
        "body": "inst.${1:_xx} = net_uint(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "数值范围是[0..4294967295]"
    },
    "网络变量_9": {
        "prefix": "net_float",
        "body": "inst.${1:_xx} = net_float(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "32位浮点数"
    },
    "网络变量_10": {
        "prefix": "net_hash",
        "body": "inst.${1:_xx} = net_hash(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "可以通过哈希或字符串设置（自动转换为hash），但仅在读取时返回哈希值。网络成本与net_uint相同"
    },
    "网络变量_11": {
        "prefix": "net_string",
        "body": "inst.${1:_xx} = net_string(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "可变长度字符串"
    },
    "网络变量_12": {
        "prefix": "net_entity",
        "body": "inst.${1:_xx} = net_entity(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "实体实例"
    },
    "网络变量_13": {
        "prefix": "net_bytearray",
        "body": "inst.${1:_xx} = net_bytearray(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "最大31,成员8-bit(与net_byte相当)"
    },
    "网络变量_14": {
        "prefix": "net_smallbytearray",
        "body": "inst.${1:_xx} = net_smallbytearray(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "最大31,成员6-bit(与net_smallbyte相当)"
    },
    "网络变量_15": {
        "prefix": "net_ushortarray",
        "body": "inst.${1:_xx} = net_ushortarray(inst.GUID, \"${2:$1}\",\"${3:$1}\")",
        "description": "最大31,成员16-bit(与net_ushortint相当)"
    },
    "添加预制体信息": {
        "prefix": "STRINGS+PREFAB",
        "body": "STRINGS.NAMES.${1:PREFABNAME} = \"${2:$1}\"\nSTRINGS.RECIPE_DESC.${3:$1} = \"${4:$1} 科技栏描述\"\nSTRINGS.CHARACTERS.GENERIC.DESCRIBE.${5:$1} = \"${6:$1} 的检查描述\"",
        "description": "设置预制体名称,科技栏描述,检查描述"
    },
    "设置mod环境": {
        "prefix": "GLOBAL+env",
        "body": "GLOBAL.setmetatable(env,{__index=function(t,k) return GLOBAL.rawget(GLOBAL,k) end})",
        "description": "设置在mod环境中可以直接访问本体环境中的全局参数"
    },
    "鼠标的世界坐标": {
        "prefix": "mouse+",
        "body": "TheInput:GetWorldPosition():Get()",
        "description": "(仅客户端的)返回鼠标所在的世界坐标"
    },
    "打印表": {
        "prefix": "dumptable",
        "body": "print(dumptable(${1:table}, 1, 5))",
        "description": "打印表1~5层"
    },
    "添加资源": {
        "prefix": "Asset",
        "body": "Asset(\"$1\",\"$2\"),\n$0",
        "description": "添加资源"
    },
    "三维向量": {
        "prefix": "Vector3",
        "body": "Vector3(${1:0}, ${2:$1}, ${3:$1})",
        "description": "创建三维向量片段"
    },
    "事件监听": {
        "prefix": "ListenForEvent",
        "body": "ListenForEvent(\"${1:事件名称}\", function(inst, data) end,inst)",
        "description": "添加注册事件监听器"
    },
    "RemoveEventCallback": {
        "prefix": "RemoveEventCallback",
        "body": "RemoveEventCallback",
        "description": "dst-未定义的"
    },
    "触发事件": {
        "prefix": "PushEvent",
        "body": "PushEvent(\"${1:事件名称}\", {})",
        "description": "添加触发事件"
    },
    "定时器": {
        "prefix": "DoTaskInTime",
        "body": "DoTaskInTime(${1:1},function()${0}end)",
        "description": "添加定时器"
    },
    "周期定时器": {
        "prefix": "DoPeriodicTask",
        "body": "DoPeriodicTask(${1:1},function()${0}end,0)",
        "description": "添加周期定时器"
    },
    "BufferedAction": {
        "prefix": "BufferedAction",
        "body": "BufferedAction",
        "description": "dst-未定义的"
    },
    "创建缓冲动作": {
        "prefix": "BufferedAction+",
        "body": "local action = BufferedAction(inst, target or nil, ACTIONS.${1:XXX}, invobject or nil, pos or nil, nil, distance or nil)",
        "description": "添加一个缓冲动作代码片段"
    },
    "CreateEntity": {
        "prefix": "CreateEntity",
        "body": "CreateEntity",
        "description": "dst-未定义的"
    },
    "Physics": {
        "prefix": "Physics",
        "body": "Physics",
        "description": "dst-未定义的"
    },
    "AnimState": {
        "prefix": "AnimState",
        "body": "AnimState",
        "description": "dst-未定义的"
    },
    "Transform": {
        "prefix": "Transform",
        "body": "Transform",
        "description": "dst-未定义的"
    },
    "Light": {
        "prefix": "Light",
        "body": "Light",
        "description": "dst-未定义的"
    },
    "Network": {
        "prefix": "Network",
        "body": "Network",
        "description": "dst-未定义的"
    },
    "SoundEmitter": {
        "prefix": "SoundEmitter",
        "body": "SoundEmitter",
        "description": "dst-未定义的"
    },
    "GetWorldPosition": {
        "prefix": "GetWorldPosition",
        "body": "GetWorldPosition",
        "description": "dst-未定义的"
    },
    "SetPosition": {
        "prefix": "SetPosition",
        "body": "SetPosition",
        "description": "dst-未定义的"
    },
    "deepcopy": {
        "prefix": "deepcopy",
        "body": "deepcopy",
        "description": "dst-未定义的"
    },
    "SpawnPrefab": {
        "prefix": "SpawnPrefab",
        "body": "SpawnPrefab",
        "description": "dst-未定义的"
    },
    "require": {
        "prefix": "require",
        "body": "require",
        "description": "dst-未定义的"
    },
    "modimport": {
        "prefix": "modimport",
        "body": "modimport",
        "description": "dst-未定义的"
    },
    "GUID": {
        "prefix": "GUID",
        "body": "GUID",
        "description": "dst-未定义的"
    },
    "HUD": {
        "prefix": "HUD",
        "body": "HUD",
        "description": "dst-未定义的"
    },
    "prefab": {
        "prefix": "prefab",
        "body": "prefab",
        "description": "dst-未定义的"
    },
    "animover": {
        "prefix": "animover",
        "body": "animover",
        "description": "dst-未定义的"
    },
    "idle": {
        "prefix": "idle",
        "body": "idle",
        "description": "dst-未定义的"
    },
    "GoToState": {
        "prefix": "GoToState",
        "body": "GoToState",
        "description": "dst-未定义的"
    },
    "HasTag": {
        "prefix": "HasTag",
        "body": "HasTag",
        "description": "dst-未定义的"
    },
    "HasStateTag": {
        "prefix": "HasStateTag",
        "body": "HasStateTag",
        "description": "dst-未定义的"
    },
    "Update": {
        "prefix": "Update",
        "body": "Update",
        "description": "dst-未定义的"
    },
    "OnLoad": {
        "prefix": "OnLoad",
        "body": "OnLoad",
        "description": "dst-未定义的"
    },
    "OnSave": {
        "prefix": "OnSave",
        "body": "OnSave",
        "description": "dst-未定义的"
    },
    "Remove": {
        "prefix": "Remove",
        "body": "Remove",
        "description": "dst-未定义的"
    },
    "GetDebugString": {
        "prefix": "GetDebugString",
        "body": "GetDebugString",
        "description": "dst-未定义的"
    },
    "GetTime": {
        "prefix": "GetTime",
        "body": "GetTime",
        "description": "dst-未定义的"
    },
    "帧": {
        "prefix": "FRAMES",
        "body": "FRAMES",
        "description": "常量,代表一帧"
    },
    "是否参与保存": {
        "prefix": "persists",
        "body": "persists",
        "description": "默认值为true.修改实体属性为false,那么不会被保存下来"
    },
    "不可点击的": {
        "prefix": "NOCLICK",
        "body": "NOCLICK",
        "description": "不可点击的<code>标签</code>"
    },
    "在库存中的": {
        "prefix": "INLIMBO",
        "body": "INLIMBO",
        "description": "在库存中的<code>标签</code>"
    },
    "专饰的": {
        "prefix": "DECOR",
        "body": "DECOR",
        "description": "专饰的<code>标签</code>"
    },
    "不会影响种植和部署": {
        "prefix": "NOBLOCK",
        "body": "NOBLOCK",
        "description": "不会影响种植和部署<code>标签</code>"
    },
    "私密的": {
        "prefix": "CLASSIFIED",
        "body": "CLASSIFIED",
        "description": "私密的<code>标签</code>"
    },
    "建筑物的": {
        "prefix": "structure",
        "body": "structure",
        "description": "建筑物的<code>标签</code>"
    },
    "墙体": {
        "prefix": "wall",
        "body": "wall",
        "description": "墙体<code>标签</code>"
    },
    "发热的": {
        "prefix": "HASHEATER",
        "body": "HASHEATER",
        "description": "发热的<code>标签</code>"
    },
    "特效的": {
        "prefix": "FX",
        "body": "FX",
        "description": "特效的<code>标签</code>"
    },
    "稀有的": {
        "prefix": "irreplaceable",
        "body": "irreplaceable",
        "description": "稀有的<code>标签</code>"
    },
    "饱食组件": {
        "prefix": "hunger",
        "body": "hunger",
        "description": "饱食组件"
    },
    "容器组件": {
        "prefix": "container",
        "body": "container",
        "description": "容器组件"
    },
    "库存组件": {
        "prefix": "inventoryitem",
        "body": "inventoryitem",
        "description": "库存组件"
    },
    "战斗组件": {
        "prefix": "combat",
        "body": "combat",
        "description": "战斗组件"
    },
    "部署组件": {
        "prefix": "deployable",
        "body": "deployable",
        "description": "部署组件"
    },
    "血量组件": {
        "prefix": "health",
        "body": "health",
        "description": "血量组件"
    },
    "移动组件": {
        "prefix": "locomotor",
        "body": "locomotor",
        "description": "移动组件"
    },
    "武器组件": {
        "prefix": "weapon",
        "body": "weapon",
        "description": "武器组件"
    },
    "护甲组件": {
        "prefix": "armor",
        "body": "armor",
        "description": "护甲组件"
    },
    "检查组件": {
        "prefix": "inspectable",
        "body": "inspectable",
        "description": "检查组件"
    },
    "计时组件": {
        "prefix": "timer",
        "body": "timer",
        "description": "计时组件"
    },
    "冰冻组件": {
        "prefix": "freezable",
        "body": "freezable",
        "description": "冰冻组件"
    },
    "跟随组件": {
        "prefix": "follower",
        "body": "follower",
        "description": "跟随组件"
    },
    "睡眠组件": {
        "prefix": "sleeper",
        "body": "sleeper",
        "description": "睡眠组件"
    },
    "装备组件": {
        "prefix": "equippable",
        "body": "equippable",
        "description": "装备组件"
    },
    "san组件": {
        "prefix": "sanity",
        "body": "sanity",
        "description": "san组件"
    },
    "新鲜值组件": {
        "prefix": "perishable",
        "body": "perishable",
        "description": "新鲜值组件"
    },
    "耐久组件": {
        "prefix": "finiteuses",
        "body": "finiteuses",
        "description": "耐久组件"
    },
    "燃料组件": {
        "prefix": "fueled",
        "body": "fueled",
        "description": "燃料组件"
    },
    "库存栏组件": {
        "prefix": "inventory",
        "body": "inventory",
        "description": "库存栏组件"
    },
    "Physics:增加对船的冲突碰撞 （不会被撞退）": {
        "prefix": "Physics:CollidesWith",
        "body": "Physics:CollidesWith(${1:COLLISION.OBSTACLES})",
        "description": "增加对船的冲突碰撞 （不会被撞退）"
    },
    "Physics:休眠状态下物理碰撞依旧生效": {
        "prefix": "Physics:SetDontRemoveOnSleep",
        "body": "Physics:SetDontRemoveOnSleep(${1:true})",
        "description": "休眠状态下物理碰撞依旧生效"
    },
    "Physics:关闭所有物理性(物理碰撞机全面暂停)": {
        "prefix": "Physics:SetActive",
        "body": "Physics:SetActive(${1:false})",
        "description": "关闭所有物理性(物理碰撞机全面暂停)"
    },
    "Physics:逻辑判断物理机是否处于工作状态": {
        "prefix": "Physics:IsActive",
        "body": "Physics:IsActive(${1:})",
        "description": "逻辑判断物理机是否处于工作状态"
    },
    "Physics:自由落体速率 0为不掉落，默认1质量": {
        "prefix": "Physics:SetMass",
        "body": "Physics:SetMass(${1:0})",
        "description": "自由落体速率 0为不掉落，默认1质量"
    },
    "Physics:物理范围": {
        "prefix": "Physics:SetSphere",
        "body": "Physics:SetSphere(${1:.5})",
        "description": "物理范围"
    },
    "Physics:设置摩擦": {
        "prefix": "Physics:SetFriction",
        "body": "Physics:SetFriction(${1:.1})",
        "description": "设置摩擦"
    },
    "Physics:设置阻尼 对速度的衰弱": {
        "prefix": "Physics:SetDamping",
        "body": "Physics:SetDamping(${1:0})",
        "description": "设置阻尼 对速度的衰弱"
    },
    "Physics:设置恢复 落地反弹力 反作用力": {
        "prefix": "Physics:SetRestitution",
        "body": "Physics:SetRestitution(${1:.5})",
        "description": "设置恢复 落地反弹力 反作用力"
    },
    "Physics:设置碰撞组": {
        "prefix": "Physics:SetCollisionGroup",
        "body": "Physics:SetCollisionGroup(${1:COLLISION.ITEMS})",
        "description": "设置碰撞组"
    },
    "Physics:清除冲突面": {
        "prefix": "Physics:ClearCollisionMask",
        "body": "Physics:ClearCollisionMask(${1:})",
        "description": "清除冲突面"
    },
    "Physics:物理碰撞体积，碰撞高度": {
        "prefix": "Physics:SetCapsule",
        "body": "Physics:SetCapsule(${1:rad},${2: 1})",
        "description": "物理碰撞体积，碰撞高度"
    },
    "Physics:中空类型的物理性": {
        "prefix": "Physics:SetCylinder",
        "body": "Physics:SetCylinder(${1:.6},${2: 2})",
        "description": "中空类型的物理性"
    },
    "Physics:设置三角形网格": {
        "prefix": "Physics:SetTriangleMesh",
        "body": "Physics:SetTriangleMesh(${1:PLAYER_COLLISION_MESH})",
        "description": "设置三角形网格"
    },
    "Physics:休眠时，物理特性不删除": {
        "prefix": "Physics:SetDontRemoveOnSleep",
        "body": "Physics:SetDontRemoveOnSleep(${1:true})",
        "description": "休眠时，物理特性不删除"
    },
    "Physics:设置碰撞关闭， 设定坐标后再开启碰撞": {
        "prefix": "Physics:SetCollides",
        "body": "Physics:SetCollides(${1:false})",
        "description": "设置碰撞关闭， 设定坐标后再开启碰撞"
    },
    "Physics:将自己约束到目标实体身上": {
        "prefix": "Physics:ConstrainTo",
        "body": "Physics:ConstrainTo(${1:target.entity})",
        "description": "将自己约束到目标实体身上"
    },
    "Physics:获取质量": {
        "prefix": "Physics:GetMass",
        "body": "Physics:GetMass(${1:})",
        "description": "获取质量"
    },
    "Physics:获取物理碰撞范围": {
        "prefix": "Physics:GetRadius",
        "body": "Physics:GetRadius(${1:})",
        "description": "获取物理碰撞范围"
    },
    "Physics:物理传送": {
        "prefix": "Physics:Teleport",
        "body": "Physics:Teleport(${1:x},${2:y},${3:z})",
        "description": "物理传送"
    },
    "Physics:清除转换历史记录": {
        "prefix": "Physics:ClearTransformationHistory",
        "body": "Physics:ClearTransformationHistory(${1:})",
        "description": "清除转换历史记录"
    },
    "Physics:获取速度向量": {
        "prefix": "Physics:GetVelocity",
        "body": "Physics:GetVelocity(${1:})",
        "description": "获取速度向量"
    },
    "Physics:物理运行覆盖": {
        "prefix": "Physics:SetMotorVelOverride",
        "body": "Physics:SetMotorVelOverride(${1:0},${2:0},${3:0})",
        "description": "物理运行覆盖"
    },
    "Physics:清除运行": {
        "prefix": "Physics:ClearMotorVelOverride",
        "body": "Physics:ClearMotorVelOverride(${1:})",
        "description": "清除运行"
    },
    "Physics:设置碰撞回调函数": {
        "prefix": "Physics:SetCollisionCallback",
        "body": "Physics:SetCollisionCallback(${1:OnCollide})",
        "description": "设置碰撞回调函数"
    },
    "Physics:获取当前速度": {
        "prefix": "Physics:GetMotorSpeed",
        "body": "Physics:GetMotorSpeed(${1:})",
        "description": "获取当前速度"
    },
    "Physics:获取当前三个方向上的速度分量": {
        "prefix": "Physics:GetMotorVel",
        "body": "Physics:GetMotorVel(${1:})",
        "description": "获取当前三个方向上的速度分量"
    }
}